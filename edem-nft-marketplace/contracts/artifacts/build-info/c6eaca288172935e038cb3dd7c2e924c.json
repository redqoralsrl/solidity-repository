{
	"id": "c6eaca288172935e038cb3dd7c2e924c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/RoyaltyManager.sol": {
				"content": "// TODO : RoyaltyManager.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165, IERC2981} from \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\n\nimport {IRoyaltyManager} from \"./interfaces/IRoyaltyManager.sol\";\nimport {IRoyalty} from \"./interfaces/IRoyalty.sol\";\n\ncontract RoyaltyManager is IRoyaltyManager, Ownable {\n    // https://eips.ethereum.org/EIPS/eip-2981\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    IRoyalty public immutable royalty;\n\n    constructor(address _royalty) {\n        royalty = IRoyalty(_royalty);\n    }\n\n    function recipientWithroyaltyDeductionAmount(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view override returns (address, uint256) {\n        (address receiver, uint256 royaltyAmount) = royalty.royaltyInfo(\n            collection,\n            amount\n        );\n\n        if ((receiver == address(0)) || (royaltyAmount == 0)) {\n            if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {\n                (receiver, royaltyAmount) = IERC2981(collection).royaltyInfo(\n                    tokenId,\n                    amount\n                );\n            }\n        }\n\n        return (receiver, royaltyAmount);\n    }\n}\n"
			},
			"hardhat/contracts/interfaces/IRoyalty.sol": {
				"content": "// TODO : IRoyaltyRegistry.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IRoyalty {\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function updateRoyaltyInfo(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external;\n\n    function royaltyInfo(\n        address collection,\n        uint256 amount\n    ) external view returns (address, uint256);\n\n    function royaltyInfoCollection(\n        address collection\n    ) external view returns (address, address, uint256);\n}\n"
			},
			"hardhat/contracts/interfaces/IRoyaltyManager.sol": {
				"content": "// TODO : IRoyaltyManager.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IRoyaltyManager {\n    function recipientWithroyaltyDeductionAmount(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view returns (address, uint256);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice)\n        external\n        view\n        returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/RoyaltyManager.sol": {
				"RoyaltyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royalty",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recipientWithroyaltyDeductionAmount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royalty",
							"outputs": [
								{
									"internalType": "contract IRoyalty",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/RoyaltyManager.sol\":357:1324  contract RoyaltyManager is IRoyaltyManager, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"hardhat/contracts/RoyaltyManager.sol\":565:640  constructor(address _royalty) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hardhat/contracts/RoyaltyManager.sol\":624:632  _royalty */\n  dup1\n    /* \"hardhat/contracts/RoyaltyManager.sol\":605:633  royalty = IRoyalty(_royalty) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"hardhat/contracts/RoyaltyManager.sol\":565:640  constructor(address _royalty) {... */\n  pop\n    /* \"hardhat/contracts/RoyaltyManager.sol\":357:1324  contract RoyaltyManager is IRoyaltyManager, Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":932:1051   */\ntag_35:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_37\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"hardhat/contracts/RoyaltyManager.sol\":357:1324  contract RoyaltyManager is IRoyaltyManager, Ownable {... */\ntag_12:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb7700257a9e4b89511ea592d7ef488a6959d733cec4df010484e5af3e427a407\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/RoyaltyManager.sol\":357:1324  contract RoyaltyManager is IRoyaltyManager, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29ee566c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x40e7b540\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"hardhat/contracts/RoyaltyManager.sol\":525:558  IRoyalty public immutable royalty */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/RoyaltyManager.sol\":646:1322  function recipientWithroyaltyDeductionAmount(... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/RoyaltyManager.sol\":462:518  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"hardhat/contracts/RoyaltyManager.sol\":525:558  IRoyalty public immutable royalty */\n    tag_10:\n      immutable(\"0xb7700257a9e4b89511ea592d7ef488a6959d733cec4df010484e5af3e427a407\")\n      dup2\n      jump\t// out\n        /* \"hardhat/contracts/RoyaltyManager.sol\":646:1322  function recipientWithroyaltyDeductionAmount(... */\n    tag_16:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":806:813  address */\n      0x00\n        /* \"hardhat/contracts/RoyaltyManager.sol\":815:822  uint256 */\n      dup1\n        /* \"hardhat/contracts/RoyaltyManager.sol\":835:851  address receiver */\n      0x00\n        /* \"hardhat/contracts/RoyaltyManager.sol\":853:874  uint256 royaltyAmount */\n      dup1\n        /* \"hardhat/contracts/RoyaltyManager.sol\":878:885  royalty */\n      immutable(\"0xb7700257a9e4b89511ea592d7ef488a6959d733cec4df010484e5af3e427a407\")\n        /* \"hardhat/contracts/RoyaltyManager.sol\":878:897  royalty.royaltyInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2782d6c7\n        /* \"hardhat/contracts/RoyaltyManager.sol\":911:921  collection */\n      dup9\n        /* \"hardhat/contracts/RoyaltyManager.sol\":935:941  amount */\n      dup8\n        /* \"hardhat/contracts/RoyaltyManager.sol\":878:951  royalty.royaltyInfo(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":834:951  (address receiver, uint256 royaltyAmount) = royalty.royaltyInfo(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hardhat/contracts/RoyaltyManager.sol\":987:988  0 */\n      0x00\n        /* \"hardhat/contracts/RoyaltyManager.sol\":967:989  receiver == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/RoyaltyManager.sol\":967:975  receiver */\n      dup3\n        /* \"hardhat/contracts/RoyaltyManager.sol\":967:989  receiver == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hardhat/contracts/RoyaltyManager.sol\":966:1014  (receiver == address(0)) || (royaltyAmount == 0) */\n      dup1\n      tag_39\n      jumpi\n      pop\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1012:1013  0 */\n      0x00\n        /* \"hardhat/contracts/RoyaltyManager.sol\":995:1008  royaltyAmount */\n      dup2\n        /* \"hardhat/contracts/RoyaltyManager.sol\":995:1013  royaltyAmount == 0 */\n      eq\n        /* \"hardhat/contracts/RoyaltyManager.sol\":966:1014  (receiver == address(0)) || (royaltyAmount == 0) */\n    tag_39:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":962:1273  if ((receiver == address(0)) || (royaltyAmount == 0)) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1042:1052  collection */\n      dup7\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1034:1071  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"hardhat/contracts/RoyaltyManager.sol\":508:518  0x2a55205a */\n      0x2a55205a\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1072:1092  INTERFACE_ID_ERC2981 */\n      0xe0\n      shl\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1034:1093  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1030:1263  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1150:1160  collection */\n      dup7\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1141:1173  IERC2981(collection).royaltyInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2a55205a\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1195:1202  tokenId */\n      dup8\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1224:1230  amount */\n      dup8\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1141:1248  IERC2981(collection).royaltyInfo(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_51:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1113:1248  (receiver, royaltyAmount) = IERC2981(collection).royaltyInfo(... */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1030:1263  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {... */\n    tag_46:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":962:1273  if ((receiver == address(0)) || (royaltyAmount == 0)) {... */\n    tag_40:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1291:1299  receiver */\n      dup2\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1301:1314  royaltyAmount */\n      dup2\n        /* \"hardhat/contracts/RoyaltyManager.sol\":1283:1315  return (receiver, royaltyAmount) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"hardhat/contracts/RoyaltyManager.sol\":646:1322  function recipientWithroyaltyDeductionAmount(... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hardhat/contracts/RoyaltyManager.sol\":462:518  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_26:\n        /* \"hardhat/contracts/RoyaltyManager.sol\":508:518  0x2a55205a */\n      0x2a55205a\n        /* \"hardhat/contracts/RoyaltyManager.sol\":462:518  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n      0xe0\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_75:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_76:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_77:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_108\n        /* \"#utility.yul\":306:340   */\n      tag_109\n        /* \"#utility.yul\":315:339   */\n      tag_110\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_75\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":306:340   */\n      tag_76\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":288:341   */\n      tag_75\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_78:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_112\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_77\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:627   */\n    tag_79:\n        /* \"#utility.yul\":551:560   */\n      0x00\n        /* \"#utility.yul\":584:621   */\n      tag_114\n        /* \"#utility.yul\":615:620   */\n      dup3\n        /* \"#utility.yul\":584:621   */\n      tag_78\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":571:621   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":633:796   */\n    tag_80:\n        /* \"#utility.yul\":736:789   */\n      tag_116\n        /* \"#utility.yul\":783:788   */\n      dup2\n        /* \"#utility.yul\":736:789   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":731:734   */\n      dup3\n        /* \"#utility.yul\":724:790   */\n      mstore\n        /* \"#utility.yul\":633:796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":802:1056   */\n    tag_12:\n        /* \"#utility.yul\":911:915   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":938:947   */\n      dup3\n        /* \"#utility.yul\":934:952   */\n      add\n        /* \"#utility.yul\":926:952   */\n      swap1\n      pop\n        /* \"#utility.yul\":962:1049   */\n      tag_118\n        /* \"#utility.yul\":1046:1047   */\n      0x00\n        /* \"#utility.yul\":1035:1044   */\n      dup4\n        /* \"#utility.yul\":1031:1048   */\n      add\n        /* \"#utility.yul\":1022:1028   */\n      dup5\n        /* \"#utility.yul\":962:1049   */\n      tag_80\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":802:1056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1143:1260   */\n    tag_82:\n        /* \"#utility.yul\":1252:1253   */\n      0x00\n        /* \"#utility.yul\":1249:1250   */\n      dup1\n        /* \"#utility.yul\":1242:1254   */\n      revert\n        /* \"#utility.yul\":1389:1485   */\n    tag_84:\n        /* \"#utility.yul\":1426:1433   */\n      0x00\n        /* \"#utility.yul\":1455:1479   */\n      tag_123\n        /* \"#utility.yul\":1473:1478   */\n      dup3\n        /* \"#utility.yul\":1455:1479   */\n      tag_75\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1444:1479   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1491:1613   */\n    tag_85:\n        /* \"#utility.yul\":1564:1588   */\n      tag_125\n        /* \"#utility.yul\":1582:1587   */\n      dup2\n        /* \"#utility.yul\":1564:1588   */\n      tag_84\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1557:1562   */\n      dup2\n        /* \"#utility.yul\":1554:1589   */\n      eq\n        /* \"#utility.yul\":1544:1607   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1603:1604   */\n      0x00\n        /* \"#utility.yul\":1600:1601   */\n      dup1\n        /* \"#utility.yul\":1593:1605   */\n      revert\n        /* \"#utility.yul\":1544:1607   */\n    tag_126:\n        /* \"#utility.yul\":1491:1613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1619:1758   */\n    tag_86:\n        /* \"#utility.yul\":1665:1670   */\n      0x00\n        /* \"#utility.yul\":1703:1709   */\n      dup2\n        /* \"#utility.yul\":1690:1710   */\n      calldataload\n        /* \"#utility.yul\":1681:1710   */\n      swap1\n      pop\n        /* \"#utility.yul\":1719:1752   */\n      tag_128\n        /* \"#utility.yul\":1746:1751   */\n      dup2\n        /* \"#utility.yul\":1719:1752   */\n      tag_85\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1619:1758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:1841   */\n    tag_87:\n        /* \"#utility.yul\":1801:1808   */\n      0x00\n        /* \"#utility.yul\":1830:1835   */\n      dup2\n        /* \"#utility.yul\":1819:1835   */\n      swap1\n      pop\n        /* \"#utility.yul\":1764:1841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1847:1969   */\n    tag_88:\n        /* \"#utility.yul\":1920:1944   */\n      tag_131\n        /* \"#utility.yul\":1938:1943   */\n      dup2\n        /* \"#utility.yul\":1920:1944   */\n      tag_87\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1913:1918   */\n      dup2\n        /* \"#utility.yul\":1910:1945   */\n      eq\n        /* \"#utility.yul\":1900:1963   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1956:1957   */\n      dup1\n        /* \"#utility.yul\":1949:1961   */\n      revert\n        /* \"#utility.yul\":1900:1963   */\n    tag_132:\n        /* \"#utility.yul\":1847:1969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1975:2114   */\n    tag_89:\n        /* \"#utility.yul\":2021:2026   */\n      0x00\n        /* \"#utility.yul\":2059:2065   */\n      dup2\n        /* \"#utility.yul\":2046:2066   */\n      calldataload\n        /* \"#utility.yul\":2037:2066   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2108   */\n      tag_134\n        /* \"#utility.yul\":2102:2107   */\n      dup2\n        /* \"#utility.yul\":2075:2108   */\n      tag_88\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1975:2114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2120:2739   */\n    tag_15:\n        /* \"#utility.yul\":2197:2203   */\n      0x00\n        /* \"#utility.yul\":2205:2211   */\n      dup1\n        /* \"#utility.yul\":2213:2219   */\n      0x00\n        /* \"#utility.yul\":2262:2264   */\n      0x60\n        /* \"#utility.yul\":2250:2259   */\n      dup5\n        /* \"#utility.yul\":2241:2248   */\n      dup7\n        /* \"#utility.yul\":2237:2260   */\n      sub\n        /* \"#utility.yul\":2233:2265   */\n      slt\n        /* \"#utility.yul\":2230:2349   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":2268:2347   */\n      tag_137\n      tag_82\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2230:2349   */\n    tag_136:\n        /* \"#utility.yul\":2388:2389   */\n      0x00\n        /* \"#utility.yul\":2413:2466   */\n      tag_138\n        /* \"#utility.yul\":2458:2465   */\n      dup7\n        /* \"#utility.yul\":2449:2455   */\n      dup3\n        /* \"#utility.yul\":2438:2447   */\n      dup8\n        /* \"#utility.yul\":2434:2456   */\n      add\n        /* \"#utility.yul\":2413:2466   */\n      tag_86\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2403:2466   */\n      swap4\n      pop\n        /* \"#utility.yul\":2359:2476   */\n      pop\n        /* \"#utility.yul\":2515:2517   */\n      0x20\n        /* \"#utility.yul\":2541:2594   */\n      tag_139\n        /* \"#utility.yul\":2586:2593   */\n      dup7\n        /* \"#utility.yul\":2577:2583   */\n      dup3\n        /* \"#utility.yul\":2566:2575   */\n      dup8\n        /* \"#utility.yul\":2562:2584   */\n      add\n        /* \"#utility.yul\":2541:2594   */\n      tag_89\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2531:2594   */\n      swap3\n      pop\n        /* \"#utility.yul\":2486:2604   */\n      pop\n        /* \"#utility.yul\":2643:2645   */\n      0x40\n        /* \"#utility.yul\":2669:2722   */\n      tag_140\n        /* \"#utility.yul\":2714:2721   */\n      dup7\n        /* \"#utility.yul\":2705:2711   */\n      dup3\n        /* \"#utility.yul\":2694:2703   */\n      dup8\n        /* \"#utility.yul\":2690:2712   */\n      add\n        /* \"#utility.yul\":2669:2722   */\n      tag_89\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2659:2722   */\n      swap2\n      pop\n        /* \"#utility.yul\":2614:2732   */\n      pop\n        /* \"#utility.yul\":2120:2739   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2745:2863   */\n    tag_90:\n        /* \"#utility.yul\":2832:2856   */\n      tag_142\n        /* \"#utility.yul\":2850:2855   */\n      dup2\n        /* \"#utility.yul\":2832:2856   */\n      tag_84\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2827:2830   */\n      dup3\n        /* \"#utility.yul\":2820:2857   */\n      mstore\n        /* \"#utility.yul\":2745:2863   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:2987   */\n    tag_91:\n        /* \"#utility.yul\":2956:2980   */\n      tag_144\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2956:2980   */\n      tag_87\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2951:2954   */\n      dup3\n        /* \"#utility.yul\":2944:2981   */\n      mstore\n        /* \"#utility.yul\":2869:2987   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2993:3325   */\n    tag_18:\n        /* \"#utility.yul\":3114:3118   */\n      0x00\n        /* \"#utility.yul\":3152:3154   */\n      0x40\n        /* \"#utility.yul\":3141:3150   */\n      dup3\n        /* \"#utility.yul\":3137:3155   */\n      add\n        /* \"#utility.yul\":3129:3155   */\n      swap1\n      pop\n        /* \"#utility.yul\":3165:3236   */\n      tag_146\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3222:3231   */\n      dup4\n        /* \"#utility.yul\":3218:3235   */\n      add\n        /* \"#utility.yul\":3209:3215   */\n      dup6\n        /* \"#utility.yul\":3165:3236   */\n      tag_90\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3246:3318   */\n      tag_147\n        /* \"#utility.yul\":3314:3316   */\n      0x20\n        /* \"#utility.yul\":3303:3312   */\n      dup4\n        /* \"#utility.yul\":3299:3317   */\n      add\n        /* \"#utility.yul\":3290:3296   */\n      dup5\n        /* \"#utility.yul\":3246:3318   */\n      tag_91\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2993:3325   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3553   */\n    tag_24:\n        /* \"#utility.yul\":3424:3428   */\n      0x00\n        /* \"#utility.yul\":3462:3464   */\n      0x20\n        /* \"#utility.yul\":3451:3460   */\n      dup3\n        /* \"#utility.yul\":3447:3465   */\n      add\n        /* \"#utility.yul\":3439:3465   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3546   */\n      tag_149\n        /* \"#utility.yul\":3543:3544   */\n      0x00\n        /* \"#utility.yul\":3532:3541   */\n      dup4\n        /* \"#utility.yul\":3528:3545   */\n      add\n        /* \"#utility.yul\":3519:3525   */\n      dup5\n        /* \"#utility.yul\":3475:3546   */\n      tag_90\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3331:3553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3559:3708   */\n    tag_92:\n        /* \"#utility.yul\":3595:3602   */\n      0x00\n        /* \"#utility.yul\":3635:3701   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3628:3633   */\n      dup3\n        /* \"#utility.yul\":3624:3702   */\n      and\n        /* \"#utility.yul\":3613:3702   */\n      swap1\n      pop\n        /* \"#utility.yul\":3559:3708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:3829   */\n    tag_93:\n        /* \"#utility.yul\":3799:3822   */\n      tag_152\n        /* \"#utility.yul\":3816:3821   */\n      dup2\n        /* \"#utility.yul\":3799:3822   */\n      tag_92\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3794:3797   */\n      dup3\n        /* \"#utility.yul\":3787:3823   */\n      mstore\n        /* \"#utility.yul\":3714:3829   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3835:4053   */\n    tag_28:\n        /* \"#utility.yul\":3926:3930   */\n      0x00\n        /* \"#utility.yul\":3964:3966   */\n      0x20\n        /* \"#utility.yul\":3953:3962   */\n      dup3\n        /* \"#utility.yul\":3949:3967   */\n      add\n        /* \"#utility.yul\":3941:3967   */\n      swap1\n      pop\n        /* \"#utility.yul\":3977:4046   */\n      tag_154\n        /* \"#utility.yul\":4043:4044   */\n      0x00\n        /* \"#utility.yul\":4032:4041   */\n      dup4\n        /* \"#utility.yul\":4028:4045   */\n      add\n        /* \"#utility.yul\":4019:4025   */\n      dup5\n        /* \"#utility.yul\":3977:4046   */\n      tag_93\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3835:4053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4059:4388   */\n    tag_31:\n        /* \"#utility.yul\":4118:4124   */\n      0x00\n        /* \"#utility.yul\":4167:4169   */\n      0x20\n        /* \"#utility.yul\":4155:4164   */\n      dup3\n        /* \"#utility.yul\":4146:4153   */\n      dup5\n        /* \"#utility.yul\":4142:4165   */\n      sub\n        /* \"#utility.yul\":4138:4170   */\n      slt\n        /* \"#utility.yul\":4135:4254   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4173:4252   */\n      tag_157\n      tag_82\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4135:4254   */\n    tag_156:\n        /* \"#utility.yul\":4293:4294   */\n      0x00\n        /* \"#utility.yul\":4318:4371   */\n      tag_158\n        /* \"#utility.yul\":4363:4370   */\n      dup5\n        /* \"#utility.yul\":4354:4360   */\n      dup3\n        /* \"#utility.yul\":4343:4352   */\n      dup6\n        /* \"#utility.yul\":4339:4361   */\n      add\n        /* \"#utility.yul\":4318:4371   */\n      tag_86\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4308:4371   */\n      swap2\n      pop\n        /* \"#utility.yul\":4264:4381   */\n      pop\n        /* \"#utility.yul\":4059:4388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4394:4537   */\n    tag_94:\n        /* \"#utility.yul\":4451:4456   */\n      0x00\n        /* \"#utility.yul\":4482:4488   */\n      dup2\n        /* \"#utility.yul\":4476:4489   */\n      mload\n        /* \"#utility.yul\":4467:4489   */\n      swap1\n      pop\n        /* \"#utility.yul\":4498:4531   */\n      tag_160\n        /* \"#utility.yul\":4525:4530   */\n      dup2\n        /* \"#utility.yul\":4498:4531   */\n      tag_85\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4394:4537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4543:4686   */\n    tag_95:\n        /* \"#utility.yul\":4600:4605   */\n      0x00\n        /* \"#utility.yul\":4631:4637   */\n      dup2\n        /* \"#utility.yul\":4625:4638   */\n      mload\n        /* \"#utility.yul\":4616:4638   */\n      swap1\n      pop\n        /* \"#utility.yul\":4647:4680   */\n      tag_162\n        /* \"#utility.yul\":4674:4679   */\n      dup2\n        /* \"#utility.yul\":4647:4680   */\n      tag_88\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4543:4686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4692:5199   */\n    tag_38:\n        /* \"#utility.yul\":4771:4777   */\n      0x00\n        /* \"#utility.yul\":4779:4785   */\n      dup1\n        /* \"#utility.yul\":4828:4830   */\n      0x40\n        /* \"#utility.yul\":4816:4825   */\n      dup4\n        /* \"#utility.yul\":4807:4814   */\n      dup6\n        /* \"#utility.yul\":4803:4826   */\n      sub\n        /* \"#utility.yul\":4799:4831   */\n      slt\n        /* \"#utility.yul\":4796:4915   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":4834:4913   */\n      tag_165\n      tag_82\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4796:4915   */\n    tag_164:\n        /* \"#utility.yul\":4954:4955   */\n      0x00\n        /* \"#utility.yul\":4979:5043   */\n      tag_166\n        /* \"#utility.yul\":5035:5042   */\n      dup6\n        /* \"#utility.yul\":5026:5032   */\n      dup3\n        /* \"#utility.yul\":5015:5024   */\n      dup7\n        /* \"#utility.yul\":5011:5033   */\n      add\n        /* \"#utility.yul\":4979:5043   */\n      tag_94\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4969:5043   */\n      swap3\n      pop\n        /* \"#utility.yul\":4925:5053   */\n      pop\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"#utility.yul\":5118:5182   */\n      tag_167\n        /* \"#utility.yul\":5174:5181   */\n      dup6\n        /* \"#utility.yul\":5165:5171   */\n      dup3\n        /* \"#utility.yul\":5154:5163   */\n      dup7\n        /* \"#utility.yul\":5150:5172   */\n      add\n        /* \"#utility.yul\":5118:5182   */\n      tag_95\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5108:5182   */\n      swap2\n      pop\n        /* \"#utility.yul\":5063:5192   */\n      pop\n        /* \"#utility.yul\":4692:5199   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5295   */\n    tag_96:\n        /* \"#utility.yul\":5239:5246   */\n      0x00\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5275:5288   */\n      iszero\n        /* \"#utility.yul\":5268:5289   */\n      iszero\n        /* \"#utility.yul\":5257:5289   */\n      swap1\n      pop\n        /* \"#utility.yul\":5205:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5417   */\n    tag_97:\n        /* \"#utility.yul\":5371:5392   */\n      tag_170\n        /* \"#utility.yul\":5386:5391   */\n      dup2\n        /* \"#utility.yul\":5371:5392   */\n      tag_96\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5364:5369   */\n      dup2\n        /* \"#utility.yul\":5361:5393   */\n      eq\n        /* \"#utility.yul\":5351:5411   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5407:5408   */\n      0x00\n        /* \"#utility.yul\":5404:5405   */\n      dup1\n        /* \"#utility.yul\":5397:5409   */\n      revert\n        /* \"#utility.yul\":5351:5411   */\n    tag_171:\n        /* \"#utility.yul\":5301:5417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5423:5560   */\n    tag_98:\n        /* \"#utility.yul\":5477:5482   */\n      0x00\n        /* \"#utility.yul\":5508:5514   */\n      dup2\n        /* \"#utility.yul\":5502:5515   */\n      mload\n        /* \"#utility.yul\":5493:5515   */\n      swap1\n      pop\n        /* \"#utility.yul\":5524:5554   */\n      tag_173\n        /* \"#utility.yul\":5548:5553   */\n      dup2\n        /* \"#utility.yul\":5524:5554   */\n      tag_97\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5423:5560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5566:5911   */\n    tag_45:\n        /* \"#utility.yul\":5633:5639   */\n      0x00\n        /* \"#utility.yul\":5682:5684   */\n      0x20\n        /* \"#utility.yul\":5670:5679   */\n      dup3\n        /* \"#utility.yul\":5661:5668   */\n      dup5\n        /* \"#utility.yul\":5657:5680   */\n      sub\n        /* \"#utility.yul\":5653:5685   */\n      slt\n        /* \"#utility.yul\":5650:5769   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5688:5767   */\n      tag_176\n      tag_82\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5650:5769   */\n    tag_175:\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5833:5894   */\n      tag_177\n        /* \"#utility.yul\":5886:5893   */\n      dup5\n        /* \"#utility.yul\":5877:5883   */\n      dup3\n        /* \"#utility.yul\":5866:5875   */\n      dup6\n        /* \"#utility.yul\":5862:5884   */\n      add\n        /* \"#utility.yul\":5833:5894   */\n      tag_98\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5823:5894   */\n      swap2\n      pop\n        /* \"#utility.yul\":5779:5904   */\n      pop\n        /* \"#utility.yul\":5566:5911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5917:6249   */\n    tag_48:\n        /* \"#utility.yul\":6038:6042   */\n      0x00\n        /* \"#utility.yul\":6076:6078   */\n      0x40\n        /* \"#utility.yul\":6065:6074   */\n      dup3\n        /* \"#utility.yul\":6061:6079   */\n      add\n        /* \"#utility.yul\":6053:6079   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6160   */\n      tag_179\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6146:6155   */\n      dup4\n        /* \"#utility.yul\":6142:6159   */\n      add\n        /* \"#utility.yul\":6133:6139   */\n      dup6\n        /* \"#utility.yul\":6089:6160   */\n      tag_91\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6170:6242   */\n      tag_180\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"#utility.yul\":6227:6236   */\n      dup4\n        /* \"#utility.yul\":6223:6241   */\n      add\n        /* \"#utility.yul\":6214:6220   */\n      dup5\n        /* \"#utility.yul\":6170:6242   */\n      tag_91\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5917:6249   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6255:6424   */\n    tag_99:\n        /* \"#utility.yul\":6339:6350   */\n      0x00\n        /* \"#utility.yul\":6373:6379   */\n      dup3\n        /* \"#utility.yul\":6368:6371   */\n      dup3\n        /* \"#utility.yul\":6361:6380   */\n      mstore\n        /* \"#utility.yul\":6413:6417   */\n      0x20\n        /* \"#utility.yul\":6408:6411   */\n      dup3\n        /* \"#utility.yul\":6404:6418   */\n      add\n        /* \"#utility.yul\":6389:6418   */\n      swap1\n      pop\n        /* \"#utility.yul\":6255:6424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6430:6655   */\n    tag_100:\n        /* \"#utility.yul\":6570:6604   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6566:6567   */\n      0x00\n        /* \"#utility.yul\":6558:6564   */\n      dup3\n        /* \"#utility.yul\":6554:6568   */\n      add\n        /* \"#utility.yul\":6547:6605   */\n      mstore\n        /* \"#utility.yul\":6639:6647   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6634:6636   */\n      0x20\n        /* \"#utility.yul\":6626:6632   */\n      dup3\n        /* \"#utility.yul\":6622:6637   */\n      add\n        /* \"#utility.yul\":6615:6648   */\n      mstore\n        /* \"#utility.yul\":6430:6655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6661:7027   */\n    tag_101:\n        /* \"#utility.yul\":6803:6806   */\n      0x00\n        /* \"#utility.yul\":6824:6891   */\n      tag_184\n        /* \"#utility.yul\":6888:6890   */\n      0x26\n        /* \"#utility.yul\":6883:6886   */\n      dup4\n        /* \"#utility.yul\":6824:6891   */\n      tag_99\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6817:6891   */\n      swap2\n      pop\n        /* \"#utility.yul\":6900:6993   */\n      tag_185\n        /* \"#utility.yul\":6989:6992   */\n      dup3\n        /* \"#utility.yul\":6900:6993   */\n      tag_100\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7018:7020   */\n      0x40\n        /* \"#utility.yul\":7013:7016   */\n      dup3\n        /* \"#utility.yul\":7009:7021   */\n      add\n        /* \"#utility.yul\":7002:7021   */\n      swap1\n      pop\n        /* \"#utility.yul\":6661:7027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7033:7452   */\n    tag_64:\n        /* \"#utility.yul\":7199:7203   */\n      0x00\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"#utility.yul\":7226:7235   */\n      dup3\n        /* \"#utility.yul\":7222:7240   */\n      add\n        /* \"#utility.yul\":7214:7240   */\n      swap1\n      pop\n        /* \"#utility.yul\":7286:7295   */\n      dup2\n        /* \"#utility.yul\":7280:7284   */\n      dup2\n        /* \"#utility.yul\":7276:7296   */\n      sub\n        /* \"#utility.yul\":7272:7273   */\n      0x00\n        /* \"#utility.yul\":7261:7270   */\n      dup4\n        /* \"#utility.yul\":7257:7274   */\n      add\n        /* \"#utility.yul\":7250:7297   */\n      mstore\n        /* \"#utility.yul\":7314:7445   */\n      tag_187\n        /* \"#utility.yul\":7440:7444   */\n      dup2\n        /* \"#utility.yul\":7314:7445   */\n      tag_101\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7306:7445   */\n      swap1\n      pop\n        /* \"#utility.yul\":7033:7452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7640   */\n    tag_102:\n        /* \"#utility.yul\":7598:7632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7594:7595   */\n      0x00\n        /* \"#utility.yul\":7586:7592   */\n      dup3\n        /* \"#utility.yul\":7582:7596   */\n      add\n        /* \"#utility.yul\":7575:7633   */\n      mstore\n        /* \"#utility.yul\":7458:7640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7646:8012   */\n    tag_103:\n        /* \"#utility.yul\":7788:7791   */\n      0x00\n        /* \"#utility.yul\":7809:7876   */\n      tag_190\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7868:7871   */\n      dup4\n        /* \"#utility.yul\":7809:7876   */\n      tag_99\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7802:7876   */\n      swap2\n      pop\n        /* \"#utility.yul\":7885:7978   */\n      tag_191\n        /* \"#utility.yul\":7974:7977   */\n      dup3\n        /* \"#utility.yul\":7885:7978   */\n      tag_102\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":8003:8005   */\n      0x20\n        /* \"#utility.yul\":7998:8001   */\n      dup3\n        /* \"#utility.yul\":7994:8006   */\n      add\n        /* \"#utility.yul\":7987:8006   */\n      swap1\n      pop\n        /* \"#utility.yul\":7646:8012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8018:8437   */\n    tag_72:\n        /* \"#utility.yul\":8184:8188   */\n      0x00\n        /* \"#utility.yul\":8222:8224   */\n      0x20\n        /* \"#utility.yul\":8211:8220   */\n      dup3\n        /* \"#utility.yul\":8207:8225   */\n      add\n        /* \"#utility.yul\":8199:8225   */\n      swap1\n      pop\n        /* \"#utility.yul\":8271:8280   */\n      dup2\n        /* \"#utility.yul\":8265:8269   */\n      dup2\n        /* \"#utility.yul\":8261:8281   */\n      sub\n        /* \"#utility.yul\":8257:8258   */\n      0x00\n        /* \"#utility.yul\":8246:8255   */\n      dup4\n        /* \"#utility.yul\":8242:8259   */\n      add\n        /* \"#utility.yul\":8235:8282   */\n      mstore\n        /* \"#utility.yul\":8299:8430   */\n      tag_193\n        /* \"#utility.yul\":8425:8429   */\n      dup2\n        /* \"#utility.yul\":8299:8430   */\n      tag_103\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8291:8430   */\n      swap1\n      pop\n        /* \"#utility.yul\":8018:8437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c59e2c64c28a84350b90a46e6d44fedb15ece943a6ae6aab2f5cfe497d327e664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_143": {
									"entryPoint": 136,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 144,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610bdf380380610bdf833981810160405281019061003291906101b7565b61004e61004361008860201b60201c565b61009060201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101e4565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018482610159565b9050919050565b61019481610179565b811461019f57600080fd5b50565b6000815190506101b18161018b565b92915050565b6000602082840312156101cd576101cc610154565b5b60006101db848285016101a2565b91505092915050565b6080516109d96102066000396000818161011a015261014401526109d96000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806329ee566c1461006757806340e7b54014610085578063715018a6146100b65780638da5cb5b146100c0578063b060dd86146100de578063f2fde38b146100fc575b600080fd5b61006f610118565b60405161007c91906105d0565b60405180910390f35b61009f600480360381019061009a9190610664565b61013c565b6040516100ad9291906106d5565b60405180910390f35b6100be61033c565b005b6100c8610350565b6040516100d591906106fe565b60405180910390f35b6100e6610379565b6040516100f39190610754565b60405180910390f35b6101166004803603810190610111919061076f565b610384565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632782d6c788876040518363ffffffff1660e01b815260040161019d9291906106d5565b6040805180830381865afa1580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd91906107c6565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061021c5750600081145b1561032c578673ffffffffffffffffffffffffffffffffffffffff166301ffc9a7632a55205a60e01b6040518263ffffffff1660e01b81526004016102619190610754565b602060405180830381865afa15801561027e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a2919061083e565b1561032b578673ffffffffffffffffffffffffffffffffffffffff16632a55205a87876040518363ffffffff1660e01b81526004016102e292919061086b565b6040805180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032291906107c6565b80925081935050505b5b8181935093505050935093915050565b610344610407565b61034e6000610485565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b632a55205a60e01b81565b61038c610407565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f290610917565b60405180910390fd5b61040481610485565b50565b61040f610549565b73ffffffffffffffffffffffffffffffffffffffff1661042d610350565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610983565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061059661059161058c84610551565b610571565b610551565b9050919050565b60006105a88261057b565b9050919050565b60006105ba8261059d565b9050919050565b6105ca816105af565b82525050565b60006020820190506105e560008301846105c1565b92915050565b600080fd5b60006105fb82610551565b9050919050565b61060b816105f0565b811461061657600080fd5b50565b60008135905061062881610602565b92915050565b6000819050919050565b6106418161062e565b811461064c57600080fd5b50565b60008135905061065e81610638565b92915050565b60008060006060848603121561067d5761067c6105eb565b5b600061068b86828701610619565b935050602061069c8682870161064f565b92505060406106ad8682870161064f565b9150509250925092565b6106c0816105f0565b82525050565b6106cf8161062e565b82525050565b60006040820190506106ea60008301856106b7565b6106f760208301846106c6565b9392505050565b600060208201905061071360008301846106b7565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61074e81610719565b82525050565b60006020820190506107696000830184610745565b92915050565b600060208284031215610785576107846105eb565b5b600061079384828501610619565b91505092915050565b6000815190506107ab81610602565b92915050565b6000815190506107c081610638565b92915050565b600080604083850312156107dd576107dc6105eb565b5b60006107eb8582860161079c565b92505060206107fc858286016107b1565b9150509250929050565b60008115159050919050565b61081b81610806565b811461082657600080fd5b50565b60008151905061083881610812565b92915050565b600060208284031215610854576108536105eb565b5b600061086284828501610829565b91505092915050565b600060408201905061088060008301856106c6565b61088d60208301846106c6565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610901602683610894565b915061090c826108a5565b604082019050919050565b60006020820190508181036000830152610930816108f4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061096d602083610894565b915061097882610937565b602082019050919050565b6000602082019050818103600083015261099c81610960565b905091905056fea26469706673582212206c59e2c64c28a84350b90a46e6d44fedb15ece943a6ae6aab2f5cfe497d327e664736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBDF CODESIZE SUB DUP1 PUSH2 0xBDF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x4E PUSH2 0x43 PUSH2 0x88 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x90 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184 DUP3 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x179 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B1 DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x154 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB DUP5 DUP3 DUP6 ADD PUSH2 0x1A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x9D9 PUSH2 0x206 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x11A ADD MSTORE PUSH2 0x144 ADD MSTORE PUSH2 0x9D9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29EE566C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x40E7B540 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2782D6C7 DUP9 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21C JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x32C JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x2A55205A PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST ISZERO PUSH2 0x32B JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A55205A DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP3 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x344 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x34E PUSH1 0x0 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x2A55205A PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x485 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x40F PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x42D PUSH2 0x350 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 PUSH2 0x591 PUSH2 0x58C DUP5 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 DUP3 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP3 PUSH2 0x59D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x628 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x62E JUMP JUMPDEST DUP2 EQ PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65E DUP2 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x67D JUMPI PUSH2 0x67C PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68B DUP7 DUP3 DUP8 ADD PUSH2 0x619 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x69C DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6AD DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x6C0 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x62E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x6F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x713 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x769 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP3 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AB DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP6 DUP3 DUP7 ADD PUSH2 0x79C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7FC DUP6 DUP3 DUP7 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81B DUP2 PUSH2 0x806 JUMP JUMPDEST DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x838 DUP2 PUSH2 0x812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x880 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x88D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH1 0x26 DUP4 PUSH2 0x894 JUMP JUMPDEST SWAP2 POP PUSH2 0x90C DUP3 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x930 DUP2 PUSH2 0x8F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96D PUSH1 0x20 DUP4 PUSH2 0x894 JUMP JUMPDEST SWAP2 POP PUSH2 0x978 DUP3 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x99C DUP2 PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x59E2C64C28A84350B90A46E6D4 0x4F 0xED 0xB1 0x5E 0xCE SWAP5 GASPRICE PUSH11 0xE6AAB2F5CFE497D327E664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "357:967:4:-:0;;;565:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;624:8:4;605:28;;;;;;;;;;565:75;357:967;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;357:967:4:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC2981_183": {
									"entryPoint": 889,
									"id": 183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1031,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_143": {
									"entryPoint": 1353,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1157,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 848,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recipientWithroyaltyDeductionAmount_261": {
									"entryPoint": 316,
									"id": 261,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@renounceOwnership_68": {
									"entryPoint": 828,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royalty_186": {
									"entryPoint": 280,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 900,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IRoyalty_$303_to_t_address_fromStack": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IRoyalty_$303__to_t_address__fromStack_reversed": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IRoyalty_$303_to_t_address": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8440:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "188:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "157:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "167:3:7",
														"type": ""
													}
												],
												"src": "139:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "275:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "245:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "255:9:7",
														"type": ""
													}
												],
												"src": "205:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "413:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "423:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "403:9:7",
														"type": ""
													}
												],
												"src": "353:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "561:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "571:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "615:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "584:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "571:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IRoyalty_$303_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "541:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "551:9:7",
														"type": ""
													}
												],
												"src": "485:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "714:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "731:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "783:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IRoyalty_$303_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "736:46:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "736:53:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:66:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IRoyalty_$303_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "702:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "709:3:7",
														"type": ""
													}
												],
												"src": "633:163:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "916:140:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "926:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "938:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "934:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "926:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1022:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1035:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1046:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IRoyalty_$303_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "962:59:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:87:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:87:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IRoyalty_$303__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "888:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "802:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1102:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1122:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1095:6:7",
														"type": ""
													}
												],
												"src": "1062:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1232:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1143:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1355:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1266:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1434:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1444:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1473:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1455:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1444:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1416:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1426:7:7",
														"type": ""
													}
												],
												"src": "1389:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1534:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1557:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1564:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1564:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1554:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:43:7"
															},
															"nodeType": "YulIf",
															"src": "1544:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:7",
														"type": ""
													}
												],
												"src": "1491:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1703:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1690:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1681:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1719:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1719:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1649:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1657:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1665:5:7",
														"type": ""
													}
												],
												"src": "1619:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1819:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1830:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1819:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1791:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1801:7:7",
														"type": ""
													}
												],
												"src": "1764:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1947:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:43:7"
															},
															"nodeType": "YulIf",
															"src": "1900:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:7",
														"type": ""
													}
												],
												"src": "1847:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2027:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2037:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2059:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2046:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2102:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2075:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2013:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:7",
														"type": ""
													}
												],
												"src": "1975:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2220:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2266:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2268:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2268:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2268:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2241:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2237:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2233:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:32:7"
															},
															"nodeType": "YulIf",
															"src": "2230:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2359:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2374:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2378:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2403:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2438:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2449:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2434:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2458:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2413:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2413:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2403:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2486:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2501:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2505:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2531:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2566:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2577:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2562:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2562:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2586:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2541:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2531:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2614:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2629:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2633:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2659:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2694:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2705:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2690:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2690:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2714:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2669:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2659:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2174:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2185:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2197:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2205:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2213:6:7",
														"type": ""
													}
												],
												"src": "2120:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2810:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2827:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2850:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2832:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2832:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2820:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2798:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2805:3:7",
														"type": ""
													}
												],
												"src": "2745:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2951:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2974:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2956:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2956:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2944:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2922:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2929:3:7",
														"type": ""
													}
												],
												"src": "2869:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3129:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3141:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3137:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3129:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3209:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3222:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3233:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3165:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3290:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3246:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3246:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3246:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3083:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3095:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3103:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3114:4:7",
														"type": ""
													}
												],
												"src": "2993:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3429:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3439:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3451:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3462:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3439:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3543:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3475:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3475:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3401:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3413:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3424:4:7",
														"type": ""
													}
												],
												"src": "3331:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3613:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3628:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3635:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3624:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3613:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3585:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3595:7:7",
														"type": ""
													}
												],
												"src": "3559:149:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3777:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3794:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3816:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3799:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3787:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3787:36:7"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3765:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3772:3:7",
														"type": ""
													}
												],
												"src": "3714:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3931:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3941:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3953:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3949:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3941:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4019:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4043:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4028:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4028:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3977:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3977:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3903:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3915:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3926:4:7",
														"type": ""
													}
												],
												"src": "3835:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4171:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4173:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4173:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4146:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4155:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4142:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4138:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:32:7"
															},
															"nodeType": "YulIf",
															"src": "4135:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4264:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4279:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4283:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4308:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4343:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4354:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4339:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4339:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4363:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4318:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4308:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4095:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4106:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4118:6:7",
														"type": ""
													}
												],
												"src": "4059:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4457:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4467:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4482:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4476:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4467:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4525:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4498:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4498:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4435:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4443:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4451:5:7",
														"type": ""
													}
												],
												"src": "4394:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4606:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4616:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4631:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4625:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4616:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4674:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4647:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4584:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4592:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4600:5:7",
														"type": ""
													}
												],
												"src": "4543:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4786:413:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4832:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4834:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4834:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4834:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4807:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4803:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4799:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:32:7"
															},
															"nodeType": "YulIf",
															"src": "4796:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4925:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4940:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4944:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4969:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5015:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5026:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5011:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5011:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5035:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4979:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4969:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5063:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5078:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5082:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5108:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5154:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5165:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5150:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5150:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5118:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5118:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5108:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4748:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4759:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4771:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4779:6:7",
														"type": ""
													}
												],
												"src": "4692:507:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5247:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5257:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5282:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5275:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5257:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5229:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5239:7:7",
														"type": ""
													}
												],
												"src": "5205:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5341:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5395:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5404:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5407:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5397:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5397:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5397:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5364:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5386:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5371:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5371:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:40:7"
															},
															"nodeType": "YulIf",
															"src": "5351:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5334:5:7",
														"type": ""
													}
												],
												"src": "5301:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5483:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5493:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5508:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5502:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5493:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5548:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5524:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5461:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5469:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5477:5:7",
														"type": ""
													}
												],
												"src": "5423:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5686:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5688:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5688:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5688:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5661:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5653:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:32:7"
															},
															"nodeType": "YulIf",
															"src": "5650:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5779:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5794:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5808:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5798:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5823:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5866:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5877:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5862:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5862:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5886:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5833:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5833:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5823:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5610:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5621:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5633:6:7",
														"type": ""
													}
												],
												"src": "5566:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6053:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6065:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6076:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6061:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6053:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6133:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6089:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6089:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6227:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6238:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6223:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6170:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6007:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6019:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6027:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6038:4:7",
														"type": ""
													}
												],
												"src": "5917:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6351:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6368:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6373:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6361:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6389:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6408:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6413:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6404:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6389:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6323:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6328:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6339:11:7",
														"type": ""
													}
												],
												"src": "6255:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6536:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6558:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6566:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6554:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6570:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6626:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6634:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6622:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6639:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6528:6:7",
														"type": ""
													}
												],
												"src": "6430:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6807:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6817:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6883:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6888:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6824:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6817:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6989:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "6900:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6900:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6900:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7002:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7013:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7009:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7002:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6795:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6803:3:7",
														"type": ""
													}
												],
												"src": "6661:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7204:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7214:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7226:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7222:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7214:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7261:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7272:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7280:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7276:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7276:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7250:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7306:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7440:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7314:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7306:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7184:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7199:4:7",
														"type": ""
													}
												],
												"src": "7033:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7564:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7586:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7598:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7556:6:7",
														"type": ""
													}
												],
												"src": "7458:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7792:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7802:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7868:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7809:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7802:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7974:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7885:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7987:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7998:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7994:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7994:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7987:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7780:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7788:3:7",
														"type": ""
													}
												],
												"src": "7646:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8189:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8199:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8207:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8207:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8199:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8257:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8265:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8261:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8261:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8291:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8425:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8299:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8291:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8169:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8184:4:7",
														"type": ""
													}
												],
												"src": "8018:419:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRoyalty_$303_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRoyalty_$303_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRoyalty_$303_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRoyalty_$303__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRoyalty_$303_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"186": [
									{
										"length": 32,
										"start": 282
									},
									{
										"length": 32,
										"start": 324
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806329ee566c1461006757806340e7b54014610085578063715018a6146100b65780638da5cb5b146100c0578063b060dd86146100de578063f2fde38b146100fc575b600080fd5b61006f610118565b60405161007c91906105d0565b60405180910390f35b61009f600480360381019061009a9190610664565b61013c565b6040516100ad9291906106d5565b60405180910390f35b6100be61033c565b005b6100c8610350565b6040516100d591906106fe565b60405180910390f35b6100e6610379565b6040516100f39190610754565b60405180910390f35b6101166004803603810190610111919061076f565b610384565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632782d6c788876040518363ffffffff1660e01b815260040161019d9291906106d5565b6040805180830381865afa1580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd91906107c6565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061021c5750600081145b1561032c578673ffffffffffffffffffffffffffffffffffffffff166301ffc9a7632a55205a60e01b6040518263ffffffff1660e01b81526004016102619190610754565b602060405180830381865afa15801561027e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a2919061083e565b1561032b578673ffffffffffffffffffffffffffffffffffffffff16632a55205a87876040518363ffffffff1660e01b81526004016102e292919061086b565b6040805180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032291906107c6565b80925081935050505b5b8181935093505050935093915050565b610344610407565b61034e6000610485565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b632a55205a60e01b81565b61038c610407565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f290610917565b60405180910390fd5b61040481610485565b50565b61040f610549565b73ffffffffffffffffffffffffffffffffffffffff1661042d610350565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610983565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061059661059161058c84610551565b610571565b610551565b9050919050565b60006105a88261057b565b9050919050565b60006105ba8261059d565b9050919050565b6105ca816105af565b82525050565b60006020820190506105e560008301846105c1565b92915050565b600080fd5b60006105fb82610551565b9050919050565b61060b816105f0565b811461061657600080fd5b50565b60008135905061062881610602565b92915050565b6000819050919050565b6106418161062e565b811461064c57600080fd5b50565b60008135905061065e81610638565b92915050565b60008060006060848603121561067d5761067c6105eb565b5b600061068b86828701610619565b935050602061069c8682870161064f565b92505060406106ad8682870161064f565b9150509250925092565b6106c0816105f0565b82525050565b6106cf8161062e565b82525050565b60006040820190506106ea60008301856106b7565b6106f760208301846106c6565b9392505050565b600060208201905061071360008301846106b7565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61074e81610719565b82525050565b60006020820190506107696000830184610745565b92915050565b600060208284031215610785576107846105eb565b5b600061079384828501610619565b91505092915050565b6000815190506107ab81610602565b92915050565b6000815190506107c081610638565b92915050565b600080604083850312156107dd576107dc6105eb565b5b60006107eb8582860161079c565b92505060206107fc858286016107b1565b9150509250929050565b60008115159050919050565b61081b81610806565b811461082657600080fd5b50565b60008151905061083881610812565b92915050565b600060208284031215610854576108536105eb565b5b600061086284828501610829565b91505092915050565b600060408201905061088060008301856106c6565b61088d60208301846106c6565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610901602683610894565b915061090c826108a5565b604082019050919050565b60006020820190508181036000830152610930816108f4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061096d602083610894565b915061097882610937565b602082019050919050565b6000602082019050818103600083015261099c81610960565b905091905056fea26469706673582212206c59e2c64c28a84350b90a46e6d44fedb15ece943a6ae6aab2f5cfe497d327e664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29EE566C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x40E7B540 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2782D6C7 DUP9 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21C JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x32C JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x2A55205A PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST ISZERO PUSH2 0x32B JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A55205A DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP3 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x344 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x34E PUSH1 0x0 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x2A55205A PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x485 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x40F PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x42D PUSH2 0x350 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 PUSH2 0x591 PUSH2 0x58C DUP5 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 DUP3 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP3 PUSH2 0x59D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x628 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x62E JUMP JUMPDEST DUP2 EQ PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65E DUP2 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x67D JUMPI PUSH2 0x67C PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68B DUP7 DUP3 DUP8 ADD PUSH2 0x619 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x69C DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6AD DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x6C0 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x62E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x6F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x713 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x769 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP3 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AB DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP6 DUP3 DUP7 ADD PUSH2 0x79C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7FC DUP6 DUP3 DUP7 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81B DUP2 PUSH2 0x806 JUMP JUMPDEST DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x838 DUP2 PUSH2 0x812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0x5EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x880 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x88D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH1 0x26 DUP4 PUSH2 0x894 JUMP JUMPDEST SWAP2 POP PUSH2 0x90C DUP3 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x930 DUP2 PUSH2 0x8F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96D PUSH1 0x20 DUP4 PUSH2 0x894 JUMP JUMPDEST SWAP2 POP PUSH2 0x978 DUP3 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x99C DUP2 PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x59E2C64C28A84350B90A46E6D4 0x4F 0xED 0xB1 0x5E 0xCE SWAP5 GASPRICE PUSH11 0xE6AAB2F5CFE497D327E664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "357:967:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:676;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:56:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;525:33:4;;;:::o;646:676::-;806:7;815;835:16;853:21;878:7;:19;;;911:10;935:6;878:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;834:117;;;;987:1;967:22;;:8;:22;;;966:48;;;;1012:1;995:13;:18;966:48;962:311;;;1042:10;1034:37;;;508:10;1072:20;;1034:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1030:233;;;1150:10;1141:32;;;1195:7;1224:6;1141:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1113:135;;;;;;;;1030:233;962:311;1291:8;1301:13;1283:32;;;;;;646:676;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;462:56:4:-;508:10;462:56;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:142::-;551:9;584:37;615:5;584:37;:::i;:::-;571:50;;485:142;;;:::o;633:163::-;736:53;783:5;736:53;:::i;:::-;731:3;724:66;633:163;;:::o;802:254::-;911:4;949:2;938:9;934:18;926:26;;962:87;1046:1;1035:9;1031:17;1022:6;962:87;:::i;:::-;802:254;;;;:::o;1143:117::-;1252:1;1249;1242:12;1389:96;1426:7;1455:24;1473:5;1455:24;:::i;:::-;1444:35;;1389:96;;;:::o;1491:122::-;1564:24;1582:5;1564:24;:::i;:::-;1557:5;1554:35;1544:63;;1603:1;1600;1593:12;1544:63;1491:122;:::o;1619:139::-;1665:5;1703:6;1690:20;1681:29;;1719:33;1746:5;1719:33;:::i;:::-;1619:139;;;;:::o;1764:77::-;1801:7;1830:5;1819:16;;1764:77;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:139::-;2021:5;2059:6;2046:20;2037:29;;2075:33;2102:5;2075:33;:::i;:::-;1975:139;;;;:::o;2120:619::-;2197:6;2205;2213;2262:2;2250:9;2241:7;2237:23;2233:32;2230:119;;;2268:79;;:::i;:::-;2230:119;2388:1;2413:53;2458:7;2449:6;2438:9;2434:22;2413:53;:::i;:::-;2403:63;;2359:117;2515:2;2541:53;2586:7;2577:6;2566:9;2562:22;2541:53;:::i;:::-;2531:63;;2486:118;2643:2;2669:53;2714:7;2705:6;2694:9;2690:22;2669:53;:::i;:::-;2659:63;;2614:118;2120:619;;;;;:::o;2745:118::-;2832:24;2850:5;2832:24;:::i;:::-;2827:3;2820:37;2745:118;;:::o;2869:::-;2956:24;2974:5;2956:24;:::i;:::-;2951:3;2944:37;2869:118;;:::o;2993:332::-;3114:4;3152:2;3141:9;3137:18;3129:26;;3165:71;3233:1;3222:9;3218:17;3209:6;3165:71;:::i;:::-;3246:72;3314:2;3303:9;3299:18;3290:6;3246:72;:::i;:::-;2993:332;;;;;:::o;3331:222::-;3424:4;3462:2;3451:9;3447:18;3439:26;;3475:71;3543:1;3532:9;3528:17;3519:6;3475:71;:::i;:::-;3331:222;;;;:::o;3559:149::-;3595:7;3635:66;3628:5;3624:78;3613:89;;3559:149;;;:::o;3714:115::-;3799:23;3816:5;3799:23;:::i;:::-;3794:3;3787:36;3714:115;;:::o;3835:218::-;3926:4;3964:2;3953:9;3949:18;3941:26;;3977:69;4043:1;4032:9;4028:17;4019:6;3977:69;:::i;:::-;3835:218;;;;:::o;4059:329::-;4118:6;4167:2;4155:9;4146:7;4142:23;4138:32;4135:119;;;4173:79;;:::i;:::-;4135:119;4293:1;4318:53;4363:7;4354:6;4343:9;4339:22;4318:53;:::i;:::-;4308:63;;4264:117;4059:329;;;;:::o;4394:143::-;4451:5;4482:6;4476:13;4467:22;;4498:33;4525:5;4498:33;:::i;:::-;4394:143;;;;:::o;4543:::-;4600:5;4631:6;4625:13;4616:22;;4647:33;4674:5;4647:33;:::i;:::-;4543:143;;;;:::o;4692:507::-;4771:6;4779;4828:2;4816:9;4807:7;4803:23;4799:32;4796:119;;;4834:79;;:::i;:::-;4796:119;4954:1;4979:64;5035:7;5026:6;5015:9;5011:22;4979:64;:::i;:::-;4969:74;;4925:128;5092:2;5118:64;5174:7;5165:6;5154:9;5150:22;5118:64;:::i;:::-;5108:74;;5063:129;4692:507;;;;;:::o;5205:90::-;5239:7;5282:5;5275:13;5268:21;5257:32;;5205:90;;;:::o;5301:116::-;5371:21;5386:5;5371:21;:::i;:::-;5364:5;5361:32;5351:60;;5407:1;5404;5397:12;5351:60;5301:116;:::o;5423:137::-;5477:5;5508:6;5502:13;5493:22;;5524:30;5548:5;5524:30;:::i;:::-;5423:137;;;;:::o;5566:345::-;5633:6;5682:2;5670:9;5661:7;5657:23;5653:32;5650:119;;;5688:79;;:::i;:::-;5650:119;5808:1;5833:61;5886:7;5877:6;5866:9;5862:22;5833:61;:::i;:::-;5823:71;;5779:125;5566:345;;;;:::o;5917:332::-;6038:4;6076:2;6065:9;6061:18;6053:26;;6089:71;6157:1;6146:9;6142:17;6133:6;6089:71;:::i;:::-;6170:72;6238:2;6227:9;6223:18;6214:6;6170:72;:::i;:::-;5917:332;;;;;:::o;6255:169::-;6339:11;6373:6;6368:3;6361:19;6413:4;6408:3;6404:14;6389:29;;6255:169;;;;:::o;6430:225::-;6570:34;6566:1;6558:6;6554:14;6547:58;6639:8;6634:2;6626:6;6622:15;6615:33;6430:225;:::o;6661:366::-;6803:3;6824:67;6888:2;6883:3;6824:67;:::i;:::-;6817:74;;6900:93;6989:3;6900:93;:::i;:::-;7018:2;7013:3;7009:12;7002:19;;6661:366;;;:::o;7033:419::-;7199:4;7237:2;7226:9;7222:18;7214:26;;7286:9;7280:4;7276:20;7272:1;7261:9;7257:17;7250:47;7314:131;7440:4;7314:131;:::i;:::-;7306:139;;7033:419;;;:::o;7458:182::-;7598:34;7594:1;7586:6;7582:14;7575:58;7458:182;:::o;7646:366::-;7788:3;7809:67;7873:2;7868:3;7809:67;:::i;:::-;7802:74;;7885:93;7974:3;7885:93;:::i;:::-;8003:2;7998:3;7994:12;7987:19;;7646:366;;;:::o;8018:419::-;8184:4;8222:2;8211:9;8207:18;8199:26;;8271:9;8265:4;8261:20;8257:1;8246:9;8242:17;8235:47;8299:131;8425:4;8299:131;:::i;:::-;8291:139;;8018:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "504200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC2981()": "407",
								"owner()": "2566",
								"recipientWithroyaltyDeductionAmount(address,uint256,uint256)": "infinite",
								"renounceOwnership()": "30420",
								"royalty()": "infinite",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 565,
									"end": 640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 640,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 624,
									"end": 632,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 605,
									"end": 633,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 605,
									"end": 633,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 605,
									"end": 633,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 605,
									"end": 633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 565,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "186"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 1324,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c59e2c64c28a84350b90a46e6d44fedb15ece943a6ae6aab2f5cfe497d327e664736f6c63430008130033",
									".code": [
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "29EE566C"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40E7B540"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 1324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 525,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 525,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 646,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 646,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 646,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 525,
											"end": 558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "2782D6C7"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 878,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 878,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 878,
											"end": 951,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 878,
											"end": 951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 834,
											"end": 951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 834,
											"end": 951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 967,
											"end": 975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 967,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 967,
											"end": 989,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 966,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1273,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1273,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1052,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1071,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1071,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1071,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 508,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A"
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1034,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1034,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1263,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1030,
											"end": 1263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A"
										},
										{
											"begin": 1195,
											"end": 1202,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1230,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1141,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1141,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1263,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1030,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1273,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 1322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 508,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 518,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 627,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 485,
											"end": 627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 584,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 584,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 584,
											"end": 621,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 584,
											"end": 621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 571,
											"end": 621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 571,
											"end": 621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 485,
											"end": 627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 485,
											"end": 627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 633,
											"end": 796,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 633,
											"end": 796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 783,
											"end": 788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 736,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 736,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 736,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 731,
											"end": 734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 724,
											"end": 790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 633,
											"end": 796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 633,
											"end": 796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 633,
											"end": 796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 911,
											"end": 915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 934,
											"end": 952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1028,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 962,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1049,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 962,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 802,
											"end": 1056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1260,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1143,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1389,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1473,
											"end": 1478,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1455,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1613,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1491,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1564,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1589,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1544,
											"end": 1607,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1607,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1544,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1710,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1719,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1752,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1719,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1841,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1764,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1920,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 1945,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2075,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2248,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2230,
											"end": 2349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2268,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2268,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2347,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2268,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2349,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2230,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2413,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2466,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2586,
											"end": 2593,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2541,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2594,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2541,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2594,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2669,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2722,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2669,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2745,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2832,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2856,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2832,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2830,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2869,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2956,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 2980,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2956,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 2954,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2981,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3215,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3165,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3236,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3165,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3314,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3246,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3318,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3246,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3475,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3708,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3559,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3701,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3628,
											"end": 3633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3714,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3816,
											"end": 3821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3799,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3977,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4165,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4170,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4254,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4135,
											"end": 4254,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4173,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4173,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4252,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4173,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4254,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4135,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4363,
											"end": 4370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4352,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4318,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4264,
											"end": 4381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4525,
											"end": 4530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4498,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4531,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4498,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 4638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4674,
											"end": 4679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4647,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4680,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4647,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 4777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4814,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4826,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4915,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4796,
											"end": 4915,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4834,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4834,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4913,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4834,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4915,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4796,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5035,
											"end": 5042,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4979,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5043,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4979,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5174,
											"end": 5181,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5118,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5295,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5205,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5288,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5417,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5301,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5371,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5386,
											"end": 5391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5371,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5371,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5371,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5371,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5393,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5351,
											"end": 5411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5411,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5351,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5515,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5548,
											"end": 5553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5524,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5554,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5524,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5668,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5680,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5685,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5650,
											"end": 5769,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5688,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5769,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5650,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5833,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5886,
											"end": 5893,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5866,
											"end": 5875,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5833,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5894,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5833,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6078,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6089,
											"end": 6160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6170,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 6249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6655,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6430,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6566,
											"end": 6567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6647,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6634,
											"end": 6636,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6615,
											"end": 6648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 7027,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6661,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6883,
											"end": 6886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6824,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6891,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6824,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6900,
											"end": 6993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6993,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6900,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7002,
											"end": 7021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7002,
											"end": 7021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 7027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 7027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 7027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 7027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7452,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7033,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7296,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7297,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7440,
											"end": 7444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7314,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7445,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7314,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7640,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7458,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 8012,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 7646,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7868,
											"end": 7871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7809,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7876,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7809,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7974,
											"end": 7977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7885,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7885,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7998,
											"end": 8001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 8012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 8012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 8012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 8012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8437,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 8018,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8211,
											"end": 8220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8269,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8281,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8242,
											"end": 8259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8425,
											"end": 8429,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8299,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8430,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8299,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"hardhat/contracts/RoyaltyManager.sol",
								"hardhat/contracts/interfaces/IRoyalty.sol",
								"hardhat/contracts/interfaces/IRoyaltyManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"owner()": "8da5cb5b",
							"recipientWithroyaltyDeductionAmount(address,uint256,uint256)": "40e7b540",
							"renounceOwnership()": "715018a6",
							"royalty()": "29ee566c",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royalty\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recipientWithroyaltyDeductionAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royalty\",\"outputs\":[{\"internalType\":\"contract IRoyalty\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/RoyaltyManager.sol\":\"RoyaltyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"hardhat/contracts/RoyaltyManager.sol\":{\"keccak256\":\"0x5d513b684835c3cc17c9afb0a01af1a0f90339fd0afe8fd224e8a0051263ca3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95dd45ab0605a8e4d6b7850e8161c1abbe4e4c3b434e9095d6eb09992f1ff54e\",\"dweb:/ipfs/QmRuLrkKC9agp1SUs5ka72WgkKmw412WAQj8kbupD8dmyL\"]},\"hardhat/contracts/interfaces/IRoyalty.sol\":{\"keccak256\":\"0x701708eb88927b62cff54d42cb5ccee2d741d423e7034ebe87c9282e967a2f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc4dc433460917655fe2de83df7c70fa2c38d771eadad5674a8703b06e377c7\",\"dweb:/ipfs/QmW7AouD8WCxfMWAVFGugoab4inm3trb4pT2vEVACuXVhM\"]},\"hardhat/contracts/interfaces/IRoyaltyManager.sol\":{\"keccak256\":\"0x2907db77d6eb5b4e3e592be96ae69f0a7bc4a81c0bd86f22e46ee4ca0cca181d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84060923d33197f99d195f1afb24d3fe0675815f62b34a4df65580db31915bc2\",\"dweb:/ipfs/QmeDCFsv2mrRY11ruBrHevapMUXdWBth5o9kLLkqZGxgXi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "hardhat/contracts/RoyaltyManager.sol:RoyaltyManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/interfaces/IRoyalty.sol": {
				"IRoyalty": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(address,uint256)": "2782d6c7",
							"royaltyInfoCollection(address)": "2adc45e8",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfo(address,address,address,uint256)": "0eecf97b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/interfaces/IRoyalty.sol\":\"IRoyalty\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/interfaces/IRoyalty.sol\":{\"keccak256\":\"0x701708eb88927b62cff54d42cb5ccee2d741d423e7034ebe87c9282e967a2f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc4dc433460917655fe2de83df7c70fa2c38d771eadad5674a8703b06e377c7\",\"dweb:/ipfs/QmW7AouD8WCxfMWAVFGugoab4inm3trb4pT2vEVACuXVhM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/interfaces/IRoyaltyManager.sol": {
				"IRoyaltyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recipientWithroyaltyDeductionAmount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"recipientWithroyaltyDeductionAmount(address,uint256,uint256)": "40e7b540"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recipientWithroyaltyDeductionAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/interfaces/IRoyaltyManager.sol\":\"IRoyaltyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/interfaces/IRoyaltyManager.sol\":{\"keccak256\":\"0x2907db77d6eb5b4e3e592be96ae69f0a7bc4a81c0bd86f22e46ee4ca0cca181d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84060923d33197f99d195f1afb24d3fe0675815f62b34a4df65580db31915bc2\",\"dweb:/ipfs/QmeDCFsv2mrRY11ruBrHevapMUXdWBth5o9kLLkqZGxgXi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							153
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 154,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 153,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								153
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						],
						"IERC2981": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 166,
							"src": "132:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"490:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 165,
										"src": "490:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "490:7:1"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "178:289:1",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
							},
							"fullyImplemented": false,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								165
							],
							"name": "IERC2981",
							"nameLocation": "478:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "504:231:1",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "749:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "769:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "761:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "778:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:36:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "852:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "844:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "870:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "862:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:41:1"
									},
									"scope": 131,
									"src": "740:145:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "468:419:1",
							"usedErrors": []
						}
					],
					"src": "107:781:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							153
						]
					},
					"id": 154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 138,
												"id": 141,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 153,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 148,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 147,
												"id": 150,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 153,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 154,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						]
					},
					"id": 166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 165,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 166,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"hardhat/contracts/RoyaltyManager.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/RoyaltyManager.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						],
						"IERC2981": [
							131
						],
						"IRoyalty": [
							303
						],
						"IRoyaltyManager": [
							319
						],
						"Ownable": [
							112
						],
						"RoyaltyManager": [
							262
						]
					},
					"id": 263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "61:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 263,
							"sourceUnit": 113,
							"src": "86:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "94:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 263,
							"sourceUnit": 132,
							"src": "154:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 165,
										"src": "162:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 171,
										"name": "IERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 131,
										"src": "171:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/interfaces/IRoyaltyManager.sol",
							"file": "./interfaces/IRoyaltyManager.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 263,
							"sourceUnit": 320,
							"src": "238:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IRoyaltyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 319,
										"src": "246:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/interfaces/IRoyalty.sol",
							"file": "./interfaces/IRoyalty.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 263,
							"sourceUnit": 304,
							"src": "304:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IRoyalty",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 303,
										"src": "312:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "IRoyaltyManager",
										"nameLocations": [
											"384:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "384:15:4"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "384:15:4"
								},
								{
									"baseName": {
										"id": 179,
										"name": "Ownable",
										"nameLocations": [
											"401:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "401:7:4"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "401:7:4"
								}
							],
							"canonicalName": "RoyaltyManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 262,
							"linearizedBaseContracts": [
								262,
								112,
								153,
								319
							],
							"name": "RoyaltyManager",
							"nameLocation": "366:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 183,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "485:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 262,
									"src": "462:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 181,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "462:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "508:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29ee566c",
									"id": 186,
									"mutability": "immutable",
									"name": "royalty",
									"nameLocation": "551:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 262,
									"src": "525:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRoyalty_$303",
										"typeString": "contract IRoyalty"
									},
									"typeName": {
										"id": 185,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 184,
											"name": "IRoyalty",
											"nameLocations": [
												"525:8:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 303,
											"src": "525:8:4"
										},
										"referencedDeclaration": 303,
										"src": "525:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRoyalty_$303",
											"typeString": "contract IRoyalty"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "595:45:4",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 191,
														"name": "royalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRoyalty_$303",
															"typeString": "contract IRoyalty"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 193,
																"name": "_royalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "624:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 192,
															"name": "IRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "615:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRoyalty_$303_$",
																"typeString": "type(contract IRoyalty)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "615:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRoyalty_$303",
															"typeString": "contract IRoyalty"
														}
													},
													"src": "605:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRoyalty_$303",
														"typeString": "contract IRoyalty"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "605:28:4"
											}
										]
									},
									"id": 198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_royalty",
												"nameLocation": "585:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "577:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:18:4"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:4"
									},
									"scope": 262,
									"src": "565:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										318
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "824:498:4",
										"statements": [
											{
												"assignments": [
													213,
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "receiver",
														"nameLocation": "843:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "835:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "royaltyAmount",
														"nameLocation": "861:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "853:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [
														{
															"id": 218,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "911:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "935:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 216,
															"name": "royalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "878:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyalty_$303",
																"typeString": "contract IRoyalty"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "886:11:4",
														"memberName": "royaltyInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "878:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (address,uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "834:117:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "967:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "987:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "979:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 223,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "979:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "979:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "967:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "966:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 229,
																	"name": "royaltyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "995:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1012:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "995:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "994:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "966:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "962:311:4",
												"trueBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "1016:257:4",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 238,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "1072:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 235,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "1042:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 234,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "1034:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$165_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1034:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$165",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1054:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 164,
																	"src": "1034:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1034:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 253,
															"nodeType": "IfStatement",
															"src": "1030:233:4",
															"trueBody": {
																"id": 252,
																"nodeType": "Block",
																"src": "1095:168:4",
																"statements": [
																	{
																		"expression": {
																			"id": 250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 240,
																						"name": "receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 213,
																						"src": "1114:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 241,
																						"name": "royaltyAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 215,
																						"src": "1124:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 242,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "1113:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																					"typeString": "tuple(address,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 247,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 202,
																						"src": "1195:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 248,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 204,
																						"src": "1224:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 244,
																								"name": "collection",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 200,
																								"src": "1150:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 243,
																							"name": "IERC2981",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 131,
																							"src": "1141:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC2981_$131_$",
																								"typeString": "type(contract IERC2981)"
																							}
																						},
																						"id": 245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1141:20:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC2981_$131",
																							"typeString": "contract IERC2981"
																						}
																					},
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1162:11:4",
																					"memberName": "royaltyInfo",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 130,
																					"src": "1141:32:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view external returns (address,uint256)"
																					}
																				},
																				"id": 249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1141:107:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																					"typeString": "tuple(address,uint256)"
																				}
																			},
																			"src": "1113:135:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 251,
																		"nodeType": "ExpressionStatement",
																		"src": "1113:135:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 256,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1291:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "royaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1301:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 258,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1290:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 211,
												"id": 259,
												"nodeType": "Return",
												"src": "1283:32:4"
											}
										]
									},
									"functionSelector": "40e7b540",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recipientWithroyaltyDeductionAmount",
									"nameLocation": "655:35:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "788:8:4"
									},
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "708:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "700:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "736:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "728:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "761:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "753:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:83:4"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "806:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "815:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:18:4"
									},
									"scope": 262,
									"src": "646:676:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 263,
							"src": "357:967:4",
							"usedErrors": []
						}
					],
					"src": "61:1264:4"
				},
				"id": 4
			},
			"hardhat/contracts/interfaces/IRoyalty.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/interfaces/IRoyalty.sol",
					"exportedSymbols": {
						"IRoyalty": [
							303
						]
					},
					"id": 304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "63:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyalty",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 303,
							"linearizedBaseContracts": [
								303
							],
							"name": "IRoyalty",
							"nameLocation": "98:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "122:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "152:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "144:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:26:5"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:5"
									},
									"scope": 303,
									"src": "113:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0eecf97b",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfo",
									"nameLocation": "194:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "229:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "221:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "257:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "249:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "281:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "273:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "307:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "299:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:105:5"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:0:5"
									},
									"scope": 303,
									"src": "185:141:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "341:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "370:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "362:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "398:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "390:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:58:5"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "434:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "443:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:18:5"
									},
									"scope": 303,
									"src": "332:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2adc45e8",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfoCollection",
									"nameLocation": "467:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "506:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "498:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:34:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "546:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "555:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:27:5"
									},
									"scope": 303,
									"src": "458:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "88:487:5",
							"usedErrors": []
						}
					],
					"src": "63:513:5"
				},
				"id": 5
			},
			"hardhat/contracts/interfaces/IRoyaltyManager.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/interfaces/IRoyaltyManager.sol",
					"exportedSymbols": {
						"IRoyaltyManager": [
							319
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "IRoyaltyManager",
							"nameLocation": "97:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40e7b540",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recipientWithroyaltyDeductionAmount",
									"nameLocation": "128:35:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "181:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "173:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "209:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "201:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "234:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "226:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:83:6"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "270:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "279:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:18:6"
									},
									"scope": 319,
									"src": "119:169:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 320,
							"src": "87:203:6",
							"usedErrors": []
						}
					],
					"src": "62:229:6"
				},
				"id": 6
			}
		}
	}
}
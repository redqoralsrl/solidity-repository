{
	"id": "8a72c339d3eeb0d72520f90d55e2565c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/TransferManager.sol": {
				"content": "// TODO : TransferSelector.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ITransferManager} from \"./interfaces/ITransferManager.sol\";\n\ncontract TransferManager is ITransferManager, Ownable {\n    // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    address public immutable TRANSFER_MANAGER_ERC721;\n    address public immutable TRANSFER_MANAGER_ERC1155;\n\n    mapping(address => address) public transferManagerForCollection;\n\n    event CollectionTransferManagerAdded(\n        address indexed collection,\n        address indexed transferManager\n    );\n    event CollectionTransferManagerRemoved(address indexed collection);\n\n    constructor(address _transfer721, address _transfer1155) {\n        TRANSFER_MANAGER_ERC721 = _transfer721;\n        TRANSFER_MANAGER_ERC1155 = _transfer1155;\n    }\n\n    // 미지원되는 ERC721 NFT 전송 가능하게 Unsupported721 계약주소 추가하기\n    function addTransferManagerCollection(\n        address collection,\n        address transferManager\n    ) external onlyOwner {\n        require(collection != address(0), \"Collection null address\");\n        require(transferManager != address(0), \"TransferManager null address\");\n\n        transferManagerForCollection[collection] = transferManager;\n\n        emit CollectionTransferManagerAdded(collection, transferManager);\n    }\n\n    // 미지원되는 ERC1155 NFT 전송 가능하게 Unsupported721 계약주소 삭제하기\n    function removeTransferManagerCollection(\n        address collection\n    ) external onlyOwner {\n        require(\n            transferManagerForCollection[collection] != address(0),\n            \"Collection null address\"\n        );\n\n        transferManagerForCollection[collection] = address(0);\n\n        emit CollectionTransferManagerRemoved(collection);\n    }\n\n    // ERC721 / ERC1155 / safeTransferFrom 없는 ERC721 에 따라서 NFT 전송 계약주소가 나뉨\n    function transferManagerAddress(\n        address collection\n    ) external view override returns (address transferManager) {\n        transferManager = transferManagerForCollection[collection];\n\n        if (transferManager == address(0)) {\n            if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {\n                transferManager = TRANSFER_MANAGER_ERC721;\n            } else if (\n                IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)\n            ) {\n                transferManager = TRANSFER_MANAGER_ERC1155;\n            }\n        }\n\n        return transferManager;\n    }\n}\n"
			},
			"hardhat/contracts/interfaces/ITransferManager.sol": {
				"content": "// TODO : ITransferSelector.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ITransferManager {\n    function transferManagerAddress(\n        address collection\n    ) external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/TransferManager.sol": {
				"TransferManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_transfer721",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_transfer1155",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"name": "CollectionTransferManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "CollectionTransferManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_MANAGER_ERC1155",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_MANAGER_ERC721",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"name": "addTransferManagerCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "removeTransferManagerCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "transferManagerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "transferManagerForCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/TransferManager.sol\":306:2797  contract TransferManager is ITransferManager, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"hardhat/contracts/TransferManager.sol\":921:1083  constructor(address _transfer721, address _transfer1155) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hardhat/contracts/TransferManager.sol\":1014:1026  _transfer721 */\n  dup2\n    /* \"hardhat/contracts/TransferManager.sol\":988:1026  TRANSFER_MANAGER_ERC721 = _transfer721 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"hardhat/contracts/TransferManager.sol\":1063:1076  _transfer1155 */\n  dup1\n    /* \"hardhat/contracts/TransferManager.sol\":1036:1076  TRANSFER_MANAGER_ERC1155 = _transfer1155 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"hardhat/contracts/TransferManager.sol\":921:1083  constructor(address _transfer721, address _transfer1155) {... */\n  pop\n  pop\n    /* \"hardhat/contracts/TransferManager.sol\":306:2797  contract TransferManager is ITransferManager, Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":949:1068   */\ntag_35:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_37\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_38\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"hardhat/contracts/TransferManager.sol\":306:2797  contract TransferManager is ITransferManager, Ownable {... */\ntag_12:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n  0x00\n  assignImmutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/TransferManager.sol\":306:2797  contract TransferManager is ITransferManager, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb1357ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd297772f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe58c7c39\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x15f04966\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x301b2507\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38928956\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"hardhat/contracts/TransferManager.sol\":2181:2795  function transferManagerAddress(... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":1184:1609  function addTransferManagerCollection(... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"hardhat/contracts/TransferManager.sol\":480:536  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":597:646  address public immutable TRANSFER_MANAGER_ERC1155 */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":543:591  address public immutable TRANSFER_MANAGER_ERC721 */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":392:447  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":653:716  mapping(address => address) public transferManagerForCollection */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/TransferManager.sol\":1711:2070  function removeTransferManagerCollection(... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"hardhat/contracts/TransferManager.sol\":2181:2795  function transferManagerAddress(... */\n    tag_18:\n        /* \"hardhat/contracts/TransferManager.sol\":2279:2302  address transferManager */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":2332:2360  transferManagerForCollection */\n      0x01\n        /* \"hardhat/contracts/TransferManager.sol\":2332:2372  transferManagerForCollection[collection] */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":2361:2371  collection */\n      dup4\n        /* \"hardhat/contracts/TransferManager.sol\":2332:2372  transferManagerForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":2314:2372  transferManager = transferManagerForCollection[collection] */\n      swap1\n      pop\n        /* \"hardhat/contracts/TransferManager.sol\":2414:2415  0 */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":2387:2416  transferManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":2387:2402  transferManager */\n      dup2\n        /* \"hardhat/contracts/TransferManager.sol\":2387:2416  transferManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hardhat/contracts/TransferManager.sol\":2383:2756  if (transferManager == address(0)) {... */\n      tag_54\n      jumpi\n        /* \"hardhat/contracts/TransferManager.sol\":2444:2454  collection */\n      dup2\n        /* \"hardhat/contracts/TransferManager.sol\":2436:2473  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"hardhat/contracts/TransferManager.sol\":437:447  0x80ac58cd */\n      0x80ac58cd\n        /* \"hardhat/contracts/TransferManager.sol\":2474:2493  INTERFACE_ID_ERC721 */\n      0xe0\n      shl\n        /* \"hardhat/contracts/TransferManager.sol\":2436:2494  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"hardhat/contracts/TransferManager.sol\":2432:2746  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"hardhat/contracts/TransferManager.sol\":2532:2555  TRANSFER_MANAGER_ERC721 */\n      immutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n        /* \"hardhat/contracts/TransferManager.sol\":2514:2555  transferManager = TRANSFER_MANAGER_ERC721 */\n      swap1\n      pop\n        /* \"hardhat/contracts/TransferManager.sol\":2432:2746  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {... */\n      jump(tag_61)\n    tag_60:\n        /* \"hardhat/contracts/TransferManager.sol\":2605:2615  collection */\n      dup2\n        /* \"hardhat/contracts/TransferManager.sol\":2597:2634  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"hardhat/contracts/TransferManager.sol\":526:536  0xd9b67a26 */\n      0xd9b67a26\n        /* \"hardhat/contracts/TransferManager.sol\":2635:2655  INTERFACE_ID_ERC1155 */\n      0xe0\n      shl\n        /* \"hardhat/contracts/TransferManager.sol\":2597:2656  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_65:\n        /* \"hardhat/contracts/TransferManager.sol\":2576:2746  if (... */\n      iszero\n      tag_66\n      jumpi\n        /* \"hardhat/contracts/TransferManager.sol\":2707:2731  TRANSFER_MANAGER_ERC1155 */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"hardhat/contracts/TransferManager.sol\":2689:2731  transferManager = TRANSFER_MANAGER_ERC1155 */\n      swap1\n      pop\n        /* \"hardhat/contracts/TransferManager.sol\":2576:2746  if (... */\n    tag_66:\n        /* \"hardhat/contracts/TransferManager.sol\":2432:2746  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {... */\n    tag_61:\n        /* \"hardhat/contracts/TransferManager.sol\":2383:2756  if (transferManager == address(0)) {... */\n    tag_54:\n        /* \"hardhat/contracts/TransferManager.sol\":2181:2795  function transferManagerAddress(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":1184:1609  function addTransferManagerCollection(... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_68:\n        /* \"hardhat/contracts/TransferManager.sol\":1348:1349  0 */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1326:1350  collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":1326:1336  collection */\n      dup3\n        /* \"hardhat/contracts/TransferManager.sol\":1326:1350  collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hardhat/contracts/TransferManager.sol\":1318:1378  require(collection != address(0), \"Collection null address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"hardhat/contracts/TransferManager.sol\":1423:1424  0 */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1396:1425  transferManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":1396:1411  transferManager */\n      dup2\n        /* \"hardhat/contracts/TransferManager.sol\":1396:1425  transferManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hardhat/contracts/TransferManager.sol\":1388:1458  require(transferManager != address(0), \"TransferManager null address\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"hardhat/contracts/TransferManager.sol\":1512:1527  transferManager */\n      dup1\n        /* \"hardhat/contracts/TransferManager.sol\":1469:1497  transferManagerForCollection */\n      0x01\n        /* \"hardhat/contracts/TransferManager.sol\":1469:1509  transferManagerForCollection[collection] */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1498:1508  collection */\n      dup5\n        /* \"hardhat/contracts/TransferManager.sol\":1469:1509  transferManagerForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1469:1527  transferManagerForCollection[collection] = transferManager */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hardhat/contracts/TransferManager.sol\":1586:1601  transferManager */\n      dup1\n        /* \"hardhat/contracts/TransferManager.sol\":1543:1602  CollectionTransferManagerAdded(collection, transferManager) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":1574:1584  collection */\n      dup3\n        /* \"hardhat/contracts/TransferManager.sol\":1543:1602  CollectionTransferManagerAdded(collection, transferManager) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b62\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"hardhat/contracts/TransferManager.sol\":1184:1609  function addTransferManagerCollection(... */\n      pop\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":480:536  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_26:\n        /* \"hardhat/contracts/TransferManager.sol\":526:536  0xd9b67a26 */\n      0xd9b67a26\n        /* \"hardhat/contracts/TransferManager.sol\":480:536  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n      0xe0\n      shl\n      dup2\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":597:646  address public immutable TRANSFER_MANAGER_ERC1155 */\n    tag_30:\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":543:591  address public immutable TRANSFER_MANAGER_ERC721 */\n    tag_38:\n      immutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n      dup2\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":392:447  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_41:\n        /* \"hardhat/contracts/TransferManager.sol\":437:447  0x80ac58cd */\n      0x80ac58cd\n        /* \"hardhat/contracts/TransferManager.sol\":392:447  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n      0xe0\n      shl\n      dup2\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":653:716  mapping(address => address) public transferManagerForCollection */\n    tag_45:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hardhat/contracts/TransferManager.sol\":1711:2070  function removeTransferManagerCollection(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_84:\n        /* \"hardhat/contracts/TransferManager.sol\":1888:1889  0 */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1836:1890  transferManagerForCollection[collection] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":1836:1864  transferManagerForCollection */\n      0x01\n        /* \"hardhat/contracts/TransferManager.sol\":1836:1876  transferManagerForCollection[collection] */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1865:1875  collection */\n      dup4\n        /* \"hardhat/contracts/TransferManager.sol\":1836:1876  transferManagerForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/TransferManager.sol\":1836:1890  transferManagerForCollection[collection] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hardhat/contracts/TransferManager.sol\":1815:1939  require(... */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_73\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"hardhat/contracts/TransferManager.sol\":2001:2002  0 */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1950:1978  transferManagerForCollection */\n      0x01\n        /* \"hardhat/contracts/TransferManager.sol\":1950:1990  transferManagerForCollection[collection] */\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1979:1989  collection */\n      dup4\n        /* \"hardhat/contracts/TransferManager.sol\":1950:1990  transferManagerForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"hardhat/contracts/TransferManager.sol\":1950:2003  transferManagerForCollection[collection] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hardhat/contracts/TransferManager.sol\":2052:2062  collection */\n      dup1\n        /* \"hardhat/contracts/TransferManager.sol\":2019:2063  CollectionTransferManagerRemoved(collection) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"hardhat/contracts/TransferManager.sol\":1711:2070  function removeTransferManagerCollection(... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_105:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_107:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_108:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_132\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_107\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_109:\n        /* \"#utility.yul\":641:665   */\n      tag_134\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_108\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_135:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_110:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_137\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_109\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_140\n      tag_105\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":917:1036   */\n    tag_139:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_141\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_110\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_111:\n        /* \"#utility.yul\":1263:1287   */\n      tag_143\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_108\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_20:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_145\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_111\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:2002   */\n    tag_23:\n        /* \"#utility.yul\":1596:1602   */\n      0x00\n        /* \"#utility.yul\":1604:1610   */\n      dup1\n        /* \"#utility.yul\":1653:1655   */\n      0x40\n        /* \"#utility.yul\":1641:1650   */\n      dup4\n        /* \"#utility.yul\":1632:1639   */\n      dup6\n        /* \"#utility.yul\":1628:1651   */\n      sub\n        /* \"#utility.yul\":1624:1656   */\n      slt\n        /* \"#utility.yul\":1621:1740   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1659:1738   */\n      tag_148\n      tag_105\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1621:1740   */\n    tag_147:\n        /* \"#utility.yul\":1779:1780   */\n      0x00\n        /* \"#utility.yul\":1804:1857   */\n      tag_149\n        /* \"#utility.yul\":1849:1856   */\n      dup6\n        /* \"#utility.yul\":1840:1846   */\n      dup3\n        /* \"#utility.yul\":1829:1838   */\n      dup7\n        /* \"#utility.yul\":1825:1847   */\n      add\n        /* \"#utility.yul\":1804:1857   */\n      tag_110\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1794:1857   */\n      swap3\n      pop\n        /* \"#utility.yul\":1750:1867   */\n      pop\n        /* \"#utility.yul\":1906:1908   */\n      0x20\n        /* \"#utility.yul\":1932:1985   */\n      tag_150\n        /* \"#utility.yul\":1977:1984   */\n      dup6\n        /* \"#utility.yul\":1968:1974   */\n      dup3\n        /* \"#utility.yul\":1957:1966   */\n      dup7\n        /* \"#utility.yul\":1953:1975   */\n      add\n        /* \"#utility.yul\":1932:1985   */\n      tag_110\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1922:1985   */\n      swap2\n      pop\n        /* \"#utility.yul\":1877:1995   */\n      pop\n        /* \"#utility.yul\":1528:2002   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2157   */\n    tag_112:\n        /* \"#utility.yul\":2044:2051   */\n      0x00\n        /* \"#utility.yul\":2084:2150   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2077:2082   */\n      dup3\n        /* \"#utility.yul\":2073:2151   */\n      and\n        /* \"#utility.yul\":2062:2151   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2163:2278   */\n    tag_113:\n        /* \"#utility.yul\":2248:2271   */\n      tag_153\n        /* \"#utility.yul\":2265:2270   */\n      dup2\n        /* \"#utility.yul\":2248:2271   */\n      tag_112\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2243:2246   */\n      dup3\n        /* \"#utility.yul\":2236:2272   */\n      mstore\n        /* \"#utility.yul\":2163:2278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2502   */\n    tag_28:\n        /* \"#utility.yul\":2375:2379   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2402:2411   */\n      dup3\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"#utility.yul\":2390:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2426:2495   */\n      tag_155\n        /* \"#utility.yul\":2492:2493   */\n      0x00\n        /* \"#utility.yul\":2481:2490   */\n      dup4\n        /* \"#utility.yul\":2477:2494   */\n      add\n        /* \"#utility.yul\":2468:2474   */\n      dup5\n        /* \"#utility.yul\":2426:2495   */\n      tag_113\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2284:2502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2508:2598   */\n    tag_114:\n        /* \"#utility.yul\":2542:2549   */\n      0x00\n        /* \"#utility.yul\":2585:2590   */\n      dup2\n        /* \"#utility.yul\":2578:2591   */\n      iszero\n        /* \"#utility.yul\":2571:2592   */\n      iszero\n        /* \"#utility.yul\":2560:2592   */\n      swap1\n      pop\n        /* \"#utility.yul\":2508:2598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2604:2720   */\n    tag_115:\n        /* \"#utility.yul\":2674:2695   */\n      tag_158\n        /* \"#utility.yul\":2689:2694   */\n      dup2\n        /* \"#utility.yul\":2674:2695   */\n      tag_114\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2667:2672   */\n      dup2\n        /* \"#utility.yul\":2664:2696   */\n      eq\n        /* \"#utility.yul\":2654:2714   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2710:2711   */\n      0x00\n        /* \"#utility.yul\":2707:2708   */\n      dup1\n        /* \"#utility.yul\":2700:2712   */\n      revert\n        /* \"#utility.yul\":2654:2714   */\n    tag_159:\n        /* \"#utility.yul\":2604:2720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2726:2863   */\n    tag_116:\n        /* \"#utility.yul\":2780:2785   */\n      0x00\n        /* \"#utility.yul\":2811:2817   */\n      dup2\n        /* \"#utility.yul\":2805:2818   */\n      mload\n        /* \"#utility.yul\":2796:2818   */\n      swap1\n      pop\n        /* \"#utility.yul\":2827:2857   */\n      tag_161\n        /* \"#utility.yul\":2851:2856   */\n      dup2\n        /* \"#utility.yul\":2827:2857   */\n      tag_115\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2726:2863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3214   */\n    tag_59:\n        /* \"#utility.yul\":2936:2942   */\n      0x00\n        /* \"#utility.yul\":2985:2987   */\n      0x20\n        /* \"#utility.yul\":2973:2982   */\n      dup3\n        /* \"#utility.yul\":2964:2971   */\n      dup5\n        /* \"#utility.yul\":2960:2983   */\n      sub\n        /* \"#utility.yul\":2956:2988   */\n      slt\n        /* \"#utility.yul\":2953:3072   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2991:3070   */\n      tag_164\n      tag_105\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2953:3072   */\n    tag_163:\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3136:3197   */\n      tag_165\n        /* \"#utility.yul\":3189:3196   */\n      dup5\n        /* \"#utility.yul\":3180:3186   */\n      dup3\n        /* \"#utility.yul\":3169:3178   */\n      dup6\n        /* \"#utility.yul\":3165:3187   */\n      add\n        /* \"#utility.yul\":3136:3197   */\n      tag_116\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3126:3197   */\n      swap2\n      pop\n        /* \"#utility.yul\":3082:3207   */\n      pop\n        /* \"#utility.yul\":2869:3214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3220:3389   */\n    tag_117:\n        /* \"#utility.yul\":3304:3315   */\n      0x00\n        /* \"#utility.yul\":3338:3344   */\n      dup3\n        /* \"#utility.yul\":3333:3336   */\n      dup3\n        /* \"#utility.yul\":3326:3345   */\n      mstore\n        /* \"#utility.yul\":3378:3382   */\n      0x20\n        /* \"#utility.yul\":3373:3376   */\n      dup3\n        /* \"#utility.yul\":3369:3383   */\n      add\n        /* \"#utility.yul\":3354:3383   */\n      swap1\n      pop\n        /* \"#utility.yul\":3220:3389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3395:3568   */\n    tag_118:\n        /* \"#utility.yul\":3535:3560   */\n      0x436f6c6c656374696f6e206e756c6c2061646472657373000000000000000000\n        /* \"#utility.yul\":3531:3532   */\n      0x00\n        /* \"#utility.yul\":3523:3529   */\n      dup3\n        /* \"#utility.yul\":3519:3533   */\n      add\n        /* \"#utility.yul\":3512:3561   */\n      mstore\n        /* \"#utility.yul\":3395:3568   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3574:3940   */\n    tag_119:\n        /* \"#utility.yul\":3716:3719   */\n      0x00\n        /* \"#utility.yul\":3737:3804   */\n      tag_169\n        /* \"#utility.yul\":3801:3803   */\n      0x17\n        /* \"#utility.yul\":3796:3799   */\n      dup4\n        /* \"#utility.yul\":3737:3804   */\n      tag_117\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3730:3804   */\n      swap2\n      pop\n        /* \"#utility.yul\":3813:3906   */\n      tag_170\n        /* \"#utility.yul\":3902:3905   */\n      dup3\n        /* \"#utility.yul\":3813:3906   */\n      tag_118\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3931:3933   */\n      0x20\n        /* \"#utility.yul\":3926:3929   */\n      dup3\n        /* \"#utility.yul\":3922:3934   */\n      add\n        /* \"#utility.yul\":3915:3934   */\n      swap1\n      pop\n        /* \"#utility.yul\":3574:3940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3946:4365   */\n    tag_73:\n        /* \"#utility.yul\":4112:4116   */\n      0x00\n        /* \"#utility.yul\":4150:4152   */\n      0x20\n        /* \"#utility.yul\":4139:4148   */\n      dup3\n        /* \"#utility.yul\":4135:4153   */\n      add\n        /* \"#utility.yul\":4127:4153   */\n      swap1\n      pop\n        /* \"#utility.yul\":4199:4208   */\n      dup2\n        /* \"#utility.yul\":4193:4197   */\n      dup2\n        /* \"#utility.yul\":4189:4209   */\n      sub\n        /* \"#utility.yul\":4185:4186   */\n      0x00\n        /* \"#utility.yul\":4174:4183   */\n      dup4\n        /* \"#utility.yul\":4170:4187   */\n      add\n        /* \"#utility.yul\":4163:4210   */\n      mstore\n        /* \"#utility.yul\":4227:4358   */\n      tag_172\n        /* \"#utility.yul\":4353:4357   */\n      dup2\n        /* \"#utility.yul\":4227:4358   */\n      tag_119\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4219:4358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4371:4549   */\n    tag_120:\n        /* \"#utility.yul\":4511:4541   */\n      0x5472616e736665724d616e61676572206e756c6c206164647265737300000000\n        /* \"#utility.yul\":4507:4508   */\n      0x00\n        /* \"#utility.yul\":4499:4505   */\n      dup3\n        /* \"#utility.yul\":4495:4509   */\n      add\n        /* \"#utility.yul\":4488:4542   */\n      mstore\n        /* \"#utility.yul\":4371:4549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4921   */\n    tag_121:\n        /* \"#utility.yul\":4697:4700   */\n      0x00\n        /* \"#utility.yul\":4718:4785   */\n      tag_175\n        /* \"#utility.yul\":4782:4784   */\n      0x1c\n        /* \"#utility.yul\":4777:4780   */\n      dup4\n        /* \"#utility.yul\":4718:4785   */\n      tag_117\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4711:4785   */\n      swap2\n      pop\n        /* \"#utility.yul\":4794:4887   */\n      tag_176\n        /* \"#utility.yul\":4883:4886   */\n      dup3\n        /* \"#utility.yul\":4794:4887   */\n      tag_120\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"#utility.yul\":4907:4910   */\n      dup3\n        /* \"#utility.yul\":4903:4915   */\n      add\n        /* \"#utility.yul\":4896:4915   */\n      swap1\n      pop\n        /* \"#utility.yul\":4555:4921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5346   */\n    tag_76:\n        /* \"#utility.yul\":5093:5097   */\n      0x00\n        /* \"#utility.yul\":5131:5133   */\n      0x20\n        /* \"#utility.yul\":5120:5129   */\n      dup3\n        /* \"#utility.yul\":5116:5134   */\n      add\n        /* \"#utility.yul\":5108:5134   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5189   */\n      dup2\n        /* \"#utility.yul\":5174:5178   */\n      dup2\n        /* \"#utility.yul\":5170:5190   */\n      sub\n        /* \"#utility.yul\":5166:5167   */\n      0x00\n        /* \"#utility.yul\":5155:5164   */\n      dup4\n        /* \"#utility.yul\":5151:5168   */\n      add\n        /* \"#utility.yul\":5144:5191   */\n      mstore\n        /* \"#utility.yul\":5208:5339   */\n      tag_178\n        /* \"#utility.yul\":5334:5338   */\n      dup2\n        /* \"#utility.yul\":5208:5339   */\n      tag_121\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5200:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":4927:5346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5352:5577   */\n    tag_122:\n        /* \"#utility.yul\":5492:5526   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5488:5489   */\n      0x00\n        /* \"#utility.yul\":5480:5486   */\n      dup3\n        /* \"#utility.yul\":5476:5490   */\n      add\n        /* \"#utility.yul\":5469:5527   */\n      mstore\n        /* \"#utility.yul\":5561:5569   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5556:5558   */\n      0x20\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5544:5559   */\n      add\n        /* \"#utility.yul\":5537:5570   */\n      mstore\n        /* \"#utility.yul\":5352:5577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5583:5949   */\n    tag_123:\n        /* \"#utility.yul\":5725:5728   */\n      0x00\n        /* \"#utility.yul\":5746:5813   */\n      tag_181\n        /* \"#utility.yul\":5810:5812   */\n      0x26\n        /* \"#utility.yul\":5805:5808   */\n      dup4\n        /* \"#utility.yul\":5746:5813   */\n      tag_117\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5739:5813   */\n      swap2\n      pop\n        /* \"#utility.yul\":5822:5915   */\n      tag_182\n        /* \"#utility.yul\":5911:5914   */\n      dup3\n        /* \"#utility.yul\":5822:5915   */\n      tag_122\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5940:5942   */\n      0x40\n        /* \"#utility.yul\":5935:5938   */\n      dup3\n        /* \"#utility.yul\":5931:5943   */\n      add\n        /* \"#utility.yul\":5924:5943   */\n      swap1\n      pop\n        /* \"#utility.yul\":5583:5949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6374   */\n    tag_93:\n        /* \"#utility.yul\":6121:6125   */\n      0x00\n        /* \"#utility.yul\":6159:6161   */\n      0x20\n        /* \"#utility.yul\":6148:6157   */\n      dup3\n        /* \"#utility.yul\":6144:6162   */\n      add\n        /* \"#utility.yul\":6136:6162   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6217   */\n      dup2\n        /* \"#utility.yul\":6202:6206   */\n      dup2\n        /* \"#utility.yul\":6198:6218   */\n      sub\n        /* \"#utility.yul\":6194:6195   */\n      0x00\n        /* \"#utility.yul\":6183:6192   */\n      dup4\n        /* \"#utility.yul\":6179:6196   */\n      add\n        /* \"#utility.yul\":6172:6219   */\n      mstore\n        /* \"#utility.yul\":6236:6367   */\n      tag_184\n        /* \"#utility.yul\":6362:6366   */\n      dup2\n        /* \"#utility.yul\":6236:6367   */\n      tag_123\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6228:6367   */\n      swap1\n      pop\n        /* \"#utility.yul\":5955:6374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:6562   */\n    tag_124:\n        /* \"#utility.yul\":6520:6554   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6516:6517   */\n      0x00\n        /* \"#utility.yul\":6508:6514   */\n      dup3\n        /* \"#utility.yul\":6504:6518   */\n      add\n        /* \"#utility.yul\":6497:6555   */\n      mstore\n        /* \"#utility.yul\":6380:6562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6568:6934   */\n    tag_125:\n        /* \"#utility.yul\":6710:6713   */\n      0x00\n        /* \"#utility.yul\":6731:6798   */\n      tag_187\n        /* \"#utility.yul\":6795:6797   */\n      0x20\n        /* \"#utility.yul\":6790:6793   */\n      dup4\n        /* \"#utility.yul\":6731:6798   */\n      tag_117\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6724:6798   */\n      swap2\n      pop\n        /* \"#utility.yul\":6807:6900   */\n      tag_188\n        /* \"#utility.yul\":6896:6899   */\n      dup3\n        /* \"#utility.yul\":6807:6900   */\n      tag_124\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6925:6927   */\n      0x20\n        /* \"#utility.yul\":6920:6923   */\n      dup3\n        /* \"#utility.yul\":6916:6928   */\n      add\n        /* \"#utility.yul\":6909:6928   */\n      swap1\n      pop\n        /* \"#utility.yul\":6568:6934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6940:7359   */\n    tag_101:\n        /* \"#utility.yul\":7106:7110   */\n      0x00\n        /* \"#utility.yul\":7144:7146   */\n      0x20\n        /* \"#utility.yul\":7133:7142   */\n      dup3\n        /* \"#utility.yul\":7129:7147   */\n      add\n        /* \"#utility.yul\":7121:7147   */\n      swap1\n      pop\n        /* \"#utility.yul\":7193:7202   */\n      dup2\n        /* \"#utility.yul\":7187:7191   */\n      dup2\n        /* \"#utility.yul\":7183:7203   */\n      sub\n        /* \"#utility.yul\":7179:7180   */\n      0x00\n        /* \"#utility.yul\":7168:7177   */\n      dup4\n        /* \"#utility.yul\":7164:7181   */\n      add\n        /* \"#utility.yul\":7157:7204   */\n      mstore\n        /* \"#utility.yul\":7221:7352   */\n      tag_190\n        /* \"#utility.yul\":7347:7351   */\n      dup2\n        /* \"#utility.yul\":7221:7352   */\n      tag_125\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7213:7352   */\n      swap1\n      pop\n        /* \"#utility.yul\":6940:7359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206247e2d30ab9b440422ebe6104993bb062efcaf7b6877f40093b287b9be5d7ce64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 199,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 207,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:5"
															},
															"nodeType": "YulIf",
															"src": "949:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:5",
														"type": ""
													}
												],
												"src": "845:507:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b506040516200103b3803806200103b8339818101604052810190620000379190620001fd565b620000576200004b620000c760201b60201c565b620000cf60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000244565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c58262000198565b9050919050565b620001d781620001b8565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b6000806040838503121562000217576200021662000193565b5b60006200022785828601620001e6565b92505060206200023a85828601620001e6565b9150509250929050565b60805160a051610dc362000278600039600081816103d001526105c801526000818161032201526106290152610dc36000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610140578063b1357ddd1461015e578063bc6bc0cd1461017c578063d297772f1461019a578063e58c7c39146101ca578063f2fde38b146101e6576100a9565b806315f04966146100ae578063301b2507146100de57806333bf6156146100fa5780633892895614610118578063715018a614610136575b600080fd5b6100c860048036038101906100c39190610a54565b610202565b6040516100d59190610a90565b60405180910390f35b6100f860048036038101906100f39190610aab565b6103f9565b005b6101026105bb565b60405161010f9190610b26565b60405180910390f35b6101206105c6565b60405161012d9190610a90565b60405180910390f35b61013e6105ea565b005b6101486105fe565b6040516101559190610a90565b60405180910390f35b610166610627565b6040516101739190610a90565b60405180910390f35b61018461064b565b6040516101919190610b26565b60405180910390f35b6101b460048036038101906101af9190610a54565b610656565b6040516101c19190610a90565b60405180910390f35b6101e460048036038101906101df9190610a54565b610689565b005b61020060048036038101906101fb9190610a54565b610824565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f4578173ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016102da9190610b26565b602060405180830381865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190610b79565b15610348577f000000000000000000000000000000000000000000000000000000000000000090506103f3565b8173ffffffffffffffffffffffffffffffffffffffff166301ffc9a763d9b67a2660e01b6040518263ffffffff1660e01b81526004016103889190610b26565b602060405180830381865afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610b79565b156103f2577f000000000000000000000000000000000000000000000000000000000000000090505b5b5b919050565b6104016108a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790610c03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690610c6f565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b6260405160405180910390a35050565b63d9b67a2660e01b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105f26108a7565b6105fc6000610925565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6380ac58cd60e01b81565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106916108a7565b600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361075f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075690610c03565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f60405160405180910390a250565b61082c6108a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290610d01565b60405180910390fd5b6108a481610925565b50565b6108af6109e9565b73ffffffffffffffffffffffffffffffffffffffff166108cd6105fe565b73ffffffffffffffffffffffffffffffffffffffff1614610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90610d6d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a21826109f6565b9050919050565b610a3181610a16565b8114610a3c57600080fd5b50565b600081359050610a4e81610a28565b92915050565b600060208284031215610a6a57610a696109f1565b5b6000610a7884828501610a3f565b91505092915050565b610a8a81610a16565b82525050565b6000602082019050610aa56000830184610a81565b92915050565b60008060408385031215610ac257610ac16109f1565b5b6000610ad085828601610a3f565b9250506020610ae185828601610a3f565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b2081610aeb565b82525050565b6000602082019050610b3b6000830184610b17565b92915050565b60008115159050919050565b610b5681610b41565b8114610b6157600080fd5b50565b600081519050610b7381610b4d565b92915050565b600060208284031215610b8f57610b8e6109f1565b5b6000610b9d84828501610b64565b91505092915050565b600082825260208201905092915050565b7f436f6c6c656374696f6e206e756c6c2061646472657373000000000000000000600082015250565b6000610bed601783610ba6565b9150610bf882610bb7565b602082019050919050565b60006020820190508181036000830152610c1c81610be0565b9050919050565b7f5472616e736665724d616e61676572206e756c6c206164647265737300000000600082015250565b6000610c59601c83610ba6565b9150610c6482610c23565b602082019050919050565b60006020820190508181036000830152610c8881610c4c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ceb602683610ba6565b9150610cf682610c8f565b604082019050919050565b60006020820190508181036000830152610d1a81610cde565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d57602083610ba6565b9150610d6282610d21565b602082019050919050565b60006020820190508181036000830152610d8681610d4a565b905091905056fea26469706673582212206247e2d30ab9b440422ebe6104993bb062efcaf7b6877f40093b287b9be5d7ce64736f6c63430008130033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x103B CODESIZE SUB DUP1 PUSH3 0x103B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xC7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x244 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C5 DUP3 PUSH3 0x198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D7 DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F7 DUP2 PUSH3 0x1CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x217 JUMPI PUSH3 0x216 PUSH3 0x193 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x227 DUP6 DUP3 DUP7 ADD PUSH3 0x1E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x23A DUP6 DUP3 DUP7 ADD PUSH3 0x1E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xDC3 PUSH3 0x278 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3D0 ADD MSTORE PUSH2 0x5C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x322 ADD MSTORE PUSH2 0x629 ADD MSTORE PUSH2 0xDC3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xB1357DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xD297772F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xE58C7C39 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x15F04966 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x301B2507 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x38928956 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x5EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST ISZERO PUSH2 0x348 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST ISZERO PUSH2 0x3F2 JUMPI PUSH32 0x0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D6 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0xD9B67A26 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x5FC PUSH1 0x0 PUSH2 0x925 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x82C PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP2 PUSH2 0x925 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AF PUSH2 0x9E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CD PUSH2 0x5FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA31 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP2 EQ PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4E DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA78 DUP5 DUP3 DUP6 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8A DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP6 DUP3 DUP7 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB20 DUP2 PUSH2 0xAEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0xB41 JUMP JUMPDEST DUP2 EQ PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB73 DUP2 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xB64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6C6C656374696F6E206E756C6C2061646472657373000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBED PUSH1 0x17 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF8 DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1C DUP2 PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665724D616E61676572206E756C6C206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC59 PUSH1 0x1C DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC64 DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC88 DUP2 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEB PUSH1 0x26 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF6 DUP3 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD1A DUP2 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH1 0x20 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD62 DUP3 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD86 DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x47E2D3 EXP 0xB9 0xB4 BLOCKHASH TIMESTAMP 0x2E 0xBE PUSH2 0x499 EXTCODESIZE 0xB0 PUSH3 0xEFCAF7 0xB6 DUP8 PUSH32 0x40093B287B9BE5D7CE64736F6C63430008130033000000000000000000000000 ",
							"sourceMap": "306:2491:3:-:0;;;921:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1014:12:3;988:38;;;;;;;;;;1063:13;1036:40;;;;;;;;;;921:162;;306:2491;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;306:2491:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_164": {
									"entryPoint": 1467,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_161": {
									"entryPoint": 1611,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRANSFER_MANAGER_ERC1155_168": {
									"entryPoint": 1478,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRANSFER_MANAGER_ERC721_166": {
									"entryPoint": 1575,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2215,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 2537,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2341,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTransferManagerCollection_239": {
									"entryPoint": 1017,
									"id": 239,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1534,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeTransferManagerCollection_272": {
									"entryPoint": 1673,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1514,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferManagerAddress_321": {
									"entryPoint": 514,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferManagerForCollection_172": {
									"entryPoint": 1622,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2084,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da": {
									"entryPoint": 3107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7362:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:5",
														"type": ""
													}
												],
												"src": "1176:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:5",
														"type": ""
													}
												],
												"src": "1300:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1611:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1657:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1659:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1659:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1659:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1641:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1624:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:32:5"
															},
															"nodeType": "YulIf",
															"src": "1621:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1750:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1794:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1829:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1840:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1804:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1794:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1877:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1892:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1906:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1896:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1922:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1957:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1968:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1953:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1953:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1977:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1932:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1922:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1573:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1584:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1604:6:5",
														"type": ""
													}
												],
												"src": "1528:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2052:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2062:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2077:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2073:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2062:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2034:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2044:7:5",
														"type": ""
													}
												],
												"src": "2008:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2243:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2265:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2248:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2214:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2221:3:5",
														"type": ""
													}
												],
												"src": "2163:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2390:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2492:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2426:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2352:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2364:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2375:4:5",
														"type": ""
													}
												],
												"src": "2284:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2550:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2560:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2585:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2578:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2578:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2571:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2571:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2560:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2532:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2542:7:5",
														"type": ""
													}
												],
												"src": "2508:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2644:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2698:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2710:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2700:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2700:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2700:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2667:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2674:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2674:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:40:5"
															},
															"nodeType": "YulIf",
															"src": "2654:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:5",
														"type": ""
													}
												],
												"src": "2604:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2786:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2796:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2805:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2796:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2851:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2827:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2764:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2772:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2780:5:5",
														"type": ""
													}
												],
												"src": "2726:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2943:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2989:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2991:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2964:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2973:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2960:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2956:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:32:5"
															},
															"nodeType": "YulIf",
															"src": "2953:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3082:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3097:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3101:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3126:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3169:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3180:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3165:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3165:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3136:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3136:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3126:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2913:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2924:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2936:6:5",
														"type": ""
													}
												],
												"src": "2869:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3316:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3333:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3338:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3326:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3354:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3373:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3378:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3369:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3354:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3288:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3293:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3304:11:5",
														"type": ""
													}
												],
												"src": "3220:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3501:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3523:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3531:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3519:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3519:14:5"
																	},
																	{
																		"hexValue": "436f6c6c656374696f6e206e756c6c2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3535:25:5",
																		"type": "",
																		"value": "Collection null address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3493:6:5",
														"type": ""
													}
												],
												"src": "3395:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3730:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3737:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3730:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3902:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
																	"nodeType": "YulIdentifier",
																	"src": "3813:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3915:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3926:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3922:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3708:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3716:3:5",
														"type": ""
													}
												],
												"src": "3574:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4117:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4127:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4139:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4127:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4174:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4185:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4170:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4193:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4199:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4163:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4163:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4219:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4353:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4227:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4219:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4097:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4112:4:5",
														"type": ""
													}
												],
												"src": "3946:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4477:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4499:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4507:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4495:14:5"
																	},
																	{
																		"hexValue": "5472616e736665724d616e61676572206e756c6c2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4511:30:5",
																		"type": "",
																		"value": "TransferManager null address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4488:54:5"
														}
													]
												},
												"name": "store_literal_in_memory_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4469:6:5",
														"type": ""
													}
												],
												"src": "4371:178:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4701:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4711:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:2:5",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4718:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4711:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4883:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da",
																	"nodeType": "YulIdentifier",
																	"src": "4794:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4907:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4689:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4697:3:5",
														"type": ""
													}
												],
												"src": "4555:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5098:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5108:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5120:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5131:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5108:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5155:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5166:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5151:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5174:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5144:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5200:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5334:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5208:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5200:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5078:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:5",
														"type": ""
													}
												],
												"src": "4927:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5480:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5488:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5476:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5476:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5492:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5469:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5469:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5548:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5556:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5561:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5450:6:5",
														"type": ""
													}
												],
												"src": "5352:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5739:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5805:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5746:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5739:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5911:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5822:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5924:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5935:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5931:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5717:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5725:3:5",
														"type": ""
													}
												],
												"src": "5583:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6136:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6148:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6144:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6136:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6183:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6194:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6179:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6179:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6202:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6172:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6172:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6228:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6362:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6236:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6228:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6106:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6121:4:5",
														"type": ""
													}
												],
												"src": "5955:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6486:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6508:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6516:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6504:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6520:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6497:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6497:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6478:6:5",
														"type": ""
													}
												],
												"src": "6380:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6714:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6724:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6790:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6795:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6731:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6724:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6896:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6807:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6807:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6807:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6909:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6920:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6925:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6916:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6909:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6702:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6710:3:5",
														"type": ""
													}
												],
												"src": "6568:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7111:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7121:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7133:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7179:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7187:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7193:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7183:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7157:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7213:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7347:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7221:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7213:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7091:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7106:4:5",
														"type": ""
													}
												],
												"src": "6940:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Collection null address\")\n\n    }\n\n    function abi_encode_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferManager null address\")\n\n    }\n\n    function abi_encode_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"166": [
									{
										"length": 32,
										"start": 802
									},
									{
										"length": 32,
										"start": 1577
									}
								],
								"168": [
									{
										"length": 32,
										"start": 976
									},
									{
										"length": 32,
										"start": 1480
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610140578063b1357ddd1461015e578063bc6bc0cd1461017c578063d297772f1461019a578063e58c7c39146101ca578063f2fde38b146101e6576100a9565b806315f04966146100ae578063301b2507146100de57806333bf6156146100fa5780633892895614610118578063715018a614610136575b600080fd5b6100c860048036038101906100c39190610a54565b610202565b6040516100d59190610a90565b60405180910390f35b6100f860048036038101906100f39190610aab565b6103f9565b005b6101026105bb565b60405161010f9190610b26565b60405180910390f35b6101206105c6565b60405161012d9190610a90565b60405180910390f35b61013e6105ea565b005b6101486105fe565b6040516101559190610a90565b60405180910390f35b610166610627565b6040516101739190610a90565b60405180910390f35b61018461064b565b6040516101919190610b26565b60405180910390f35b6101b460048036038101906101af9190610a54565b610656565b6040516101c19190610a90565b60405180910390f35b6101e460048036038101906101df9190610a54565b610689565b005b61020060048036038101906101fb9190610a54565b610824565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f4578173ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016102da9190610b26565b602060405180830381865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190610b79565b15610348577f000000000000000000000000000000000000000000000000000000000000000090506103f3565b8173ffffffffffffffffffffffffffffffffffffffff166301ffc9a763d9b67a2660e01b6040518263ffffffff1660e01b81526004016103889190610b26565b602060405180830381865afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610b79565b156103f2577f000000000000000000000000000000000000000000000000000000000000000090505b5b5b919050565b6104016108a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790610c03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690610c6f565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b6260405160405180910390a35050565b63d9b67a2660e01b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105f26108a7565b6105fc6000610925565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6380ac58cd60e01b81565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106916108a7565b600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361075f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075690610c03565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f60405160405180910390a250565b61082c6108a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290610d01565b60405180910390fd5b6108a481610925565b50565b6108af6109e9565b73ffffffffffffffffffffffffffffffffffffffff166108cd6105fe565b73ffffffffffffffffffffffffffffffffffffffff1614610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90610d6d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a21826109f6565b9050919050565b610a3181610a16565b8114610a3c57600080fd5b50565b600081359050610a4e81610a28565b92915050565b600060208284031215610a6a57610a696109f1565b5b6000610a7884828501610a3f565b91505092915050565b610a8a81610a16565b82525050565b6000602082019050610aa56000830184610a81565b92915050565b60008060408385031215610ac257610ac16109f1565b5b6000610ad085828601610a3f565b9250506020610ae185828601610a3f565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b2081610aeb565b82525050565b6000602082019050610b3b6000830184610b17565b92915050565b60008115159050919050565b610b5681610b41565b8114610b6157600080fd5b50565b600081519050610b7381610b4d565b92915050565b600060208284031215610b8f57610b8e6109f1565b5b6000610b9d84828501610b64565b91505092915050565b600082825260208201905092915050565b7f436f6c6c656374696f6e206e756c6c2061646472657373000000000000000000600082015250565b6000610bed601783610ba6565b9150610bf882610bb7565b602082019050919050565b60006020820190508181036000830152610c1c81610be0565b9050919050565b7f5472616e736665724d616e61676572206e756c6c206164647265737300000000600082015250565b6000610c59601c83610ba6565b9150610c6482610c23565b602082019050919050565b60006020820190508181036000830152610c8881610c4c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ceb602683610ba6565b9150610cf682610c8f565b604082019050919050565b60006020820190508181036000830152610d1a81610cde565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d57602083610ba6565b9150610d6282610d21565b602082019050919050565b60006020820190508181036000830152610d8681610d4a565b905091905056fea26469706673582212206247e2d30ab9b440422ebe6104993bb062efcaf7b6877f40093b287b9be5d7ce64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xB1357DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xD297772F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xE58C7C39 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x15F04966 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x301B2507 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x38928956 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x5EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST ISZERO PUSH2 0x348 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST ISZERO PUSH2 0x3F2 JUMPI PUSH32 0x0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D6 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0xD9B67A26 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x5FC PUSH1 0x0 PUSH2 0x925 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x82C PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP2 PUSH2 0x925 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AF PUSH2 0x9E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CD PUSH2 0x5FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA31 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP2 EQ PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4E DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA78 DUP5 DUP3 DUP6 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8A DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP6 DUP3 DUP7 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB20 DUP2 PUSH2 0xAEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0xB41 JUMP JUMPDEST DUP2 EQ PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB73 DUP2 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xB64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6C6C656374696F6E206E756C6C2061646472657373000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBED PUSH1 0x17 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF8 DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1C DUP2 PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665724D616E61676572206E756C6C206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC59 PUSH1 0x1C DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC64 DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC88 DUP2 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEB PUSH1 0x26 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF6 DUP3 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD1A DUP2 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH1 0x20 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD62 DUP3 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD86 DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x47E2D3 EXP 0xB9 0xB4 BLOCKHASH TIMESTAMP 0x2E 0xBE PUSH2 0x499 EXTCODESIZE 0xB0 PUSH3 0xEFCAF7 0xB6 DUP8 PUSH32 0x40093B287B9BE5D7CE64736F6C63430008130033000000000000000000000000 ",
							"sourceMap": "306:2491:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1184:425;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;543:48:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;653:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1711:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2181:614:3;2279:23;2332:28;:40;2361:10;2332:40;;;;;;;;;;;;;;;;;;;;;;;;;2314:58;;2414:1;2387:29;;:15;:29;;;2383:373;;2444:10;2436:37;;;437:10;2474:19;;2436:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2432:314;;;2532:23;2514:41;;2432:314;;;2605:10;2597:37;;;526:10;2635:20;;2597:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2576:170;;;2707:24;2689:42;;2576:170;2432:314;2383:373;2181:614;;;:::o;1184:425::-;1094:13:0;:11;:13::i;:::-;1348:1:3::1;1326:24;;:10;:24;;::::0;1318:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1423:1;1396:29;;:15;:29;;::::0;1388:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1512:15;1469:28;:40;1498:10;1469:40;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;1586:15;1543:59;;1574:10;1543:59;;;;;;;;;;;;1184:425:::0;;:::o;480:56::-;526:10;480:56;;;:::o;597:49::-;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;543:48:3:-;;;:::o;392:55::-;437:10;392:55;;;:::o;653:63::-;;;;;;;;;;;;;;;;;;;;;;:::o;1711:359::-;1094:13:0;:11;:13::i;:::-;1888:1:3::1;1836:54;;:28;:40;1865:10;1836:40;;;;;;;;;;;;;;;;;;;;;;;;;:54;;::::0;1815:124:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2001:1;1950:28;:40;1979:10;1950:40;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2052:10;2019:44;;;;;;;;;;;;1711:359:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:474::-;1596:6;1604;1653:2;1641:9;1632:7;1628:23;1624:32;1621:119;;;1659:79;;:::i;:::-;1621:119;1779:1;1804:53;1849:7;1840:6;1829:9;1825:22;1804:53;:::i;:::-;1794:63;;1750:117;1906:2;1932:53;1977:7;1968:6;1957:9;1953:22;1932:53;:::i;:::-;1922:63;;1877:118;1528:474;;;;;:::o;2008:149::-;2044:7;2084:66;2077:5;2073:78;2062:89;;2008:149;;;:::o;2163:115::-;2248:23;2265:5;2248:23;:::i;:::-;2243:3;2236:36;2163:115;;:::o;2284:218::-;2375:4;2413:2;2402:9;2398:18;2390:26;;2426:69;2492:1;2481:9;2477:17;2468:6;2426:69;:::i;:::-;2284:218;;;;:::o;2508:90::-;2542:7;2585:5;2578:13;2571:21;2560:32;;2508:90;;;:::o;2604:116::-;2674:21;2689:5;2674:21;:::i;:::-;2667:5;2664:32;2654:60;;2710:1;2707;2700:12;2654:60;2604:116;:::o;2726:137::-;2780:5;2811:6;2805:13;2796:22;;2827:30;2851:5;2827:30;:::i;:::-;2726:137;;;;:::o;2869:345::-;2936:6;2985:2;2973:9;2964:7;2960:23;2956:32;2953:119;;;2991:79;;:::i;:::-;2953:119;3111:1;3136:61;3189:7;3180:6;3169:9;3165:22;3136:61;:::i;:::-;3126:71;;3082:125;2869:345;;;;:::o;3220:169::-;3304:11;3338:6;3333:3;3326:19;3378:4;3373:3;3369:14;3354:29;;3220:169;;;;:::o;3395:173::-;3535:25;3531:1;3523:6;3519:14;3512:49;3395:173;:::o;3574:366::-;3716:3;3737:67;3801:2;3796:3;3737:67;:::i;:::-;3730:74;;3813:93;3902:3;3813:93;:::i;:::-;3931:2;3926:3;3922:12;3915:19;;3574:366;;;:::o;3946:419::-;4112:4;4150:2;4139:9;4135:18;4127:26;;4199:9;4193:4;4189:20;4185:1;4174:9;4170:17;4163:47;4227:131;4353:4;4227:131;:::i;:::-;4219:139;;3946:419;;;:::o;4371:178::-;4511:30;4507:1;4499:6;4495:14;4488:54;4371:178;:::o;4555:366::-;4697:3;4718:67;4782:2;4777:3;4718:67;:::i;:::-;4711:74;;4794:93;4883:3;4794:93;:::i;:::-;4912:2;4907:3;4903:12;4896:19;;4555:366;;;:::o;4927:419::-;5093:4;5131:2;5120:9;5116:18;5108:26;;5180:9;5174:4;5170:20;5166:1;5155:9;5151:17;5144:47;5208:131;5334:4;5208:131;:::i;:::-;5200:139;;4927:419;;;:::o;5352:225::-;5492:34;5488:1;5480:6;5476:14;5469:58;5561:8;5556:2;5548:6;5544:15;5537:33;5352:225;:::o;5583:366::-;5725:3;5746:67;5810:2;5805:3;5746:67;:::i;:::-;5739:74;;5822:93;5911:3;5822:93;:::i;:::-;5940:2;5935:3;5931:12;5924:19;;5583:366;;;:::o;5955:419::-;6121:4;6159:2;6148:9;6144:18;6136:26;;6208:9;6202:4;6198:20;6194:1;6183:9;6179:17;6172:47;6236:131;6362:4;6236:131;:::i;:::-;6228:139;;5955:419;;;:::o;6380:182::-;6520:34;6516:1;6508:6;6504:14;6497:58;6380:182;:::o;6568:366::-;6710:3;6731:67;6795:2;6790:3;6731:67;:::i;:::-;6724:74;;6807:93;6896:3;6807:93;:::i;:::-;6925:2;6920:3;6916:12;6909:19;;6568:366;;;:::o;6940:419::-;7106:4;7144:2;7133:9;7129:18;7121:26;;7193:9;7187:4;7183:20;7179:1;7168:9;7164:17;7157:47;7221:131;7347:4;7221:131;:::i;:::-;7213:139;;6940:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "704600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "386",
								"INTERFACE_ID_ERC721()": "385",
								"TRANSFER_MANAGER_ERC1155()": "infinite",
								"TRANSFER_MANAGER_ERC721()": "infinite",
								"addTransferManagerCollection(address,address)": "infinite",
								"owner()": "2522",
								"removeTransferManagerCollection(address)": "30586",
								"renounceOwnership()": "30487",
								"transferManagerAddress(address)": "infinite",
								"transferManagerForCollection(address)": "infinite",
								"transferOwnership(address)": "30854"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 921,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 988,
									"end": 1026,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1076,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1076,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1083,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "168"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "166"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2797,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206247e2d30ab9b440422ebe6104993bb062efcaf7b6877f40093b287b9be5d7ce64736f6c63430008130033",
									".code": [
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "B1357DDD"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "BC6BC0CD"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "D297772F"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "E58C7C39"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "15F04966"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "301B2507"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "33BF6156"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "38928956"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 2797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2181,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2181,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1184,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1184,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 480,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 480,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 597,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 543,
											"end": 591,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 543,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 392,
											"end": 447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 392,
											"end": 447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 653,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 653,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1711,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2383,
											"end": 2756,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 437,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2436,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2436,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2436,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2597,
											"end": 2634,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 526,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "D9B67A26"
										},
										{
											"begin": 2635,
											"end": 2655,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2635,
											"end": 2655,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2597,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2597,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2597,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2576,
											"end": 2746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2731,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2746,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2576,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2432,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2756,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2383,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1336,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1350,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1318,
											"end": 1378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1318,
											"end": 1378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1396,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1396,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1396,
											"end": 1425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1388,
											"end": 1458,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1388,
											"end": 1458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1508,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1584,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "DA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62"
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1602,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 526,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "D9B67A26"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 536,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 597,
											"end": 646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 591,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 543,
											"end": 591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 437,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 392,
											"end": 447,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1890,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1815,
											"end": 1939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1815,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1989,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2052,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F"
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2063,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1639,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1656,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1740,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1621,
											"end": 1740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1659,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1659,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1738,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1659,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1740,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1621,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1838,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1804,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1857,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1804,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1932,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1985,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1932,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 2002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2008,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2077,
											"end": 2082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2151,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2278,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2163,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2248,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2426,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2495,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2426,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2598,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2508,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2591,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2560,
											"end": 2592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2560,
											"end": 2592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2604,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2674,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2695,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2674,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2654,
											"end": 2714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2712,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2714,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2654,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2818,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2851,
											"end": 2856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2827,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2827,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2971,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 2983,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2988,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3072,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2953,
											"end": 3072,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2991,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2991,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2991,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3072,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2953,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3189,
											"end": 3196,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3136,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3136,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3568,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3395,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "436F6C6C656374696F6E206E756C6C2061646472657373000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3512,
											"end": 3561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3940,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3574,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3737,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3737,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3813,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3906,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3813,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4365,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3946,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4209,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4227,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4358,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4227,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4549,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4371,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4541,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E736665724D616E61676572206E756C6C206164647265737300000000"
										},
										{
											"begin": 4507,
											"end": 4508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4921,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4555,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4782,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4718,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4785,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4718,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4883,
											"end": 4886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4794,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4887,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4794,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5346,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4927,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5190,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5166,
											"end": 5167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5334,
											"end": 5338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5208,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5339,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5208,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5577,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5352,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5556,
											"end": 5558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5725,
											"end": 5728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5805,
											"end": 5808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5746,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5911,
											"end": 5914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5822,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5935,
											"end": 5938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6172,
											"end": 6219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6236,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6562,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6380,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6520,
											"end": 6554,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6497,
											"end": 6555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6568,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6795,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6790,
											"end": 6793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6731,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6798,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6731,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6724,
											"end": 6798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6724,
											"end": 6798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6896,
											"end": 6899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6807,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6900,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6807,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6916,
											"end": 6928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 7359,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6940,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7106,
											"end": 7110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7221,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7221,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 7359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 7359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 7359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"hardhat/contracts/TransferManager.sol",
								"hardhat/contracts/interfaces/ITransferManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"TRANSFER_MANAGER_ERC1155()": "38928956",
							"TRANSFER_MANAGER_ERC721()": "b1357ddd",
							"addTransferManagerCollection(address,address)": "301b2507",
							"owner()": "8da5cb5b",
							"removeTransferManagerCollection(address)": "e58c7c39",
							"renounceOwnership()": "715018a6",
							"transferManagerAddress(address)": "15f04966",
							"transferManagerForCollection(address)": "d297772f",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transfer721\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transfer1155\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"addTransferManagerCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"removeTransferManagerCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"transferManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferManagerForCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/TransferManager.sol\":\"TransferManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"hardhat/contracts/TransferManager.sol\":{\"keccak256\":\"0x0dcaa89a894b31b7177d1abf09a216abbac9061351695a3aa76f0476d22f0877\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b669857ee84f5204ee6bd29cabd849dd6d5366a5f42ec87a513177f736d846c0\",\"dweb:/ipfs/QmPEFGERLpyRAWtgzuyW1g1Xf8be9HbwFj7E46bjAwpXrS\"]},\"hardhat/contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0x01e4744f585b0451b446609219f37d907e4e5d25a342ae1edeaf28b684bb59c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ecd900745a846c01ba7caab3a0d7ba5b2d206651b36ead76b6cd125b946d780\",\"dweb:/ipfs/QmV6tqDV6MYQzFLcDoVwiFJaohJrM3SjruYaKAMGCa4Zdm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "hardhat/contracts/TransferManager.sol:TransferManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 172,
								"contract": "hardhat/contracts/TransferManager.sol:TransferManager",
								"label": "transferManagerForCollection",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/interfaces/ITransferManager.sol": {
				"ITransferManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "transferManagerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferManagerAddress(address)": "15f04966"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"transferManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/interfaces/ITransferManager.sol\":\"ITransferManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0x01e4744f585b0451b446609219f37d907e4e5d25a342ae1edeaf28b684bb59c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ecd900745a846c01ba7caab3a0d7ba5b2d206651b36ead76b6cd125b946d780\",\"dweb:/ipfs/QmV6tqDV6MYQzFLcDoVwiFJaohJrM3SjruYaKAMGCa4Zdm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"hardhat/contracts/TransferManager.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/TransferManager.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"ITransferManager": [
							332
						],
						"Ownable": [
							112
						],
						"TransferManager": [
							322
						]
					},
					"id": 323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "63:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 113,
							"src": "88:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "96:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 147,
							"src": "156:80:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 151,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "164:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/interfaces/ITransferManager.sol",
							"file": "./interfaces/ITransferManager.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 333,
							"src": "237:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 153,
										"name": "ITransferManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 332,
										"src": "245:16:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "ITransferManager",
										"nameLocations": [
											"334:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "334:16:3"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "334:16:3"
								},
								{
									"baseName": {
										"id": 157,
										"name": "Ownable",
										"nameLocations": [
											"352:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "352:7:3"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "352:7:3"
								}
							],
							"canonicalName": "TransferManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 322,
							"linearizedBaseContracts": [
								322,
								112,
								134,
								332
							],
							"name": "TransferManager",
							"nameLocation": "315:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 161,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "415:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "392:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 159,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "392:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "437:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 164,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "503:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "480:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 162,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "480:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "526:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1357ddd",
									"id": 166,
									"mutability": "immutable",
									"name": "TRANSFER_MANAGER_ERC721",
									"nameLocation": "568:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "543:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "543:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38928956",
									"id": 168,
									"mutability": "immutable",
									"name": "TRANSFER_MANAGER_ERC1155",
									"nameLocation": "622:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "597:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "597:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d297772f",
									"id": 172,
									"mutability": "mutable",
									"name": "transferManagerForCollection",
									"nameLocation": "688:28:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "653:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 171,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 169,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "661:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "653:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "672:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "da166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b62",
									"id": 178,
									"name": "CollectionTransferManagerAdded",
									"nameLocation": "729:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "785:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "769:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "821:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "805:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:83:3"
									},
									"src": "723:120:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f",
									"id": 182,
									"name": "CollectionTransferManagerRemoved",
									"nameLocation": "854:32:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "903:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "887:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:28:3"
									},
									"src": "848:67:3"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "978:105:3",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "TRANSFER_MANAGER_ERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "988:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_transfer721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1014:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "988:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "988:38:3"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "TRANSFER_MANAGER_ERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1036:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "_transfer1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1063:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1036:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1036:40:3"
											}
										]
									},
									"id": 198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_transfer721",
												"nameLocation": "941:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "933:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_transfer1155",
												"nameLocation": "963:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "955:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "932:45:3"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:3"
									},
									"scope": 322,
									"src": "921:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1308:301:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1326:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1348:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1340:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1340:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1340:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1326:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c656374696f6e206e756c6c2061646472657373",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
																"typeString": "literal_string \"Collection null address\""
															},
															"value": "Collection null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
																"typeString": "literal_string \"Collection null address\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1318:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1318:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1318:60:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 218,
																"name": "transferManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1396:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1423:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1415:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1415:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1396:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665724d616e61676572206e756c6c2061646472657373",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1427:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da",
																"typeString": "literal_string \"TransferManager null address\""
															},
															"value": "TransferManager null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869b5b9d17e02a1418badbb598caf7cbfc13af05090d7db9183fd47937ef54da",
																"typeString": "literal_string \"TransferManager null address\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1388:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1388:70:3"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "transferManagerForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "1469:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 229,
														"indexExpression": {
															"id": 228,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1498:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1469:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "1512:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1469:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1469:58:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1574:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "transferManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1586:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "CollectionTransferManagerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "1543:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "1538:64:3"
											}
										]
									},
									"functionSelector": "301b2507",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 204,
												"name": "onlyOwner",
												"nameLocations": [
													"1298:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1298:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1298:9:3"
										}
									],
									"name": "addTransferManagerCollection",
									"nameLocation": "1193:28:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1239:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1231:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "1267:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1259:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:67:3"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1308:0:3"
									},
									"scope": 322,
									"src": "1184:425:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1805:265:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 247,
																	"name": "transferManagerForCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "1836:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 249,
																"indexExpression": {
																	"id": 248,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1865:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1836:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1888:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1880:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1880:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1880:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1836:54:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c656374696f6e206e756c6c2061646472657373",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
																"typeString": "literal_string \"Collection null address\""
															},
															"value": "Collection null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_299e38004c30737da81a4948120a9756de16b094ae7990f3535db356928e726e",
																"typeString": "literal_string \"Collection null address\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1815:124:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1815:124:3"
											},
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 258,
															"name": "transferManagerForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "1950:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 260,
														"indexExpression": {
															"id": 259,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "1979:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1950:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2001:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1993:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 261,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1993:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1993:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1950:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "1950:53:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 268,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2052:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "CollectionTransferManagerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2019:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "EmitStatement",
												"src": "2014:49:3"
											}
										]
									},
									"functionSelector": "e58c7c39",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 243,
												"name": "onlyOwner",
												"nameLocations": [
													"1795:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1795:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1795:9:3"
										}
									],
									"name": "removeTransferManagerCollection",
									"nameLocation": "1720:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1769:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1761:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:34:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1805:0:3"
									},
									"scope": 322,
									"src": "1711:359:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										331
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2304:491:3",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2314:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 281,
															"name": "transferManagerForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2332:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 283,
														"indexExpression": {
															"id": 282,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2361:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2332:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2314:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2314:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 286,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2387:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2414:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 287,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2406:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2406:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "2383:373:3",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "2418:338:3",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 296,
																		"name": "INTERFACE_ID_ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "2474:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 293,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "2444:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 292,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "2436:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2436:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2456:17:3",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "2436:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2436:58:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"arguments": [
																		{
																			"id": 307,
																			"name": "INTERFACE_ID_ERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "2635:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 304,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 274,
																					"src": "2605:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 303,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "2597:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																					"typeString": "type(contract IERC165)"
																				}
																			},
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2597:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC165_$146",
																				"typeString": "contract IERC165"
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2617:17:3",
																		"memberName": "supportsInterface",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 145,
																		"src": "2597:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (bytes4) view external returns (bool)"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2597:59:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 314,
																"nodeType": "IfStatement",
																"src": "2576:170:3",
																"trueBody": {
																	"id": 313,
																	"nodeType": "Block",
																	"src": "2671:75:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 309,
																					"name": "transferManager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "2689:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 310,
																					"name": "TRANSFER_MANAGER_ERC1155",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "2707:24:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "2689:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 312,
																			"nodeType": "ExpressionStatement",
																			"src": "2689:42:3"
																		}
																	]
																}
															},
															"id": 315,
															"nodeType": "IfStatement",
															"src": "2432:314:3",
															"trueBody": {
																"id": 302,
																"nodeType": "Block",
																"src": "2496:74:3",
																"statements": [
																	{
																		"expression": {
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 298,
																				"name": "transferManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "2514:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 299,
																				"name": "TRANSFER_MANAGER_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 166,
																				"src": "2532:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2514:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 301,
																		"nodeType": "ExpressionStatement",
																		"src": "2514:41:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 318,
													"name": "transferManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 278,
													"src": "2773:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 279,
												"id": 319,
												"nodeType": "Return",
												"src": "2766:22:3"
											}
										]
									},
									"functionSelector": "15f04966",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferManagerAddress",
									"nameLocation": "2190:22:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2261:8:3"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2230:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2222:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:34:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "2287:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2279:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2278:25:3"
									},
									"scope": 322,
									"src": "2181:614:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 323,
							"src": "306:2491:3",
							"usedErrors": []
						}
					],
					"src": "63:2735:3"
				},
				"id": 3
			},
			"hardhat/contracts/interfaces/ITransferManager.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/interfaces/ITransferManager.sol",
					"exportedSymbols": {
						"ITransferManager": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 324,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "64:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITransferManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "ITransferManager",
							"nameLocation": "99:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "15f04966",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferManagerAddress",
									"nameLocation": "131:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "171:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "163:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:34:4"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "211:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:4"
									},
									"scope": 332,
									"src": "122:98:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "89:133:4",
							"usedErrors": []
						}
					],
					"src": "64:159:4"
				},
				"id": 4
			}
		}
	}
}
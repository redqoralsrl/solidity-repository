{
	"id": "bd27870eeb4c14c1ae7e32ed428ef3b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/transfer/Transfer1155.sol": {
				"content": "// TODO : TransferERC1155.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {ITransferExecution} from \"../interfaces/ITransferExecution.sol\";\n\ncontract Transfer1155 is ITransferExecution {\n    address public immutable EDEM;\n\n    constructor(address _edem) {\n        EDEM = _edem;\n    }\n\n    function transferFrom(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external override {\n        require(msg.sender == EDEM, \"Not available outside of EDEM\");\n        IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\");\n    }\n}\n"
			},
			"hardhat/contracts/interfaces/ITransferExecution.sol": {
				"content": "// TODO : ITransferManager.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ITransferExecution {\n    function transferFrom(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/interfaces/ITransferExecution.sol": {
				"ITransferExecution": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferFrom(address,address,address,uint256,uint256)": "10f02113"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/interfaces/ITransferExecution.sol\":\"ITransferExecution\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/interfaces/ITransferExecution.sol\":{\"keccak256\":\"0xe83c9bf7317b6a037512291ab7f860f59bc8d93a031bf792603358e5b8206968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcd0a95997cd89e3efd9d472cf41f80133326f1271f4dc25b089356010a1af48\",\"dweb:/ipfs/QmS3A3Jbt4wTdUsfFg4ykJMRSAvstKEmgmXuytwU7xFWMz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/transfer/Transfer1155.sol": {
				"Transfer1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_edem",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EDEM",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/transfer/Transfer1155.sol\":238:708  contract Transfer1155 is ITransferExecution {... */\n  mstore(0x40, 0xa0)\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":324:380  constructor(address _edem) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":368:373  _edem */\n  dup1\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":361:373  EDEM = _edem */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":324:380  constructor(address _edem) {... */\n  pop\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":238:708  contract Transfer1155 is ITransferExecution {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"hardhat/contracts/transfer/Transfer1155.sol\":238:708  contract Transfer1155 is ITransferExecution {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":238:708  contract Transfer1155 is ITransferExecution {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x10f02113\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3320750f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":386:706  function transferFrom(... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":288:317  address public immutable EDEM */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":386:706  function transferFrom(... */\n    tag_8:\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":583:587  EDEM */\n      immutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":569:587  msg.sender == EDEM */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":569:579  msg.sender */\n      caller\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":569:587  msg.sender == EDEM */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":561:621  require(msg.sender == EDEM, \"Not available outside of EDEM\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":640:650  collection */\n      dup5\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":631:668  IERC1155(collection).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":669:673  from */\n      dup6\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":675:677  to */\n      dup6\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":679:686  tokenId */\n      dup6\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":688:694  amount */\n      dup6\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":631:699  IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":386:706  function transferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/transfer/Transfer1155.sol\":288:317  address public immutable EDEM */\n    tag_10:\n      immutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_23:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_25:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_26:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_46\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_25\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_27:\n        /* \"#utility.yul\":641:665   */\n      tag_48\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_49:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_28:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_51\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_27\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_29:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_30:\n        /* \"#utility.yul\":997:1021   */\n      tag_54\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_55:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_31:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_57\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:2108   */\n    tag_7:\n        /* \"#utility.yul\":1292:1298   */\n      0x00\n        /* \"#utility.yul\":1300:1306   */\n      dup1\n        /* \"#utility.yul\":1308:1314   */\n      0x00\n        /* \"#utility.yul\":1316:1322   */\n      dup1\n        /* \"#utility.yul\":1324:1330   */\n      0x00\n        /* \"#utility.yul\":1373:1376   */\n      0xa0\n        /* \"#utility.yul\":1361:1370   */\n      dup7\n        /* \"#utility.yul\":1352:1359   */\n      dup9\n        /* \"#utility.yul\":1348:1371   */\n      sub\n        /* \"#utility.yul\":1344:1377   */\n      slt\n        /* \"#utility.yul\":1341:1461   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1380:1459   */\n      tag_60\n      tag_23\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1341:1461   */\n    tag_59:\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1525:1578   */\n      tag_61\n        /* \"#utility.yul\":1570:1577   */\n      dup9\n        /* \"#utility.yul\":1561:1567   */\n      dup3\n        /* \"#utility.yul\":1550:1559   */\n      dup10\n        /* \"#utility.yul\":1546:1568   */\n      add\n        /* \"#utility.yul\":1525:1578   */\n      tag_28\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1515:1578   */\n      swap6\n      pop\n        /* \"#utility.yul\":1471:1588   */\n      pop\n        /* \"#utility.yul\":1627:1629   */\n      0x20\n        /* \"#utility.yul\":1653:1706   */\n      tag_62\n        /* \"#utility.yul\":1698:1705   */\n      dup9\n        /* \"#utility.yul\":1689:1695   */\n      dup3\n        /* \"#utility.yul\":1678:1687   */\n      dup10\n        /* \"#utility.yul\":1674:1696   */\n      add\n        /* \"#utility.yul\":1653:1706   */\n      tag_28\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1643:1706   */\n      swap5\n      pop\n        /* \"#utility.yul\":1598:1716   */\n      pop\n        /* \"#utility.yul\":1755:1757   */\n      0x40\n        /* \"#utility.yul\":1781:1834   */\n      tag_63\n        /* \"#utility.yul\":1826:1833   */\n      dup9\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup10\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_28\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1771:1834   */\n      swap4\n      pop\n        /* \"#utility.yul\":1726:1844   */\n      pop\n        /* \"#utility.yul\":1883:1885   */\n      0x60\n        /* \"#utility.yul\":1909:1962   */\n      tag_64\n        /* \"#utility.yul\":1954:1961   */\n      dup9\n        /* \"#utility.yul\":1945:1951   */\n      dup3\n        /* \"#utility.yul\":1934:1943   */\n      dup10\n        /* \"#utility.yul\":1930:1952   */\n      add\n        /* \"#utility.yul\":1909:1962   */\n      tag_31\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1899:1962   */\n      swap3\n      pop\n        /* \"#utility.yul\":1854:1972   */\n      pop\n        /* \"#utility.yul\":2011:2014   */\n      0x80\n        /* \"#utility.yul\":2038:2091   */\n      tag_65\n        /* \"#utility.yul\":2083:2090   */\n      dup9\n        /* \"#utility.yul\":2074:2080   */\n      dup3\n        /* \"#utility.yul\":2063:2072   */\n      dup10\n        /* \"#utility.yul\":2059:2081   */\n      add\n        /* \"#utility.yul\":2038:2091   */\n      tag_31\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2028:2091   */\n      swap2\n      pop\n        /* \"#utility.yul\":1982:2101   */\n      pop\n        /* \"#utility.yul\":1197:2108   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2232   */\n    tag_32:\n        /* \"#utility.yul\":2201:2225   */\n      tag_67\n        /* \"#utility.yul\":2219:2224   */\n      dup2\n        /* \"#utility.yul\":2201:2225   */\n      tag_26\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2196:2199   */\n      dup3\n        /* \"#utility.yul\":2189:2226   */\n      mstore\n        /* \"#utility.yul\":2114:2232   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2460   */\n    tag_12:\n        /* \"#utility.yul\":2331:2335   */\n      0x00\n        /* \"#utility.yul\":2369:2371   */\n      0x20\n        /* \"#utility.yul\":2358:2367   */\n      dup3\n        /* \"#utility.yul\":2354:2372   */\n      add\n        /* \"#utility.yul\":2346:2372   */\n      swap1\n      pop\n        /* \"#utility.yul\":2382:2453   */\n      tag_69\n        /* \"#utility.yul\":2450:2451   */\n      0x00\n        /* \"#utility.yul\":2439:2448   */\n      dup4\n        /* \"#utility.yul\":2435:2452   */\n      add\n        /* \"#utility.yul\":2426:2432   */\n      dup5\n        /* \"#utility.yul\":2382:2453   */\n      tag_32\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2238:2460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2466:2635   */\n    tag_33:\n        /* \"#utility.yul\":2550:2561   */\n      0x00\n        /* \"#utility.yul\":2584:2590   */\n      dup3\n        /* \"#utility.yul\":2579:2582   */\n      dup3\n        /* \"#utility.yul\":2572:2591   */\n      mstore\n        /* \"#utility.yul\":2624:2628   */\n      0x20\n        /* \"#utility.yul\":2619:2622   */\n      dup3\n        /* \"#utility.yul\":2615:2629   */\n      add\n        /* \"#utility.yul\":2600:2629   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2641:2820   */\n    tag_34:\n        /* \"#utility.yul\":2781:2812   */\n      0x4e6f7420617661696c61626c65206f757473696465206f66204544454d000000\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2769:2775   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      add\n        /* \"#utility.yul\":2758:2813   */\n      mstore\n        /* \"#utility.yul\":2641:2820   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:3192   */\n    tag_35:\n        /* \"#utility.yul\":2968:2971   */\n      0x00\n        /* \"#utility.yul\":2989:3056   */\n      tag_73\n        /* \"#utility.yul\":3053:3055   */\n      0x1d\n        /* \"#utility.yul\":3048:3051   */\n      dup4\n        /* \"#utility.yul\":2989:3056   */\n      tag_33\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2982:3056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3158   */\n      tag_74\n        /* \"#utility.yul\":3154:3157   */\n      dup3\n        /* \"#utility.yul\":3065:3158   */\n      tag_34\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3183:3185   */\n      0x20\n        /* \"#utility.yul\":3178:3181   */\n      dup3\n        /* \"#utility.yul\":3174:3186   */\n      add\n        /* \"#utility.yul\":3167:3186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2826:3192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3198:3617   */\n    tag_16:\n        /* \"#utility.yul\":3364:3368   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3391:3400   */\n      dup3\n        /* \"#utility.yul\":3387:3405   */\n      add\n        /* \"#utility.yul\":3379:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3451:3460   */\n      dup2\n        /* \"#utility.yul\":3445:3449   */\n      dup2\n        /* \"#utility.yul\":3441:3461   */\n      sub\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3426:3435   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3415:3462   */\n      mstore\n        /* \"#utility.yul\":3479:3610   */\n      tag_76\n        /* \"#utility.yul\":3605:3609   */\n      dup2\n        /* \"#utility.yul\":3479:3610   */\n      tag_35\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3471:3610   */\n      swap1\n      pop\n        /* \"#utility.yul\":3198:3617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3741   */\n    tag_36:\n        /* \"#utility.yul\":3710:3734   */\n      tag_78\n        /* \"#utility.yul\":3728:3733   */\n      dup2\n        /* \"#utility.yul\":3710:3734   */\n      tag_29\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3705:3708   */\n      dup3\n        /* \"#utility.yul\":3698:3735   */\n      mstore\n        /* \"#utility.yul\":3623:3741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3747:3915   */\n    tag_37:\n        /* \"#utility.yul\":3830:3841   */\n      0x00\n        /* \"#utility.yul\":3864:3870   */\n      dup3\n        /* \"#utility.yul\":3859:3862   */\n      dup3\n        /* \"#utility.yul\":3852:3871   */\n      mstore\n        /* \"#utility.yul\":3904:3908   */\n      0x20\n        /* \"#utility.yul\":3899:3902   */\n      dup3\n        /* \"#utility.yul\":3895:3909   */\n      add\n        /* \"#utility.yul\":3880:3909   */\n      swap1\n      pop\n        /* \"#utility.yul\":3747:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4035   */\n    tag_38:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4041:4403   */\n    tag_39:\n        /* \"#utility.yul\":4182:4185   */\n      0x00\n        /* \"#utility.yul\":4203:4268   */\n      tag_82\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4261:4264   */\n      dup4\n        /* \"#utility.yul\":4203:4268   */\n      tag_37\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":4196:4268   */\n      swap2\n      pop\n        /* \"#utility.yul\":4277:4370   */\n      tag_83\n        /* \"#utility.yul\":4366:4369   */\n      dup3\n        /* \"#utility.yul\":4277:4370   */\n      tag_38\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":4395:4396   */\n      0x00\n        /* \"#utility.yul\":4390:4393   */\n      dup3\n        /* \"#utility.yul\":4386:4397   */\n      add\n        /* \"#utility.yul\":4379:4397   */\n      swap1\n      pop\n        /* \"#utility.yul\":4041:4403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4409:5268   */\n    tag_18:\n        /* \"#utility.yul\":4686:4690   */\n      0x00\n        /* \"#utility.yul\":4724:4727   */\n      0xa0\n        /* \"#utility.yul\":4713:4722   */\n      dup3\n        /* \"#utility.yul\":4709:4728   */\n      add\n        /* \"#utility.yul\":4701:4728   */\n      swap1\n      pop\n        /* \"#utility.yul\":4738:4809   */\n      tag_85\n        /* \"#utility.yul\":4806:4807   */\n      0x00\n        /* \"#utility.yul\":4795:4804   */\n      dup4\n        /* \"#utility.yul\":4791:4808   */\n      add\n        /* \"#utility.yul\":4782:4788   */\n      dup8\n        /* \"#utility.yul\":4738:4809   */\n      tag_32\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4819:4891   */\n      tag_86\n        /* \"#utility.yul\":4887:4889   */\n      0x20\n        /* \"#utility.yul\":4876:4885   */\n      dup4\n        /* \"#utility.yul\":4872:4890   */\n      add\n        /* \"#utility.yul\":4863:4869   */\n      dup7\n        /* \"#utility.yul\":4819:4891   */\n      tag_32\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4901:4973   */\n      tag_87\n        /* \"#utility.yul\":4969:4971   */\n      0x40\n        /* \"#utility.yul\":4958:4967   */\n      dup4\n        /* \"#utility.yul\":4954:4972   */\n      add\n        /* \"#utility.yul\":4945:4951   */\n      dup6\n        /* \"#utility.yul\":4901:4973   */\n      tag_36\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":4983:5055   */\n      tag_88\n        /* \"#utility.yul\":5051:5053   */\n      0x60\n        /* \"#utility.yul\":5040:5049   */\n      dup4\n        /* \"#utility.yul\":5036:5054   */\n      add\n        /* \"#utility.yul\":5027:5033   */\n      dup5\n        /* \"#utility.yul\":4983:5055   */\n      tag_36\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":5103:5112   */\n      dup2\n        /* \"#utility.yul\":5097:5101   */\n      dup2\n        /* \"#utility.yul\":5093:5113   */\n      sub\n        /* \"#utility.yul\":5087:5090   */\n      0x80\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5072:5091   */\n      add\n        /* \"#utility.yul\":5065:5114   */\n      mstore\n        /* \"#utility.yul\":5131:5261   */\n      tag_89\n        /* \"#utility.yul\":5256:5260   */\n      dup2\n        /* \"#utility.yul\":5131:5261   */\n      tag_39\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":5123:5261   */\n      swap1\n      pop\n        /* \"#utility.yul\":4409:5268   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dd47505e17bbbc5409e74465e7c763d76a7cd217d19242644bd5a7e72461db1f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161054b38038061054b833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161042e61011d600039600081816077015261017d015261042e6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806310f021131461003b5780633320750f14610057575b600080fd5b61005560048036038101906100509190610238565b610075565b005b61005f61017b565b60405161006c91906102c2565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa9061033a565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663f242432a858585856040518563ffffffff1660e01b815260040161014294939291906103a0565b600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cf826101a4565b9050919050565b6101df816101c4565b81146101ea57600080fd5b50565b6000813590506101fc816101d6565b92915050565b6000819050919050565b61021581610202565b811461022057600080fd5b50565b6000813590506102328161020c565b92915050565b600080600080600060a086880312156102545761025361019f565b5b6000610262888289016101ed565b9550506020610273888289016101ed565b9450506040610284888289016101ed565b935050606061029588828901610223565b92505060806102a688828901610223565b9150509295509295909350565b6102bc816101c4565b82525050565b60006020820190506102d760008301846102b3565b92915050565b600082825260208201905092915050565b7f4e6f7420617661696c61626c65206f757473696465206f66204544454d000000600082015250565b6000610324601d836102dd565b915061032f826102ee565b602082019050919050565b6000602082019050818103600083015261035381610317565b9050919050565b61036381610202565b82525050565b600082825260208201905092915050565b50565b600061038a600083610369565b91506103958261037a565b600082019050919050565b600060a0820190506103b560008301876102b3565b6103c260208301866102b3565b6103cf604083018561035a565b6103dc606083018461035a565b81810360808301526103ed8161037d565b90509594505050505056fea2646970667358221220dd47505e17bbbc5409e74465e7c763d76a7cd217d19242644bd5a7e72461db1f64736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x54B CODESIZE SUB DUP1 PUSH2 0x54B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xFC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C DUP3 PUSH2 0x71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC DUP2 PUSH2 0x91 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9 DUP2 PUSH2 0xA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xE4 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x42E PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x77 ADD MSTORE PUSH2 0x17D ADD MSTORE PUSH2 0x42E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10F02113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x3320750F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x238 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x170 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232 DUP2 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x19F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x273 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x284 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x295 DUP9 DUP3 DUP10 ADD PUSH2 0x223 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2A6 DUP9 DUP3 DUP10 ADD PUSH2 0x223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617661696C61626C65206F757473696465206F66204544454D000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324 PUSH1 0x1D DUP4 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH2 0x32F DUP3 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353 DUP2 PUSH2 0x317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x363 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A PUSH1 0x0 DUP4 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP PUSH2 0x395 DUP3 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3B5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x3C2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x35A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3ED DUP2 PUSH2 0x37D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD SELFBALANCE POP 0x5E OR 0xBB 0xBC SLOAD MULMOD 0xE7 PREVRANDAO PUSH6 0xE7C763D76A7C 0xD2 OR 0xD1 SWAP3 TIMESTAMP PUSH5 0x4BD5A7E724 PUSH2 0xDB1F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "238:470:3:-:0;;;324:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;368:5;361:12;;;;;;;;;;324:56;238:470;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;238:470:3:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EDEM_159": {
									"entryPoint": 379,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_203": {
									"entryPoint": 117,
									"id": 203,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5271:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:777:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1378:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1380:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1380:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1380:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1352:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1361:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1348:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1348:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:33:4"
															},
															"nodeType": "YulIf",
															"src": "1341:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1471:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1486:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1490:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1515:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1550:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1561:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1546:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1546:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1570:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1525:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1515:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1598:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1613:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1617:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1643:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1678:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1674:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1698:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1653:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1643:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1726:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1771:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1854:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1869:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1899:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1934:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1945:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1930:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1930:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1954:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1909:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1909:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1899:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1982:119:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1997:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2001:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2028:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2063:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2074:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2059:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2059:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2083:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2038:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2028:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1269:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1280:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1292:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1300:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1308:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1316:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1324:6:4",
														"type": ""
													}
												],
												"src": "1197:911:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2196:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2219:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2201:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2189:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2189:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2167:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2174:3:4",
														"type": ""
													}
												],
												"src": "2114:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2358:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2346:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2426:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2382:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2382:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2308:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2320:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2331:4:4",
														"type": ""
													}
												],
												"src": "2238:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2579:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2584:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2572:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2600:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2619:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2624:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2600:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2534:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2539:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2550:11:4",
														"type": ""
													}
												],
												"src": "2466:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2747:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2769:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2777:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:4"
																	},
																	{
																		"hexValue": "4e6f7420617661696c61626c65206f757473696465206f66204544454d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2781:31:4",
																		"type": "",
																		"value": "Not available outside of EDEM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2758:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2758:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2739:6:4",
														"type": ""
													}
												],
												"src": "2641:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2989:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2982:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3154:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc",
																	"nodeType": "YulIdentifier",
																	"src": "3065:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3167:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3178:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2960:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2968:3:4",
														"type": ""
													}
												],
												"src": "2826:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3369:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3379:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3391:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3379:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3445:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3441:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3441:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3415:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3605:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3479:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3471:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3349:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:4",
														"type": ""
													}
												],
												"src": "3198:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3688:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3705:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3728:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3710:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3683:3:4",
														"type": ""
													}
												],
												"src": "3623:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3842:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3859:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3864:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3880:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3899:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3904:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3895:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3880:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3814:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3819:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3830:11:4",
														"type": ""
													}
												],
												"src": "3747:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4027:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4019:6:4",
														"type": ""
													}
												],
												"src": "3921:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:217:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4196:72:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4261:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4203:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:65:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4366:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "4277:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4390:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4386:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4386:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4379:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4174:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4182:3:4",
														"type": ""
													}
												],
												"src": "4041:362:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4691:577:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4701:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4713:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4709:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4709:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4701:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4782:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4795:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4806:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4791:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4791:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4738:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4738:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4738:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4819:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4819:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4945:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4958:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4969:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4901:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5027:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5036:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4983:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4983:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5087:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5097:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5103:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:49:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5065:49:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5123:138:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5256:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5131:123:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:130:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5123:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4639:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4651:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4659:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4667:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4675:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4686:4:4",
														"type": ""
													}
												],
												"src": "4409:859:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not available outside of EDEM\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"159": [
									{
										"length": 32,
										"start": 119
									},
									{
										"length": 32,
										"start": 381
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806310f021131461003b5780633320750f14610057575b600080fd5b61005560048036038101906100509190610238565b610075565b005b61005f61017b565b60405161006c91906102c2565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa9061033a565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663f242432a858585856040518563ffffffff1660e01b815260040161014294939291906103a0565b600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cf826101a4565b9050919050565b6101df816101c4565b81146101ea57600080fd5b50565b6000813590506101fc816101d6565b92915050565b6000819050919050565b61021581610202565b811461022057600080fd5b50565b6000813590506102328161020c565b92915050565b600080600080600060a086880312156102545761025361019f565b5b6000610262888289016101ed565b9550506020610273888289016101ed565b9450506040610284888289016101ed565b935050606061029588828901610223565b92505060806102a688828901610223565b9150509295509295909350565b6102bc816101c4565b82525050565b60006020820190506102d760008301846102b3565b92915050565b600082825260208201905092915050565b7f4e6f7420617661696c61626c65206f757473696465206f66204544454d000000600082015250565b6000610324601d836102dd565b915061032f826102ee565b602082019050919050565b6000602082019050818103600083015261035381610317565b9050919050565b61036381610202565b82525050565b600082825260208201905092915050565b50565b600061038a600083610369565b91506103958261037a565b600082019050919050565b600060a0820190506103b560008301876102b3565b6103c260208301866102b3565b6103cf604083018561035a565b6103dc606083018461035a565b81810360808301526103ed8161037d565b90509594505050505056fea2646970667358221220dd47505e17bbbc5409e74465e7c763d76a7cd217d19242644bd5a7e72461db1f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10F02113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x3320750F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x238 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x170 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP2 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232 DUP2 PUSH2 0x20C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x19F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x273 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x284 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x295 DUP9 DUP3 DUP10 ADD PUSH2 0x223 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2A6 DUP9 DUP3 DUP10 ADD PUSH2 0x223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617661696C61626C65206F757473696465206F66204544454D000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324 PUSH1 0x1D DUP4 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH2 0x32F DUP3 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353 DUP2 PUSH2 0x317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x363 DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A PUSH1 0x0 DUP4 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP PUSH2 0x395 DUP3 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3B5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x3C2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x35A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3ED DUP2 PUSH2 0x37D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD SELFBALANCE POP 0x5E OR 0xBB 0xBC SLOAD MULMOD 0xE7 PREVRANDAO PUSH6 0xE7C763D76A7C 0xD2 OR 0xD1 SWAP3 TIMESTAMP PUSH5 0x4BD5A7E724 PUSH2 0xDB1F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "238:470:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;288:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:320;583:4;569:18;;:10;:18;;;561:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;640:10;631:37;;;669:4;675:2;679:7;688:6;631:68;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:320;;;;;:::o;288:29::-;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:911::-;1292:6;1300;1308;1316;1324;1373:3;1361:9;1352:7;1348:23;1344:33;1341:120;;;1380:79;;:::i;:::-;1341:120;1500:1;1525:53;1570:7;1561:6;1550:9;1546:22;1525:53;:::i;:::-;1515:63;;1471:117;1627:2;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1598:118;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1883:2;1909:53;1954:7;1945:6;1934:9;1930:22;1909:53;:::i;:::-;1899:63;;1854:118;2011:3;2038:53;2083:7;2074:6;2063:9;2059:22;2038:53;:::i;:::-;2028:63;;1982:119;1197:911;;;;;;;;:::o;2114:118::-;2201:24;2219:5;2201:24;:::i;:::-;2196:3;2189:37;2114:118;;:::o;2238:222::-;2331:4;2369:2;2358:9;2354:18;2346:26;;2382:71;2450:1;2439:9;2435:17;2426:6;2382:71;:::i;:::-;2238:222;;;;:::o;2466:169::-;2550:11;2584:6;2579:3;2572:19;2624:4;2619:3;2615:14;2600:29;;2466:169;;;;:::o;2641:179::-;2781:31;2777:1;2769:6;2765:14;2758:55;2641:179;:::o;2826:366::-;2968:3;2989:67;3053:2;3048:3;2989:67;:::i;:::-;2982:74;;3065:93;3154:3;3065:93;:::i;:::-;3183:2;3178:3;3174:12;3167:19;;2826:366;;;:::o;3198:419::-;3364:4;3402:2;3391:9;3387:18;3379:26;;3451:9;3445:4;3441:20;3437:1;3426:9;3422:17;3415:47;3479:131;3605:4;3479:131;:::i;:::-;3471:139;;3198:419;;;:::o;3623:118::-;3710:24;3728:5;3710:24;:::i;:::-;3705:3;3698:37;3623:118;;:::o;3747:168::-;3830:11;3864:6;3859:3;3852:19;3904:4;3899:3;3895:14;3880:29;;3747:168;;;;:::o;3921:114::-;;:::o;4041:362::-;4182:3;4203:65;4266:1;4261:3;4203:65;:::i;:::-;4196:72;;4277:93;4366:3;4277:93;:::i;:::-;4395:1;4390:3;4386:11;4379:18;;4041:362;;;:::o;4409:859::-;4686:4;4724:3;4713:9;4709:19;4701:27;;4738:71;4806:1;4795:9;4791:17;4782:6;4738:71;:::i;:::-;4819:72;4887:2;4876:9;4872:18;4863:6;4819:72;:::i;:::-;4901;4969:2;4958:9;4954:18;4945:6;4901:72;:::i;:::-;4983;5051:2;5040:9;5036:18;5027:6;4983:72;:::i;:::-;5103:9;5097:4;5093:20;5087:3;5076:9;5072:19;5065:49;5131:130;5256:4;5131:130;:::i;:::-;5123:138;;4409:859;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "214000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EDEM()": "infinite",
								"transferFrom(address,address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 380,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 368,
									"end": 373,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 361,
									"end": 373,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 361,
									"end": 373,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 361,
									"end": 373,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 361,
									"end": 373,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 380,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 708,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "159"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 708,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd47505e17bbbc5409e74465e7c763d76a7cd217d19242644bd5a7e72461db1f64736f6c63430008130033",
									".code": [
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "10F02113"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "3320750F"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 708,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 583,
											"end": 587,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 569,
											"end": 579,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 569,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 569,
											"end": 587,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 561,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 561,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 561,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 650,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 631,
											"end": 668,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 631,
											"end": 668,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 631,
											"end": 668,
											"name": "PUSH",
											"source": 3,
											"value": "F242432A"
										},
										{
											"begin": 669,
											"end": 673,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 675,
											"end": 677,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 631,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 631,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 288,
											"end": 317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 288,
											"end": 317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1361,
											"end": 1370,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1359,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1377,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1461,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1380,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1459,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1380,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1461,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1570,
											"end": 1577,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1525,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1578,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1525,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1653,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1781,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1909,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1909,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1962,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1909,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1962,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2038,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2232,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2114,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2201,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2225,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2201,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2367,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2382,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2453,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2382,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2820,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2641,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420617661696C61626C65206F757473696465206F66204544454D000000"
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2989,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3154,
											"end": 3157,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3065,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3617,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3198,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3605,
											"end": 3609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3479,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3479,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3623,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3710,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4035,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3921,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4403,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4041,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4182,
											"end": 4185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4264,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4203,
											"end": 4268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4268,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4203,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4277,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4370,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4277,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4397,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4727,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4713,
											"end": 4722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 4728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 4728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4738,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4819,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4891,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4819,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 4967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 4951,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4901,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4973,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4901,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4983,
											"end": 5055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4983,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5131,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5261,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5131,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 5268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"hardhat/contracts/interfaces/ITransferExecution.sol",
								"hardhat/contracts/transfer/Transfer1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EDEM()": "3320750f",
							"transferFrom(address,address,address,uint256,uint256)": "10f02113"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_edem\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EDEM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/transfer/Transfer1155.sol\":\"Transfer1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"hardhat/contracts/interfaces/ITransferExecution.sol\":{\"keccak256\":\"0xe83c9bf7317b6a037512291ab7f860f59bc8d93a031bf792603358e5b8206968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcd0a95997cd89e3efd9d472cf41f80133326f1271f4dc25b089356010a1af48\",\"dweb:/ipfs/QmS3A3Jbt4wTdUsfFg4ykJMRSAvstKEmgmXuytwU7xFWMz\"]},\"hardhat/contracts/transfer/Transfer1155.sol\":{\"keccak256\":\"0x3b49634a9536a00637ac422f01d31c1eb7c4a17b8633432c6a4a815207c9726e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3eb9f1c214172d2f0846464478ffb5f4290d1b9433c6b31b4edf43549a6e8d0\",\"dweb:/ipfs/QmPuTkFHaRzXzHxDGRPcBQkhjc8xK2XY25814aVKcedcJW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							133
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 134,
							"src": "135:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"372:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "372:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								133
							],
							"name": "IERC1155",
							"nameLocation": "360:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "518:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "533:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "559:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "581:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "601:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:0"
									},
									"src": "512:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "789:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "812:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "846:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "876:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "904:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "904:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "927:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "927:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:0"
									},
									"src": "783:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1129:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1154:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:0"
									},
									"src": "1108:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 49,
									"name": "URI",
									"nameLocation": "1555:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1559:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1573:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:0"
									},
									"src": "1549:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1813:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:0"
									},
									"scope": 121,
									"src": "1777:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2080:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2109:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2180:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:0"
									},
									"scope": 121,
									"src": "2056:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2484:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:0"
									},
									"scope": 121,
									"src": "2457:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2715:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:0"
									},
									"scope": 121,
									"src": "2672:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3364:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3386:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3450:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:0"
									},
									"scope": 121,
									"src": "3329:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3948:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3968:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4000:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4036:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:0"
									},
									"scope": 121,
									"src": "3886:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "350:3723:0",
							"usedErrors": []
						}
					],
					"src": "110:3964:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC165",
							"nameLocation": "415:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "801:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 126,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 133,
									"src": "774:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "405:447:1",
							"usedErrors": []
						}
					],
					"src": "100:753:1"
				},
				"id": 1
			},
			"hardhat/contracts/interfaces/ITransferExecution.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/interfaces/ITransferExecution.sol",
					"exportedSymbols": {
						"ITransferExecution": [
							149
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "63:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITransferExecution",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 149,
							"linearizedBaseContracts": [
								149
							],
							"name": "ITransferExecution",
							"nameLocation": "98:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "10f02113",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "132:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "162:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "154:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "190:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "182:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "232:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "224:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "257:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "249:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "144:125:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:2"
									},
									"scope": 149,
									"src": "123:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 150,
							"src": "88:193:2",
							"usedErrors": []
						}
					],
					"src": "63:219:2"
				},
				"id": 2
			},
			"hardhat/contracts/transfer/Transfer1155.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/transfer/Transfer1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"ITransferExecution": [
							149
						],
						"Transfer1155": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 122,
							"src": "87:76:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "95:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/interfaces/ITransferExecution.sol",
							"file": "../interfaces/ITransferExecution.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 150,
							"src": "164:72:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "ITransferExecution",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 149,
										"src": "172:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 156,
										"name": "ITransferExecution",
										"nameLocations": [
											"263:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "263:18:3"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "263:18:3"
								}
							],
							"canonicalName": "Transfer1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								149
							],
							"name": "Transfer1155",
							"nameLocation": "247:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3320750f",
									"id": 159,
									"mutability": "immutable",
									"name": "EDEM",
									"nameLocation": "313:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "288:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "351:29:3",
										"statements": [
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "EDEM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "361:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "_edem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "368:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "361:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "361:12:3"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_edem",
												"nameLocation": "344:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "336:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:15:3"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:3"
									},
									"scope": 204,
									"src": "324:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "551:155:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 184,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "569:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "573:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "569:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 186,
																"name": "EDEM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "583:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "569:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617661696c61626c65206f757473696465206f66204544454d",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "589:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc",
																"typeString": "literal_string \"Not available outside of EDEM\""
															},
															"value": "Not available outside of EDEM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1dfe18151a75e360b37c8e7d2e41079119033863b038341082dc1b5cbb79ddc",
																"typeString": "literal_string \"Not available outside of EDEM\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "561:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "561:60:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "669:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "675:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "679:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "688:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "696:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 192,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "640:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 191,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "631:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "631:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "652:16:3",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "631:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "631:68:3"
											}
										]
									},
									"functionSelector": "10f02113",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "395:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "542:8:3"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "425:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "417:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "453:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "445:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "475:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "467:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "487:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:125:3"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:3"
									},
									"scope": 204,
									"src": "386:320:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 205,
							"src": "238:470:3",
							"usedErrors": []
						}
					],
					"src": "62:647:3"
				},
				"id": 3
			}
		}
	}
}
{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "takerAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct MarketTypes.User",
						"name": "userProposer",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "edemSigner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "protocolAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "tradeTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct MarketTypes.MarketPlace",
						"name": "marketSeller",
						"type": "tuple"
					}
				],
				"name": "proposerPay",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "takerAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct MarketTypes.User",
						"name": "userProposer",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "edemSigner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "protocolAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "tradeTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct MarketTypes.MarketPlace",
						"name": "marketSeller",
						"type": "tuple"
					}
				],
				"name": "proposerPayETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "takerAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct MarketTypes.User",
						"name": "userProposer",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "edemSigner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "protocolAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "tradeTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct MarketTypes.MarketPlace",
						"name": "marketSeller",
						"type": "tuple"
					}
				],
				"name": "proposerPayETHAndWETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "takerAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct MarketTypes.User",
						"name": "userSeller",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isDealer",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "edemSigner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "protocolAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "tradeTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct MarketTypes.MarketPlace",
						"name": "marketProposer",
						"type": "tuple"
					}
				],
				"name": "suggestApprove",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"hardhat/contracts/interfaces/IEdem.sol": "IEdem"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"hardhat/contracts/interfaces/IEdem.sol": {
			"keccak256": "0x6fbe4ab79bbbfde9371e71a221ee220d71c402ab6a2f5ad9484207d8e7910890",
			"license": "MIT",
			"urls": [
				"bzz-raw://0045f66ba353d98fb4be5f4399d11a1926daf3cac06d9b2a4fb005f3b2905c61",
				"dweb:/ipfs/QmWivVMPMmHpdUtVBQQg8DbhRej73MApHVZGHcvodPSwms"
			]
		},
		"hardhat/contracts/libraries/MarketTypes.sol": {
			"keccak256": "0x13212afd96004a6866cd1801072e693f8ece47386563f69938e377eaca4c063d",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ce500c28b379345cd24efc0099dda76ae92510c2996ec3f8f934df9d954ee9b",
				"dweb:/ipfs/QmQyzpSJuytcnSiKoezaiZ5CXQv5nAfNqCcjP6Wtep5v7W"
			]
		}
	},
	"version": 1
}
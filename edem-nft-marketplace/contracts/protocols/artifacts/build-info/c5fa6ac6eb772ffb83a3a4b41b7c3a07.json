{
	"id": "c5fa6ac6eb772ffb83a3a4b41b7c3a07",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/protocols/ProtocolAndExecution.sol": {
				"content": "// TODO : ProtocolAndFixedPrice.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {MarketTypes} from \"../libraries/MarketTypes.sol\";\nimport {IProtocolAndExecution} from \"../interfaces/IProtocolAndExecution.sol\";\n\ncontract ProtocolAndExecution is Ownable, IProtocolAndExecution {\n    // Edem 프로토콜 수수료 바뀔때 마다\n    event NewProtocolFee(uint256 protocolFee);\n\n    // Edem 프로토콜 수수료 (10,000 = 100% / 500 => 5% / 150 => 1.5%)\n    uint256 internal _protocolFee = 10;\n\n    // Edem NFT 판매자가 제안을 수락할 수 있는지 여부\n    function possibleAcceptSuggest(\n        MarketTypes.User calldata userSeller,\n        MarketTypes.MarketPlace calldata marketProposer\n    ) external view override returns (bool, uint256, uint256) {\n        return (\n            ((marketProposer.price == userSeller.price) &&\n                (marketProposer.tokenId == userSeller.tokenId) &&\n                (marketProposer.endTime >= block.timestamp) &&\n                (marketProposer.startTime <= block.timestamp)),\n            userSeller.tokenId,\n            marketProposer.nftAmount\n        );\n    }\n\n    // Edem NFT 구매자가 판매상품을 살 수 있는지 여부\n    function possiblePurchase(\n        MarketTypes.User calldata userProposer,\n        MarketTypes.MarketPlace calldata marketSeller\n    ) external view override returns (bool, uint256, uint256) {\n        return (\n            (\n                (marketSeller.price == userProposer.price) &&\n                    (marketSeller.tokenId == marketSeller.tokenId) &&\n                    (marketSeller.startTime <= block.timestamp) &&\n                    (marketSeller.endTime >= block.timestamp),\n                marketSeller.tokenId,\n                marketSeller.nftAmount\n            )\n        );\n    }\n\n    // Edem 프로토콜 수수료 변경\n    function setProtocolFee(uint256 newProtocolFee) external onlyOwner {\n        _protocolFee = newProtocolFee;\n        emit NewProtocolFee(newProtocolFee);\n    }\n\n    // Edem 프로토콜 수수료 보기\n    function viewProtocolFee() external view override returns (uint256) {\n        return _protocolFee;\n    }\n}\n"
			},
			"hardhat/contracts/interfaces/IProtocolAndExecution.sol": {
				"content": "// TODO : IExecutionFixed.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {MarketTypes} from \"../libraries/MarketTypes.sol\";\n\ninterface IProtocolAndExecution {\n    function possibleAcceptSuggest(\n        MarketTypes.User calldata userSeller,\n        MarketTypes.MarketPlace calldata marketProposer\n    ) external view returns (bool, uint256, uint256);\n\n    function possiblePurchase(\n        MarketTypes.User calldata userProposer,\n        MarketTypes.MarketPlace calldata marketSeller\n    ) external view returns (bool, uint256, uint256);\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"hardhat/contracts/libraries/MarketTypes.sol": {
				"content": "// TODO : OrderTypes.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title MarketTypes\n * @notice This library containes Market types for the Edem Market.\n */\nlibrary MarketTypes {\n    // Market hash\n    // keccak256(\"MarketPlace(bool isDealer,address edemSigner,address collection,uint256 tokenId,uint256 nftAmount,uint256 price,address protocolAddress,address tradeTokenAddress,uint256 nonce,uint256 startTime,uint256 endTime,bool isCombo,uint256[] combos)\");\n    // bytes32 internal constant MARKET_PLACE_HASH =\n    //     0x1bb1b70d1589d811d0ea870ccb0da21dc9f4a701e3b41a486bb9489901024cb0;\n    // MarketPlace(bool isDealer,address edemSigner,address collection,uint256 tokenId,uint256 nftAmount,uint256 price,address protocolAddress,address tradeTokenAddress,uint256 nonce,uint256 startTime,uint256 endTime)\n    bytes32 internal constant MARKET_PLACE_HASH = 0x821b23108860b2262fa623d45a26073021dcb49a4ad5e89488e070794630832a;\n\n    // Market 판매 목록 혹은 제안 목록\n    struct MarketPlace {\n        bool isDealer; // true -> NFT seller / false -> NFT proposer\n        address edemSigner; // signer of the MarketPlace order\n        address collection; // NFT contract Address\n        uint256 tokenId; // NFT token Id\n        uint256 nftAmount; // Must be 1 for ERC721, 1+ for ERC1155\n        uint256 price; // NFT price 1ETH => 1000000000000000000\n        address protocolAddress; // trade execution / protocol Fee\n        address tradeTokenAddress; // curreny with WETH ...\n        uint256 nonce; // New sales information is unique unless it ignores existing sales information\n        uint256 startTime; // start timestamp\n        uint256 endTime; // end timestamp\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n    }\n\n    // Market 상품을 사는 사람 / 상품에 제안을 하는 사람\n    struct User {\n        bool isDealer; // true -> NFT seller / false -> NFT proposer\n        address takerAddress; // msg.sender\n        uint256 price; // purchase Amount\n        uint256 tokenId; // NFT token Id\n    }\n\n    // hash\n    function hash(\n        MarketPlace memory marketPlace\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    MARKET_PLACE_HASH,\n                    marketPlace.isDealer,\n                    marketPlace.edemSigner,\n                    marketPlace.collection,\n                    marketPlace.tokenId,\n                    marketPlace.nftAmount,\n                    marketPlace.price,\n                    marketPlace.protocolAddress,\n                    marketPlace.tradeTokenAddress,\n                    marketPlace.nonce,\n                    marketPlace.startTime,\n                    marketPlace.endTime\n                )\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/interfaces/IProtocolAndExecution.sol": {
				"IProtocolAndExecution": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "takerAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketTypes.User",
									"name": "userSeller",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "edemSigner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "nftAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tradeTokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct MarketTypes.MarketPlace",
									"name": "marketProposer",
									"type": "tuple"
								}
							],
							"name": "possibleAcceptSuggest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "takerAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketTypes.User",
									"name": "userProposer",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "edemSigner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "nftAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tradeTokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct MarketTypes.MarketPlace",
									"name": "marketSeller",
									"type": "tuple"
								}
							],
							"name": "possiblePurchase",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"possibleAcceptSuggest((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "27891057",
							"possiblePurchase((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "fceb5d6c",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.User\",\"name\":\"userSeller\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"edemSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct MarketTypes.MarketPlace\",\"name\":\"marketProposer\",\"type\":\"tuple\"}],\"name\":\"possibleAcceptSuggest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.User\",\"name\":\"userProposer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"edemSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct MarketTypes.MarketPlace\",\"name\":\"marketSeller\",\"type\":\"tuple\"}],\"name\":\"possiblePurchase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/interfaces/IProtocolAndExecution.sol\":\"IProtocolAndExecution\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/interfaces/IProtocolAndExecution.sol\":{\"keccak256\":\"0x440a9935ec96d61035fcb351943e80cf974f9385ddb6dc3ecaecc8445cfa5689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9152a5069e8900c8f770f47314061c01b80557ac00bc265c7fd8cdd28da5e4c9\",\"dweb:/ipfs/QmNgS11CdmbZQT2WBs2DyHTBRoGcs2irt9xn8juya3nmq1\"]},\"hardhat/contracts/libraries/MarketTypes.sol\":{\"keccak256\":\"0x13212afd96004a6866cd1801072e693f8ece47386563f69938e377eaca4c063d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ce500c28b379345cd24efc0099dda76ae92510c2996ec3f8f934df9d954ee9b\",\"dweb:/ipfs/QmQyzpSJuytcnSiKoezaiZ5CXQv5nAfNqCcjP6Wtep5v7W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/libraries/MarketTypes.sol": {
				"MarketTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "MarketTypes",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/libraries/MarketTypes.sol\":180:2787  library MarketTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/libraries/MarketTypes.sol\":180:2787  library MarketTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db9a39dbc8949827bf8fa1391cdfc2ac7581e11284bd0de097d9df6c5cba9f7364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db9a39dbc8949827bf8fa1391cdfc2ac7581e11284bd0de097d9df6c5cba9f7364736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP11 CODECOPY 0xDB 0xC8 SWAP5 SWAP9 0x27 0xBF DUP16 LOG1 CODECOPY SHR 0xDF 0xC2 0xAC PUSH22 0x81E11284BD0DE097D9DF6C5CBA9F7364736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "180:2607:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db9a39dbc8949827bf8fa1391cdfc2ac7581e11284bd0de097d9df6c5cba9f7364736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP11 CODECOPY 0xDB 0xC8 SWAP5 SWAP9 0x27 0xBF DUP16 LOG1 CODECOPY SHR 0xDF 0xC2 0xAC PUSH22 0x81E11284BD0DE097D9DF6C5CBA9F7364736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "180:2607:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"hash(struct MarketTypes.MarketPlace memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2787,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db9a39dbc8949827bf8fa1391cdfc2ac7581e11284bd0de097d9df6c5cba9f7364736f6c63430008130033",
									".code": [
										{
											"begin": 180,
											"end": 2787,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 2787,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"hardhat/contracts/interfaces/IProtocolAndExecution.sol",
								"hardhat/contracts/libraries/MarketTypes.sol",
								"hardhat/contracts/protocols/ProtocolAndExecution.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MarketTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library containes Market types for the Edem Market.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/libraries/MarketTypes.sol\":\"MarketTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/contracts/libraries/MarketTypes.sol\":{\"keccak256\":\"0x13212afd96004a6866cd1801072e693f8ece47386563f69938e377eaca4c063d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ce500c28b379345cd24efc0099dda76ae92510c2996ec3f8f934df9d954ee9b\",\"dweb:/ipfs/QmQyzpSJuytcnSiKoezaiZ5CXQv5nAfNqCcjP6Wtep5v7W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library containes Market types for the Edem Market.",
						"version": 1
					}
				}
			},
			"hardhat/contracts/protocols/ProtocolAndExecution.sol": {
				"ProtocolAndExecution": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"name": "NewProtocolFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "takerAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketTypes.User",
									"name": "userSeller",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "edemSigner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "nftAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tradeTokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct MarketTypes.MarketPlace",
									"name": "marketProposer",
									"type": "tuple"
								}
							],
							"name": "possibleAcceptSuggest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "takerAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketTypes.User",
									"name": "userProposer",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isDealer",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "edemSigner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "nftAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tradeTokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct MarketTypes.MarketPlace",
									"name": "marketSeller",
									"type": "tuple"
								}
							],
							"name": "possiblePurchase",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newProtocolFee",
									"type": "uint256"
								}
							],
							"name": "setProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":300:2239  contract ProtocolAndExecution is Ownable, IProtocolAndExecution {... */\n  mstore(0x40, 0x80)\n    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":579:581  10 */\n  0x0a\n    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":547:581  uint256 internal _protocolFee = 10 */\n  0x01\n  sstore\n    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":300:2239  contract ProtocolAndExecution is Ownable, IProtocolAndExecution {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":300:2239  contract ProtocolAndExecution is Ownable, IProtocolAndExecution {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":300:2239  contract ProtocolAndExecution is Ownable, IProtocolAndExecution {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":300:2239  contract ProtocolAndExecution is Ownable, IProtocolAndExecution {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9dd1cda6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfceb5d6c\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x27891057\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x787dce3d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":658:1210  function possibleAcceptSuggest(... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1927:2085  function setProtocolFee(uint256 newProtocolFee) external onlyOwner {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2133:2237  function viewProtocolFee() external view override returns (uint256) {... */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1286:1879  function possiblePurchase(... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":658:1210  function possibleAcceptSuggest(... */\n    tag_14:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":830:834  bool */\n      0x00\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":836:843  uint256 */\n      dup1\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":845:852  uint256 */\n      0x00\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":911:921  userSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":911:927  userSeller.price */\n      0x40\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":887:901  marketProposer */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":887:907  marketProposer.price */\n      0xa0\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":887:927  marketProposer.price == userSeller.price */\n      eq\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:994  (marketProposer.price == userSeller.price) &&... */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":975:985  userSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":975:993  userSeller.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":949:963  marketProposer */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":949:971  marketProposer.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":949:993  marketProposer.tokenId == userSeller.tokenId */\n      eq\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:994  (marketProposer.price == userSeller.price) &&... */\n    tag_40:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:1057  (marketProposer.price == userSeller.price) &&... */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1041:1056  block.timestamp */\n      timestamp\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1015:1029  marketProposer */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1015:1037  marketProposer.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1015:1056  marketProposer.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:1057  (marketProposer.price == userSeller.price) &&... */\n    tag_41:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:1122  (marketProposer.price == userSeller.price) &&... */\n      dup1\n      iszero\n      tag_42\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1106:1121  block.timestamp */\n      timestamp\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1078:1092  marketProposer */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1078:1102  marketProposer.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1078:1121  marketProposer.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":886:1122  (marketProposer.price == userSeller.price) &&... */\n    tag_42:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1137:1147  userSeller */\n      dup6\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1137:1155  userSeller.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1169:1183  marketProposer */\n      dup6\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1169:1193  marketProposer.nftAmount */\n      0x80\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":864:1203  return (... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":658:1210  function possibleAcceptSuggest(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1927:2085  function setProtocolFee(uint256 newProtocolFee) external onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2019:2033  newProtocolFee */\n      dup1\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2004:2016  _protocolFee */\n      0x01\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2004:2033  _protocolFee = newProtocolFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2048:2078  NewProtocolFee(newProtocolFee) */\n      0x3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a6\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2063:2077  newProtocolFee */\n      dup2\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2048:2078  NewProtocolFee(newProtocolFee) */\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1927:2085  function setProtocolFee(uint256 newProtocolFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2133:2237  function viewProtocolFee() external view override returns (uint256) {... */\n    tag_28:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2192:2199  uint256 */\n      0x00\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2218:2230  _protocolFee */\n      sload(0x01)\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2211:2230  return _protocolFee */\n      swap1\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":2133:2237  function viewProtocolFee() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1286:1879  function possiblePurchase(... */\n    tag_37:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1453:1457  bool */\n      0x00\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1459:1466  uint256 */\n      dup1\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1468:1475  uint256 */\n      0x00\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1549:1561  userProposer */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1549:1567  userProposer.price */\n      0x40\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1527:1539  marketSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1527:1545  marketSeller.price */\n      0xa0\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1527:1567  marketSeller.price == userProposer.price */\n      eq\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1638  (marketSeller.price == userProposer.price) &&... */\n      dup1\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1617:1629  marketSeller */\n      dup4\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1617:1637  marketSeller.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1593:1605  marketSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1593:1613  marketSeller.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1593:1637  marketSeller.tokenId == marketSeller.tokenId */\n      eq\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1638  (marketSeller.price == userProposer.price) &&... */\n    tag_63:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1705  (marketSeller.price == userProposer.price) &&... */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1689:1704  block.timestamp */\n      timestamp\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1663:1675  marketSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1663:1685  marketSeller.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1663:1704  marketSeller.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1705  (marketSeller.price == userProposer.price) &&... */\n    tag_64:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1770  (marketSeller.price == userProposer.price) &&... */\n      dup1\n      iszero\n      tag_65\n      jumpi\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1754:1769  block.timestamp */\n      timestamp\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1730:1742  marketSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1730:1750  marketSeller.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1730:1769  marketSeller.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1526:1770  (marketSeller.price == userProposer.price) &&... */\n    tag_65:\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1788:1800  marketSeller */\n      dup5\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1788:1808  marketSeller.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1826:1838  marketSeller */\n      dup6\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1826:1848  marketSeller.nftAmount */\n      0x80\n      add\n      calldataload\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1487:1872  return (... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"hardhat/contracts/protocols/ProtocolAndExecution.sol\":1286:1879  function possiblePurchase(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_76:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_78:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":488:716   */\n    tag_79:\n        /* \"#utility.yul\":557:562   */\n      0x00\n        /* \"#utility.yul\":598:601   */\n      0x80\n        /* \"#utility.yul\":589:595   */\n      dup3\n        /* \"#utility.yul\":584:587   */\n      dup5\n        /* \"#utility.yul\":580:596   */\n      sub\n        /* \"#utility.yul\":576:602   */\n      slt\n        /* \"#utility.yul\":573:686   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":605:684   */\n      tag_104\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":573:686   */\n    tag_103:\n        /* \"#utility.yul\":704:710   */\n      dup2\n        /* \"#utility.yul\":695:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":488:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":760:995   */\n    tag_80:\n        /* \"#utility.yul\":836:841   */\n      0x00\n        /* \"#utility.yul\":877:880   */\n      0x01c0\n        /* \"#utility.yul\":868:874   */\n      dup3\n        /* \"#utility.yul\":863:866   */\n      dup5\n        /* \"#utility.yul\":859:875   */\n      sub\n        /* \"#utility.yul\":855:881   */\n      slt\n        /* \"#utility.yul\":852:965   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":884:963   */\n      tag_107\n      tag_78\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":852:965   */\n    tag_106:\n        /* \"#utility.yul\":983:989   */\n      dup2\n        /* \"#utility.yul\":974:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":760:995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1583   */\n    tag_13:\n        /* \"#utility.yul\":1122:1128   */\n      0x00\n        /* \"#utility.yul\":1130:1136   */\n      dup1\n        /* \"#utility.yul\":1179:1182   */\n      0x0240\n        /* \"#utility.yul\":1167:1176   */\n      dup4\n        /* \"#utility.yul\":1158:1165   */\n      dup6\n        /* \"#utility.yul\":1154:1177   */\n      sub\n        /* \"#utility.yul\":1150:1183   */\n      slt\n        /* \"#utility.yul\":1147:1267   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1186:1265   */\n      tag_110\n      tag_76\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1147:1267   */\n    tag_109:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1331:1407   */\n      tag_111\n        /* \"#utility.yul\":1399:1406   */\n      dup6\n        /* \"#utility.yul\":1390:1396   */\n      dup3\n        /* \"#utility.yul\":1379:1388   */\n      dup7\n        /* \"#utility.yul\":1375:1397   */\n      add\n        /* \"#utility.yul\":1331:1407   */\n      tag_79\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1321:1407   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1417   */\n      pop\n        /* \"#utility.yul\":1456:1459   */\n      0x80\n        /* \"#utility.yul\":1483:1566   */\n      tag_112\n        /* \"#utility.yul\":1558:1565   */\n      dup6\n        /* \"#utility.yul\":1549:1555   */\n      dup3\n        /* \"#utility.yul\":1538:1547   */\n      dup7\n        /* \"#utility.yul\":1534:1556   */\n      add\n        /* \"#utility.yul\":1483:1566   */\n      tag_80\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1473:1566   */\n      swap2\n      pop\n        /* \"#utility.yul\":1427:1576   */\n      pop\n        /* \"#utility.yul\":1001:1583   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1589:1679   */\n    tag_81:\n        /* \"#utility.yul\":1623:1630   */\n      0x00\n        /* \"#utility.yul\":1666:1671   */\n      dup2\n        /* \"#utility.yul\":1659:1672   */\n      iszero\n        /* \"#utility.yul\":1652:1673   */\n      iszero\n        /* \"#utility.yul\":1641:1673   */\n      swap1\n      pop\n        /* \"#utility.yul\":1589:1679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1685:1794   */\n    tag_82:\n        /* \"#utility.yul\":1766:1787   */\n      tag_115\n        /* \"#utility.yul\":1781:1786   */\n      dup2\n        /* \"#utility.yul\":1766:1787   */\n      tag_81\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1761:1764   */\n      dup3\n        /* \"#utility.yul\":1754:1788   */\n      mstore\n        /* \"#utility.yul\":1685:1794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1800:1877   */\n    tag_83:\n        /* \"#utility.yul\":1837:1844   */\n      0x00\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1855:1871   */\n      swap1\n      pop\n        /* \"#utility.yul\":1800:1877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1883:2001   */\n    tag_84:\n        /* \"#utility.yul\":1970:1994   */\n      tag_118\n        /* \"#utility.yul\":1988:1993   */\n      dup2\n        /* \"#utility.yul\":1970:1994   */\n      tag_83\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1965:1968   */\n      dup3\n        /* \"#utility.yul\":1958:1995   */\n      mstore\n        /* \"#utility.yul\":1883:2001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2007:2437   */\n    tag_16:\n        /* \"#utility.yul\":2150:2154   */\n      0x00\n        /* \"#utility.yul\":2188:2190   */\n      0x60\n        /* \"#utility.yul\":2177:2186   */\n      dup3\n        /* \"#utility.yul\":2173:2191   */\n      add\n        /* \"#utility.yul\":2165:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2201:2266   */\n      tag_120\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2252:2261   */\n      dup4\n        /* \"#utility.yul\":2248:2265   */\n      add\n        /* \"#utility.yul\":2239:2245   */\n      dup7\n        /* \"#utility.yul\":2201:2266   */\n      tag_82\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2276:2348   */\n      tag_121\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2333:2342   */\n      dup4\n        /* \"#utility.yul\":2329:2347   */\n      add\n        /* \"#utility.yul\":2320:2326   */\n      dup6\n        /* \"#utility.yul\":2276:2348   */\n      tag_84\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2358:2430   */\n      tag_122\n        /* \"#utility.yul\":2426:2428   */\n      0x40\n        /* \"#utility.yul\":2415:2424   */\n      dup4\n        /* \"#utility.yul\":2411:2429   */\n      add\n        /* \"#utility.yul\":2402:2408   */\n      dup5\n        /* \"#utility.yul\":2358:2430   */\n      tag_84\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2007:2437   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_85:\n        /* \"#utility.yul\":2516:2540   */\n      tag_124\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_83\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_125:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_86:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_127\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_85\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3045   */\n    tag_21:\n        /* \"#utility.yul\":2775:2781   */\n      0x00\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2812:2821   */\n      dup3\n        /* \"#utility.yul\":2803:2810   */\n      dup5\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2911   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_130\n      tag_76\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2792:2911   */\n    tag_129:\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2975:3028   */\n      tag_131\n        /* \"#utility.yul\":3020:3027   */\n      dup5\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup6\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_86\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2921:3038   */\n      pop\n        /* \"#utility.yul\":2716:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3177   */\n    tag_87:\n        /* \"#utility.yul\":3088:3095   */\n      0x00\n        /* \"#utility.yul\":3128:3170   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3121:3126   */\n      dup3\n        /* \"#utility.yul\":3117:3171   */\n      and\n        /* \"#utility.yul\":3106:3171   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3279   */\n    tag_88:\n        /* \"#utility.yul\":3220:3227   */\n      0x00\n        /* \"#utility.yul\":3249:3273   */\n      tag_134\n        /* \"#utility.yul\":3267:3272   */\n      dup3\n        /* \"#utility.yul\":3249:3273   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3238:3273   */\n      swap1\n      pop\n        /* \"#utility.yul\":3183:3279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3285:3403   */\n    tag_89:\n        /* \"#utility.yul\":3372:3396   */\n      tag_136\n        /* \"#utility.yul\":3390:3395   */\n      dup2\n        /* \"#utility.yul\":3372:3396   */\n      tag_88\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3367:3370   */\n      dup3\n        /* \"#utility.yul\":3360:3397   */\n      mstore\n        /* \"#utility.yul\":3285:3403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3631   */\n    tag_26:\n        /* \"#utility.yul\":3502:3506   */\n      0x00\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3529:3538   */\n      dup3\n        /* \"#utility.yul\":3525:3543   */\n      add\n        /* \"#utility.yul\":3517:3543   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3624   */\n      tag_138\n        /* \"#utility.yul\":3621:3622   */\n      0x00\n        /* \"#utility.yul\":3610:3619   */\n      dup4\n        /* \"#utility.yul\":3606:3623   */\n      add\n        /* \"#utility.yul\":3597:3603   */\n      dup5\n        /* \"#utility.yul\":3553:3624   */\n      tag_89\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3409:3631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3859   */\n    tag_30:\n        /* \"#utility.yul\":3730:3734   */\n      0x00\n        /* \"#utility.yul\":3768:3770   */\n      0x20\n        /* \"#utility.yul\":3757:3766   */\n      dup3\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3745:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3781:3852   */\n      tag_140\n        /* \"#utility.yul\":3849:3850   */\n      0x00\n        /* \"#utility.yul\":3838:3847   */\n      dup4\n        /* \"#utility.yul\":3834:3851   */\n      add\n        /* \"#utility.yul\":3825:3831   */\n      dup5\n        /* \"#utility.yul\":3781:3852   */\n      tag_84\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3637:3859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:3987   */\n    tag_90:\n        /* \"#utility.yul\":3938:3962   */\n      tag_142\n        /* \"#utility.yul\":3956:3961   */\n      dup2\n        /* \"#utility.yul\":3938:3962   */\n      tag_88\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3931:3936   */\n      dup2\n        /* \"#utility.yul\":3928:3963   */\n      eq\n        /* \"#utility.yul\":3918:3981   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":3977:3978   */\n      0x00\n        /* \"#utility.yul\":3974:3975   */\n      dup1\n        /* \"#utility.yul\":3967:3979   */\n      revert\n        /* \"#utility.yul\":3918:3981   */\n    tag_143:\n        /* \"#utility.yul\":3865:3987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3993:4132   */\n    tag_91:\n        /* \"#utility.yul\":4039:4044   */\n      0x00\n        /* \"#utility.yul\":4077:4083   */\n      dup2\n        /* \"#utility.yul\":4064:4084   */\n      calldataload\n        /* \"#utility.yul\":4055:4084   */\n      swap1\n      pop\n        /* \"#utility.yul\":4093:4126   */\n      tag_145\n        /* \"#utility.yul\":4120:4125   */\n      dup2\n        /* \"#utility.yul\":4093:4126   */\n      tag_90\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3993:4132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4138:4467   */\n    tag_33:\n        /* \"#utility.yul\":4197:4203   */\n      0x00\n        /* \"#utility.yul\":4246:4248   */\n      0x20\n        /* \"#utility.yul\":4234:4243   */\n      dup3\n        /* \"#utility.yul\":4225:4232   */\n      dup5\n        /* \"#utility.yul\":4221:4244   */\n      sub\n        /* \"#utility.yul\":4217:4249   */\n      slt\n        /* \"#utility.yul\":4214:4333   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":4252:4331   */\n      tag_148\n      tag_76\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4214:4333   */\n    tag_147:\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4397:4450   */\n      tag_149\n        /* \"#utility.yul\":4442:4449   */\n      dup5\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4422:4431   */\n      dup6\n        /* \"#utility.yul\":4418:4440   */\n      add\n        /* \"#utility.yul\":4397:4450   */\n      tag_91\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4387:4450   */\n      swap2\n      pop\n        /* \"#utility.yul\":4343:4460   */\n      pop\n        /* \"#utility.yul\":4138:4467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4473:4642   */\n    tag_92:\n        /* \"#utility.yul\":4557:4568   */\n      0x00\n        /* \"#utility.yul\":4591:4597   */\n      dup3\n        /* \"#utility.yul\":4586:4589   */\n      dup3\n        /* \"#utility.yul\":4579:4598   */\n      mstore\n        /* \"#utility.yul\":4631:4635   */\n      0x20\n        /* \"#utility.yul\":4626:4629   */\n      dup3\n        /* \"#utility.yul\":4622:4636   */\n      add\n        /* \"#utility.yul\":4607:4636   */\n      swap1\n      pop\n        /* \"#utility.yul\":4473:4642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4648:4873   */\n    tag_93:\n        /* \"#utility.yul\":4788:4822   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4784:4785   */\n      0x00\n        /* \"#utility.yul\":4776:4782   */\n      dup3\n        /* \"#utility.yul\":4772:4786   */\n      add\n        /* \"#utility.yul\":4765:4823   */\n      mstore\n        /* \"#utility.yul\":4857:4865   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4852:4854   */\n      0x20\n        /* \"#utility.yul\":4844:4850   */\n      dup3\n        /* \"#utility.yul\":4840:4855   */\n      add\n        /* \"#utility.yul\":4833:4866   */\n      mstore\n        /* \"#utility.yul\":4648:4873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4879:5245   */\n    tag_94:\n        /* \"#utility.yul\":5021:5024   */\n      0x00\n        /* \"#utility.yul\":5042:5109   */\n      tag_153\n        /* \"#utility.yul\":5106:5108   */\n      0x26\n        /* \"#utility.yul\":5101:5104   */\n      dup4\n        /* \"#utility.yul\":5042:5109   */\n      tag_92\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5035:5109   */\n      swap2\n      pop\n        /* \"#utility.yul\":5118:5211   */\n      tag_154\n        /* \"#utility.yul\":5207:5210   */\n      dup3\n        /* \"#utility.yul\":5118:5211   */\n      tag_93\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5236:5238   */\n      0x40\n        /* \"#utility.yul\":5231:5234   */\n      dup3\n        /* \"#utility.yul\":5227:5239   */\n      add\n        /* \"#utility.yul\":5220:5239   */\n      swap1\n      pop\n        /* \"#utility.yul\":4879:5245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5251:5670   */\n    tag_60:\n        /* \"#utility.yul\":5417:5421   */\n      0x00\n        /* \"#utility.yul\":5455:5457   */\n      0x20\n        /* \"#utility.yul\":5444:5453   */\n      dup3\n        /* \"#utility.yul\":5440:5458   */\n      add\n        /* \"#utility.yul\":5432:5458   */\n      swap1\n      pop\n        /* \"#utility.yul\":5504:5513   */\n      dup2\n        /* \"#utility.yul\":5498:5502   */\n      dup2\n        /* \"#utility.yul\":5494:5514   */\n      sub\n        /* \"#utility.yul\":5490:5491   */\n      0x00\n        /* \"#utility.yul\":5479:5488   */\n      dup4\n        /* \"#utility.yul\":5475:5492   */\n      add\n        /* \"#utility.yul\":5468:5515   */\n      mstore\n        /* \"#utility.yul\":5532:5663   */\n      tag_156\n        /* \"#utility.yul\":5658:5662   */\n      dup2\n        /* \"#utility.yul\":5532:5663   */\n      tag_94\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5524:5663   */\n      swap1\n      pop\n        /* \"#utility.yul\":5251:5670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5676:5858   */\n    tag_95:\n        /* \"#utility.yul\":5816:5850   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5812:5813   */\n      0x00\n        /* \"#utility.yul\":5804:5810   */\n      dup3\n        /* \"#utility.yul\":5800:5814   */\n      add\n        /* \"#utility.yul\":5793:5851   */\n      mstore\n        /* \"#utility.yul\":5676:5858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:6230   */\n    tag_96:\n        /* \"#utility.yul\":6006:6009   */\n      0x00\n        /* \"#utility.yul\":6027:6094   */\n      tag_159\n        /* \"#utility.yul\":6091:6093   */\n      0x20\n        /* \"#utility.yul\":6086:6089   */\n      dup4\n        /* \"#utility.yul\":6027:6094   */\n      tag_92\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6020:6094   */\n      swap2\n      pop\n        /* \"#utility.yul\":6103:6196   */\n      tag_160\n        /* \"#utility.yul\":6192:6195   */\n      dup3\n        /* \"#utility.yul\":6103:6196   */\n      tag_95\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6221:6223   */\n      0x20\n        /* \"#utility.yul\":6216:6219   */\n      dup3\n        /* \"#utility.yul\":6212:6224   */\n      add\n        /* \"#utility.yul\":6205:6224   */\n      swap1\n      pop\n        /* \"#utility.yul\":5864:6230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6655   */\n    tag_72:\n        /* \"#utility.yul\":6402:6406   */\n      0x00\n        /* \"#utility.yul\":6440:6442   */\n      0x20\n        /* \"#utility.yul\":6429:6438   */\n      dup3\n        /* \"#utility.yul\":6425:6443   */\n      add\n        /* \"#utility.yul\":6417:6443   */\n      swap1\n      pop\n        /* \"#utility.yul\":6489:6498   */\n      dup2\n        /* \"#utility.yul\":6483:6487   */\n      dup2\n        /* \"#utility.yul\":6479:6499   */\n      sub\n        /* \"#utility.yul\":6475:6476   */\n      0x00\n        /* \"#utility.yul\":6464:6473   */\n      dup4\n        /* \"#utility.yul\":6460:6477   */\n      add\n        /* \"#utility.yul\":6453:6500   */\n      mstore\n        /* \"#utility.yul\":6517:6648   */\n      tag_162\n        /* \"#utility.yul\":6643:6647   */\n      dup2\n        /* \"#utility.yul\":6517:6648   */\n      tag_96\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6509:6648   */\n      swap1\n      pop\n        /* \"#utility.yul\":6236:6655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d4457924015178bccbda9f58a2f70efbb3945f4fb16d3c97c1e92d6e496051ea64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 55,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 63,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a60015534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107dc806101126000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100da5780639dd1cda6146100f8578063f2fde38b14610116578063fceb5d6c146101325761007d565b80632789105714610082578063715018a6146100b4578063787dce3d146100be575b600080fd5b61009c600480360381019061009791906104c2565b610164565b6040516100ab93929190610537565b60405180910390f35b6100bc6101c0565b005b6100d860048036038101906100d3919061059a565b6101d4565b005b6100e261021d565b6040516100ef9190610608565b60405180910390f35b610100610246565b60405161010d9190610623565b60405180910390f35b610130600480360381019061012b919061066a565b610250565b005b61014c600480360381019061014791906104c2565b6102d3565b60405161015b93929190610537565b60405180910390f35b600080600084604001358460a00135148015610187575084606001358460600135145b801561019857504284610140013510155b80156101a957504284610120013511155b856060013585608001359250925092509250925092565b6101c861032f565b6101d260006103ad565b565b6101dc61032f565b806001819055507f3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a6816040516102129190610623565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b61025861032f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061071a565b60405180910390fd5b6102d0816103ad565b50565b600080600084604001358460a001351480156102f6575083606001358460600135145b801561030757504284610120013511155b801561031857504284610140013510155b846060013585608001359250925092509250925092565b610337610471565b73ffffffffffffffffffffffffffffffffffffffff1661035561021d565b73ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a290610786565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000608082840312156104995761049861047e565b5b81905092915050565b60006101c082840312156104b9576104b861047e565b5b81905092915050565b60008061024083850312156104da576104d9610479565b5b60006104e885828601610483565b92505060806104f9858286016104a2565b9150509250929050565b60008115159050919050565b61051881610503565b82525050565b6000819050919050565b6105318161051e565b82525050565b600060608201905061054c600083018661050f565b6105596020830185610528565b6105666040830184610528565b949350505050565b6105778161051e565b811461058257600080fd5b50565b6000813590506105948161056e565b92915050565b6000602082840312156105b0576105af610479565b5b60006105be84828501610585565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f2826105c7565b9050919050565b610602816105e7565b82525050565b600060208201905061061d60008301846105f9565b92915050565b60006020820190506106386000830184610528565b92915050565b610647816105e7565b811461065257600080fd5b50565b6000813590506106648161063e565b92915050565b6000602082840312156106805761067f610479565b5b600061068e84828501610655565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610704602683610697565b915061070f826106a8565b604082019050919050565b60006020820190508181036000830152610733816106f7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610770602083610697565b915061077b8261073a565b602082019050919050565b6000602082019050818103600083015261079f81610763565b905091905056fea2646970667358221220d4457924015178bccbda9f58a2f70efbb3945f4fb16d3c97c1e92d6e496051ea64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32 PUSH2 0x27 PUSH2 0x37 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7DC DUP1 PUSH2 0x112 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xFCEB5D6C EQ PUSH2 0x132 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x27891057 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x787DCE3D EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x187 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x198 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A9 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x1D2 PUSH1 0x0 PUSH2 0x3AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x32F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x3E1C6F794380F768303EE10ADB978482D0EE037B0517BDABF3118141632078A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x3AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x2F6 JUMPI POP DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x307 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x318 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x337 PUSH2 0x471 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x355 PUSH2 0x21D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x499 JUMPI PUSH2 0x498 PUSH2 0x47E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B9 JUMPI PUSH2 0x4B8 PUSH2 0x47E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP6 DUP3 DUP7 ADD PUSH2 0x483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4F9 DUP6 DUP3 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x531 DUP2 PUSH2 0x51E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x54C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x559 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x528 JUMP JUMPDEST PUSH2 0x566 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x51E JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x594 DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x5AF PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BE DUP5 DUP3 DUP6 ADD PUSH2 0x585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x638 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x647 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x664 DUP2 PUSH2 0x63E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68E DUP5 DUP3 DUP6 ADD PUSH2 0x655 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 PUSH1 0x26 DUP4 PUSH2 0x697 JUMP JUMPDEST SWAP2 POP PUSH2 0x70F DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x733 DUP2 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 PUSH1 0x20 DUP4 PUSH2 0x697 JUMP JUMPDEST SWAP2 POP PUSH2 0x77B DUP3 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x79F DUP2 PUSH2 0x763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 GASLIMIT PUSH26 0x24015178BCCBDA9F58A2F70EFBB3945F4FB16D3C97C1E92D6E49 PUSH1 0x51 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "300:1939:4:-:0;;;579:2;547:34;;300:1939;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;300:1939:4;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;300:1939:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 815,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 1137,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 941,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 541,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@possibleAcceptSuggest_327": {
									"entryPoint": 356,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@possiblePurchase_378": {
									"entryPoint": 723,
									"id": 378,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@renounceOwnership_68": {
									"entryPoint": 448,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setProtocolFee_394": {
									"entryPoint": 468,
									"id": 394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 592,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@viewProtocolFee_403": {
									"entryPoint": 582,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_MarketPlace_$209_calldata_ptr": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_User_$218_calldata_ptr": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_User_$218_calldata_ptrt_struct$_MarketPlace_$209_calldata_ptr": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6658:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:153:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "605:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "584:3:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "598:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "576:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:26:5"
															},
															"nodeType": "YulIf",
															"src": "573:113:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "695:15:5",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "704:6:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "695:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_User_$218_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "541:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "549:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "557:5:5",
														"type": ""
													}
												],
												"src": "488:228:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "842:153:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "882:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "884:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "884:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "884:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "859:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "877:3:5",
																		"type": "",
																		"value": "448"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:26:5"
															},
															"nodeType": "YulIf",
															"src": "852:113:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "974:15:5",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "983:6:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "974:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_MarketPlace_$209_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "820:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "828:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "836:5:5",
														"type": ""
													}
												],
												"src": "760:235:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1137:446:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1158:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:3:5",
																		"type": "",
																		"value": "576"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1150:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1150:33:5"
															},
															"nodeType": "YulIf",
															"src": "1147:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:140:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1321:86:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1379:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1390:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1375:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1375:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1399:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_User_$218_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1331:43:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:76:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1427:149:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1442:17:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1446:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1473:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1538:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1549:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1534:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1534:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1558:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_MarketPlace_$209_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1483:50:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1483:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1473:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_User_$218_calldata_ptrt_struct$_MarketPlace_$209_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1099:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1110:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1122:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1130:6:5",
														"type": ""
													}
												],
												"src": "1001:582:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1631:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1641:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1666:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1659:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1659:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1641:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1613:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1623:7:5",
														"type": ""
													}
												],
												"src": "1589:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1761:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1781:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1766:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1766:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1732:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1739:3:5",
														"type": ""
													}
												],
												"src": "1685:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1845:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1855:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1866:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1855:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1827:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1837:7:5",
														"type": ""
													}
												],
												"src": "1800:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1965:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1988:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1970:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1958:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1936:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1943:3:5",
														"type": ""
													}
												],
												"src": "1883:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:282:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2165:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2177:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2188:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2173:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2165:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2239:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2252:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2263:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2201:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:65:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2333:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2344:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2329:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2276:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2358:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2111:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2123:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2131:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2139:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2150:4:5",
														"type": ""
													}
												],
												"src": "2007:430:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2543:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:43:5"
															},
															"nodeType": "YulIf",
															"src": "2496:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2479:5:5",
														"type": ""
													}
												],
												"src": "2443:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2623:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2633:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2601:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2609:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2617:5:5",
														"type": ""
													}
												],
												"src": "2571:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2782:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2828:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:32:5"
															},
															"nodeType": "YulIf",
															"src": "2792:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2921:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2936:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2940:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2965:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2752:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2763:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2775:6:5",
														"type": ""
													}
												],
												"src": "2716:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3096:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3106:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3121:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3106:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3078:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3088:7:5",
														"type": ""
													}
												],
												"src": "3051:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3238:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3267:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3249:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3238:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3220:7:5",
														"type": ""
													}
												],
												"src": "3183:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3367:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3390:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3372:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3360:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3338:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3345:3:5",
														"type": ""
													}
												],
												"src": "3285:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3507:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3517:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3529:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3517:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3610:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3621:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3606:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3553:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3553:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3479:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3491:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3502:4:5",
														"type": ""
													}
												],
												"src": "3409:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3735:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3745:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3757:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3768:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3745:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3825:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3838:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3849:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3834:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3781:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3707:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3719:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3730:4:5",
														"type": ""
													}
												],
												"src": "3637:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3908:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3965:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3977:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3967:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3967:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3931:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3956:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3938:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3938:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3928:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3928:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:43:5"
															},
															"nodeType": "YulIf",
															"src": "3918:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3901:5:5",
														"type": ""
													}
												],
												"src": "3865:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4045:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4055:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4077:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4064:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4055:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4120:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4093:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4023:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4031:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4039:5:5",
														"type": ""
													}
												],
												"src": "3993:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4250:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4252:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4252:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:32:5"
															},
															"nodeType": "YulIf",
															"src": "4214:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4343:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4358:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4372:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4362:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4387:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4422:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4433:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4418:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4418:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4442:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4397:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4387:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4174:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4185:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4197:6:5",
														"type": ""
													}
												],
												"src": "4138:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4569:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4586:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4579:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4626:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4607:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4541:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4546:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4557:11:5",
														"type": ""
													}
												],
												"src": "4473:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4754:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4784:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4788:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4765:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4844:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4852:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4857:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4833:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4746:6:5",
														"type": ""
													}
												],
												"src": "4648:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5025:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5035:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5101:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5042:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5035:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5207:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5118:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5220:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5231:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5236:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5227:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5220:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5013:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5021:3:5",
														"type": ""
													}
												],
												"src": "4879:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5422:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5432:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5444:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5455:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5432:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5479:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5490:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5475:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5498:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5524:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5658:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5532:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5524:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5402:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5417:4:5",
														"type": ""
													}
												],
												"src": "5251:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5782:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5804:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5812:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5816:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5793:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5774:6:5",
														"type": ""
													}
												],
												"src": "5676:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6020:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6086:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6027:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6103:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6205:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6216:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6205:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5998:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6006:3:5",
														"type": ""
													}
												],
												"src": "5864:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6407:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6417:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6429:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6425:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6417:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6464:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6475:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6483:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6489:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6479:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6453:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6509:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6643:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6517:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6509:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6387:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6402:4:5",
														"type": ""
													}
												],
												"src": "6236:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct MarketTypes.User\n    function abi_decode_t_struct$_User_$218_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 128) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    // struct MarketTypes.MarketPlace\n    function abi_decode_t_struct$_MarketPlace_$209_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 448) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_User_$218_calldata_ptrt_struct$_MarketPlace_$209_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 576) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_User_$218_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value1 := abi_decode_t_struct$_MarketPlace_$209_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100da5780639dd1cda6146100f8578063f2fde38b14610116578063fceb5d6c146101325761007d565b80632789105714610082578063715018a6146100b4578063787dce3d146100be575b600080fd5b61009c600480360381019061009791906104c2565b610164565b6040516100ab93929190610537565b60405180910390f35b6100bc6101c0565b005b6100d860048036038101906100d3919061059a565b6101d4565b005b6100e261021d565b6040516100ef9190610608565b60405180910390f35b610100610246565b60405161010d9190610623565b60405180910390f35b610130600480360381019061012b919061066a565b610250565b005b61014c600480360381019061014791906104c2565b6102d3565b60405161015b93929190610537565b60405180910390f35b600080600084604001358460a00135148015610187575084606001358460600135145b801561019857504284610140013510155b80156101a957504284610120013511155b856060013585608001359250925092509250925092565b6101c861032f565b6101d260006103ad565b565b6101dc61032f565b806001819055507f3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a6816040516102129190610623565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b61025861032f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061071a565b60405180910390fd5b6102d0816103ad565b50565b600080600084604001358460a001351480156102f6575083606001358460600135145b801561030757504284610120013511155b801561031857504284610140013510155b846060013585608001359250925092509250925092565b610337610471565b73ffffffffffffffffffffffffffffffffffffffff1661035561021d565b73ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a290610786565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000608082840312156104995761049861047e565b5b81905092915050565b60006101c082840312156104b9576104b861047e565b5b81905092915050565b60008061024083850312156104da576104d9610479565b5b60006104e885828601610483565b92505060806104f9858286016104a2565b9150509250929050565b60008115159050919050565b61051881610503565b82525050565b6000819050919050565b6105318161051e565b82525050565b600060608201905061054c600083018661050f565b6105596020830185610528565b6105666040830184610528565b949350505050565b6105778161051e565b811461058257600080fd5b50565b6000813590506105948161056e565b92915050565b6000602082840312156105b0576105af610479565b5b60006105be84828501610585565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f2826105c7565b9050919050565b610602816105e7565b82525050565b600060208201905061061d60008301846105f9565b92915050565b60006020820190506106386000830184610528565b92915050565b610647816105e7565b811461065257600080fd5b50565b6000813590506106648161063e565b92915050565b6000602082840312156106805761067f610479565b5b600061068e84828501610655565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610704602683610697565b915061070f826106a8565b604082019050919050565b60006020820190508181036000830152610733816106f7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610770602083610697565b915061077b8261073a565b602082019050919050565b6000602082019050818103600083015261079f81610763565b905091905056fea2646970667358221220d4457924015178bccbda9f58a2f70efbb3945f4fb16d3c97c1e92d6e496051ea64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xFCEB5D6C EQ PUSH2 0x132 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x27891057 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x787DCE3D EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x187 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x198 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A9 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x1D2 PUSH1 0x0 PUSH2 0x3AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x32F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x3E1C6F794380F768303EE10ADB978482D0EE037B0517BDABF3118141632078A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x3AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x2F6 JUMPI POP DUP4 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x307 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x318 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x337 PUSH2 0x471 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x355 PUSH2 0x21D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x499 JUMPI PUSH2 0x498 PUSH2 0x47E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B9 JUMPI PUSH2 0x4B8 PUSH2 0x47E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP6 DUP3 DUP7 ADD PUSH2 0x483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4F9 DUP6 DUP3 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x531 DUP2 PUSH2 0x51E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x54C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x559 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x528 JUMP JUMPDEST PUSH2 0x566 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x51E JUMP JUMPDEST DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x594 DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x5AF PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BE DUP5 DUP3 DUP6 ADD PUSH2 0x585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x638 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x647 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x664 DUP2 PUSH2 0x63E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68E DUP5 DUP3 DUP6 ADD PUSH2 0x655 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 PUSH1 0x26 DUP4 PUSH2 0x697 JUMP JUMPDEST SWAP2 POP PUSH2 0x70F DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x733 DUP2 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 PUSH1 0x20 DUP4 PUSH2 0x697 JUMP JUMPDEST SWAP2 POP PUSH2 0x77B DUP3 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x79F DUP2 PUSH2 0x763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 GASLIMIT PUSH26 0x24015178BCCBDA9F58A2F70EFBB3945F4FB16D3C97C1E92D6E49 PUSH1 0x51 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "300:1939:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1927:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2133:104:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1286:593:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;658:552;830:4;836:7;845;911:10;:16;;;887:14;:20;;;:40;886:108;;;;;975:10;:18;;;949:14;:22;;;:44;886:108;:171;;;;;1041:15;1015:14;:22;;;:41;;886:171;:236;;;;;1106:15;1078:14;:24;;;:43;;886:236;1137:10;:18;;;1169:14;:24;;;864:339;;;;;;658:552;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1927:158:4:-;1094:13:0;:11;:13::i;:::-;2019:14:4::1;2004:12;:29;;;;2048:30;2063:14;2048:30;;;;;;:::i;:::-;;;;;;;;1927:158:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2133:104:4:-;2192:7;2218:12;;2211:19;;2133:104;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1286:593:4:-;1453:4;1459:7;1468;1549:12;:18;;;1527:12;:18;;;:40;1526:112;;;;;1617:12;:20;;;1593:12;:20;;;:44;1526:112;:179;;;;;1689:15;1663:12;:22;;;:41;;1526:179;:244;;;;;1754:15;1730:12;:20;;;:39;;1526:244;1788:12;:20;;;1826:12;:22;;;1487:385;;;;;;1286:593;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;88:117:5:-;197:1;194;187:12;334:117;443:1;440;433:12;488:228;557:5;598:3;589:6;584:3;580:16;576:26;573:113;;;605:79;;:::i;:::-;573:113;704:6;695:15;;488:228;;;;:::o;760:235::-;836:5;877:3;868:6;863:3;859:16;855:26;852:113;;;884:79;;:::i;:::-;852:113;983:6;974:15;;760:235;;;;:::o;1001:582::-;1122:6;1130;1179:3;1167:9;1158:7;1154:23;1150:33;1147:120;;;1186:79;;:::i;:::-;1147:120;1306:1;1331:76;1399:7;1390:6;1379:9;1375:22;1331:76;:::i;:::-;1321:86;;1277:140;1456:3;1483:83;1558:7;1549:6;1538:9;1534:22;1483:83;:::i;:::-;1473:93;;1427:149;1001:582;;;;;:::o;1589:90::-;1623:7;1666:5;1659:13;1652:21;1641:32;;1589:90;;;:::o;1685:109::-;1766:21;1781:5;1766:21;:::i;:::-;1761:3;1754:34;1685:109;;:::o;1800:77::-;1837:7;1866:5;1855:16;;1800:77;;;:::o;1883:118::-;1970:24;1988:5;1970:24;:::i;:::-;1965:3;1958:37;1883:118;;:::o;2007:430::-;2150:4;2188:2;2177:9;2173:18;2165:26;;2201:65;2263:1;2252:9;2248:17;2239:6;2201:65;:::i;:::-;2276:72;2344:2;2333:9;2329:18;2320:6;2276:72;:::i;:::-;2358;2426:2;2415:9;2411:18;2402:6;2358:72;:::i;:::-;2007:430;;;;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:329::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:126::-;3088:7;3128:42;3121:5;3117:54;3106:65;;3051:126;;;:::o;3183:96::-;3220:7;3249:24;3267:5;3249:24;:::i;:::-;3238:35;;3183:96;;;:::o;3285:118::-;3372:24;3390:5;3372:24;:::i;:::-;3367:3;3360:37;3285:118;;:::o;3409:222::-;3502:4;3540:2;3529:9;3525:18;3517:26;;3553:71;3621:1;3610:9;3606:17;3597:6;3553:71;:::i;:::-;3409:222;;;;:::o;3637:::-;3730:4;3768:2;3757:9;3753:18;3745:26;;3781:71;3849:1;3838:9;3834:17;3825:6;3781:71;:::i;:::-;3637:222;;;;:::o;3865:122::-;3938:24;3956:5;3938:24;:::i;:::-;3931:5;3928:35;3918:63;;3977:1;3974;3967:12;3918:63;3865:122;:::o;3993:139::-;4039:5;4077:6;4064:20;4055:29;;4093:33;4120:5;4093:33;:::i;:::-;3993:139;;;;:::o;4138:329::-;4197:6;4246:2;4234:9;4225:7;4221:23;4217:32;4214:119;;;4252:79;;:::i;:::-;4214:119;4372:1;4397:53;4442:7;4433:6;4422:9;4418:22;4397:53;:::i;:::-;4387:63;;4343:117;4138:329;;;;:::o;4473:169::-;4557:11;4591:6;4586:3;4579:19;4631:4;4626:3;4622:14;4607:29;;4473:169;;;;:::o;4648:225::-;4788:34;4784:1;4776:6;4772:14;4765:58;4857:8;4852:2;4844:6;4840:15;4833:33;4648:225;:::o;4879:366::-;5021:3;5042:67;5106:2;5101:3;5042:67;:::i;:::-;5035:74;;5118:93;5207:3;5118:93;:::i;:::-;5236:2;5231:3;5227:12;5220:19;;4879:366;;;:::o;5251:419::-;5417:4;5455:2;5444:9;5440:18;5432:26;;5504:9;5498:4;5494:20;5490:1;5479:9;5475:17;5468:47;5532:131;5658:4;5532:131;:::i;:::-;5524:139;;5251:419;;;:::o;5676:182::-;5816:34;5812:1;5804:6;5800:14;5793:58;5676:182;:::o;5864:366::-;6006:3;6027:67;6091:2;6086:3;6027:67;:::i;:::-;6020:74;;6103:93;6192:3;6103:93;:::i;:::-;6221:2;6216:3;6212:12;6205:19;;5864:366;;;:::o;6236:419::-;6402:4;6440:2;6429:9;6425:18;6417:26;;6489:9;6483:4;6479:20;6475:1;6464:9;6460:17;6453:47;6517:131;6643:4;6517:131;:::i;:::-;6509:139;;6236:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "402400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"possibleAcceptSuggest((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "infinite",
								"possiblePurchase((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "infinite",
								"renounceOwnership()": "30421",
								"setProtocolFee(uint256)": "infinite",
								"transferOwnership(address)": "30788",
								"viewProtocolFee()": "2459"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 579,
									"end": 581,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 547,
									"end": 581,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 581,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 2239,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4457924015178bccbda9f58a2f70efbb3945f4fb16d3c97c1e92d6e496051ea64736f6c63430008130033",
									".code": [
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "9DD1CDA6"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "FCEB5D6C"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "27891057"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "787DCE3D"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 300,
											"end": 2239,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 658,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 658,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 658,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1927,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1927,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2133,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2133,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1286,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1286,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1286,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 830,
											"end": 834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 911,
											"end": 927,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 887,
											"end": 901,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 887,
											"end": 907,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 887,
											"end": 907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 887,
											"end": 907,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 887,
											"end": 927,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 886,
											"end": 994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 994,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 886,
											"end": 994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 975,
											"end": 985,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 963,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 949,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 949,
											"end": 971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 993,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 886,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1056,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1029,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1015,
											"end": 1037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1056,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1121,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1092,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1078,
											"end": 1102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1121,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 886,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1147,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 864,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 658,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2033,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2033,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2033,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2033,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3E1C6F794380F768303EE10ADB978482D0EE037B0517BDABF3118141632078A6"
										},
										{
											"begin": 2063,
											"end": 2077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2230,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2230,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1539,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1567,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1629,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1526,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1526,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1730,
											"end": 1750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1750,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1526,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1788,
											"end": 1808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1838,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1826,
											"end": 1848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1848,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 488,
											"end": 716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 601,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 584,
											"end": 587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 580,
											"end": 596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 573,
											"end": 686,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 573,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 573,
											"end": 686,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 605,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 605,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 605,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 605,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 573,
											"end": 686,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 573,
											"end": 686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 695,
											"end": 710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 488,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 880,
											"name": "PUSH",
											"source": 5,
											"value": "1C0"
										},
										{
											"begin": 868,
											"end": 874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 863,
											"end": 866,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 859,
											"end": 875,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 855,
											"end": 881,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 852,
											"end": 965,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 852,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 852,
											"end": 965,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 884,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 884,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 884,
											"end": 963,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 852,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 852,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 974,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 760,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1183,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1267,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1147,
											"end": 1267,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1186,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1267,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1147,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1331,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1331,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1459,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1483,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1547,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1483,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1483,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1589,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1672,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1794,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1685,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1766,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1787,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1766,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1877,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1800,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1883,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1970,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1994,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1970,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2177,
											"end": 2186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2201,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2266,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2201,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2348,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2276,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2358,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 3038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3177,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3051,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3279,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3183,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3267,
											"end": 3272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3249,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3273,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3249,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3403,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3285,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3390,
											"end": 3395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3372,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3396,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3372,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3619,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3553,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3624,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3553,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3781,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3781,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3865,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3938,
											"end": 3962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3963,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3918,
											"end": 3981,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3981,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3918,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4120,
											"end": 4125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4093,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4126,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4093,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4333,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4214,
											"end": 4333,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4252,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4252,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4252,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4333,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4214,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4442,
											"end": 4449,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4397,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4450,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4397,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4622,
											"end": 4636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4873,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4648,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4822,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4772,
											"end": 4786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4865,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 5245,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4879,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5042,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5042,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5042,
											"end": 5109,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5042,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5207,
											"end": 5210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5118,
											"end": 5211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5211,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5118,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 5245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 5245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 5245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5670,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5251,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5417,
											"end": 5421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5457,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5514,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5490,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5532,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5663,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5532,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5524,
											"end": 5663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5524,
											"end": 5663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5858,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5676,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5850,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5812,
											"end": 5813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6027,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6027,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6103,
											"end": 6196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6103,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 6230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 6230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6655,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6236,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6402,
											"end": 6406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6473,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6517,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6517,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"hardhat/contracts/interfaces/IProtocolAndExecution.sol",
								"hardhat/contracts/libraries/MarketTypes.sol",
								"hardhat/contracts/protocols/ProtocolAndExecution.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"possibleAcceptSuggest((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "27891057",
							"possiblePurchase((bool,address,uint256,uint256),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32))": "fceb5d6c",
							"renounceOwnership()": "715018a6",
							"setProtocolFee(uint256)": "787dce3d",
							"transferOwnership(address)": "f2fde38b",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"NewProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.User\",\"name\":\"userSeller\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"edemSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct MarketTypes.MarketPlace\",\"name\":\"marketProposer\",\"type\":\"tuple\"}],\"name\":\"possibleAcceptSuggest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.User\",\"name\":\"userProposer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDealer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"edemSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct MarketTypes.MarketPlace\",\"name\":\"marketSeller\",\"type\":\"tuple\"}],\"name\":\"possiblePurchase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/protocols/ProtocolAndExecution.sol\":\"ProtocolAndExecution\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"hardhat/contracts/interfaces/IProtocolAndExecution.sol\":{\"keccak256\":\"0x440a9935ec96d61035fcb351943e80cf974f9385ddb6dc3ecaecc8445cfa5689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9152a5069e8900c8f770f47314061c01b80557ac00bc265c7fd8cdd28da5e4c9\",\"dweb:/ipfs/QmNgS11CdmbZQT2WBs2DyHTBRoGcs2irt9xn8juya3nmq1\"]},\"hardhat/contracts/libraries/MarketTypes.sol\":{\"keccak256\":\"0x13212afd96004a6866cd1801072e693f8ece47386563f69938e377eaca4c063d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ce500c28b379345cd24efc0099dda76ae92510c2996ec3f8f934df9d954ee9b\",\"dweb:/ipfs/QmQyzpSJuytcnSiKoezaiZ5CXQv5nAfNqCcjP6Wtep5v7W\"]},\"hardhat/contracts/protocols/ProtocolAndExecution.sol\":{\"keccak256\":\"0x21afb0bb3ea5e1f3f19ceb8b96bed2c193b9187b28a1a1dbcb88d5b27d14e726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://263051f7362448dfd4c1b2fb1262d8cdd2132a72741df03fa0d1bd8a0b67188a\",\"dweb:/ipfs/QmbPWVHCb6sNASUNz4bfp1BuSdqf42Ub64RrDEz6yThPSZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "hardhat/contracts/protocols/ProtocolAndExecution.sol:ProtocolAndExecution",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 276,
								"contract": "hardhat/contracts/protocols/ProtocolAndExecution.sol:ProtocolAndExecution",
								"label": "_protocolFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"hardhat/contracts/interfaces/IProtocolAndExecution.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/interfaces/IProtocolAndExecution.sol",
					"exportedSymbols": {
						"IProtocolAndExecution": [
							174
						],
						"MarketTypes": [
							257
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:2"
						},
						{
							"absolutePath": "hardhat/contracts/libraries/MarketTypes.sol",
							"file": "../libraries/MarketTypes.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 175,
							"sourceUnit": 258,
							"src": "87:57:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "MarketTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 257,
										"src": "95:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolAndExecution",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "IProtocolAndExecution",
							"nameLocation": "156:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "27891057",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "possibleAcceptSuggest",
									"nameLocation": "193:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "userSeller",
												"nameLocation": "250:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "224:36:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
													"typeString": "struct MarketTypes.User"
												},
												"typeName": {
													"id": 140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 139,
														"name": "MarketTypes.User",
														"nameLocations": [
															"224:11:2",
															"236:4:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "224:16:2"
													},
													"referencedDeclaration": 218,
													"src": "224:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$218_storage_ptr",
														"typeString": "struct MarketTypes.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "marketProposer",
												"nameLocation": "303:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "270:47:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
													"typeString": "struct MarketTypes.MarketPlace"
												},
												"typeName": {
													"id": 143,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 142,
														"name": "MarketTypes.MarketPlace",
														"nameLocations": [
															"270:11:2",
															"282:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "270:23:2"
													},
													"referencedDeclaration": 209,
													"src": "270:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketPlace_$209_storage_ptr",
														"typeString": "struct MarketTypes.MarketPlace"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:109:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "347:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "347:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "353:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "362:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:24:2"
									},
									"scope": 174,
									"src": "184:187:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fceb5d6c",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "possiblePurchase",
									"nameLocation": "386:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "userProposer",
												"nameLocation": "438:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "412:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
													"typeString": "struct MarketTypes.User"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "MarketTypes.User",
														"nameLocations": [
															"412:11:2",
															"424:4:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "412:16:2"
													},
													"referencedDeclaration": 218,
													"src": "412:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$218_storage_ptr",
														"typeString": "struct MarketTypes.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "marketSeller",
												"nameLocation": "493:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "460:45:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
													"typeString": "struct MarketTypes.MarketPlace"
												},
												"typeName": {
													"id": 158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 157,
														"name": "MarketTypes.MarketPlace",
														"nameLocations": [
															"460:11:2",
															"472:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "460:23:2"
													},
													"referencedDeclaration": 209,
													"src": "460:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketPlace_$209_storage_ptr",
														"typeString": "struct MarketTypes.MarketPlace"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:109:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "535:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "535:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "541:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "550:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:24:2"
									},
									"scope": 174,
									"src": "377:182:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "574:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "615:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:9:2"
									},
									"scope": 174,
									"src": "565:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 175,
							"src": "146:480:2",
							"usedErrors": []
						}
					],
					"src": "62:565:2"
				},
				"id": 2
			},
			"hardhat/contracts/libraries/MarketTypes.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/libraries/MarketTypes.sol",
					"exportedSymbols": {
						"MarketTypes": [
							257
						]
					},
					"id": 258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "57:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MarketTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "82:97:3",
								"text": " @title MarketTypes\n @notice This library containes Market types for the Edem Market."
							},
							"fullyImplemented": true,
							"id": 257,
							"linearizedBaseContracts": [
								257
							],
							"name": "MarketTypes",
							"nameLocation": "188:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 180,
									"mutability": "constant",
									"name": "MARKET_PLACE_HASH",
									"nameLocation": "863:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "837:112:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 178,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "837:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838323162323331303838363062323236326661363233643435613236303733303231646362343961346164356538393438386530373037393436333038333261",
										"id": 179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "883:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_58848617193417181260543266862638601456532688663204411538758711739009412924202_by_1",
											"typeString": "int_const 5884...(69 digits omitted)...4202"
										},
										"value": "0x821b23108860b2262fa623d45a26073021dcb49a4ad5e89488e070794630832a"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "MarketTypes.MarketPlace",
									"id": 209,
									"members": [
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "isDealer",
											"nameLocation": "1039:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1034:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1034:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "edemSigner",
											"nameLocation": "1111:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1103:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 183,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1103:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 186,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "1174:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1166:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1166:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1226:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1218:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1218:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 190,
											"mutability": "mutable",
											"name": "nftAmount",
											"nameLocation": "1267:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1259:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1259:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1334:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1326:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 191,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1326:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "protocolAddress",
											"nameLocation": "1398:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1390:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1390:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "tradeTokenAddress",
											"nameLocation": "1465:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1457:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 195,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1457:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1525:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1517:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1517:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1628:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1620:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1620:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 202,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1674:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1666:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1666:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1714:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1708:7:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 203,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1708:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 206,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1733:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1725:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 205,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1725:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1752:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 209,
											"src": "1744:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 207,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1744:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarketPlace",
									"nameLocation": "1012:11:3",
									"nodeType": "StructDefinition",
									"scope": 257,
									"src": "1005:755:3",
									"visibility": "public"
								},
								{
									"canonicalName": "MarketTypes.User",
									"id": 218,
									"members": [
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "isDealer",
											"nameLocation": "1867:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1862:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 210,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1862:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "takerAddress",
											"nameLocation": "1939:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1931:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 212,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1931:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 215,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1983:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1975:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 214,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1975:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 217,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "2025:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "2017:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 216,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2017:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1847:4:3",
									"nodeType": "StructDefinition",
									"scope": 257,
									"src": "1840:215:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2165:620:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 229,
																	"name": "MARKET_PLACE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "2253:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 230,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2292:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2304:8:3",
																	"memberName": "isDealer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "2292:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 232,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2334:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2346:10:3",
																	"memberName": "edemSigner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "2334:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 234,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2378:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2390:10:3",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "2378:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 236,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2422:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2434:7:3",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "2422:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 238,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2463:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2475:9:3",
																	"memberName": "nftAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "2463:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 240,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2506:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2518:5:3",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "2506:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 242,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2545:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2557:15:3",
																	"memberName": "protocolAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 194,
																	"src": "2545:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 244,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2594:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2606:17:3",
																	"memberName": "tradeTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "2594:29:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 246,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2645:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2657:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 198,
																	"src": "2645:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 248,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2684:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2696:9:3",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 200,
																	"src": "2684:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 250,
																		"name": "marketPlace",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2727:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
																			"typeString": "struct MarketTypes.MarketPlace memory"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2739:7:3",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 202,
																	"src": "2727:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2221:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2225:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2221:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2221:543:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 226,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2194:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2194:584:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 225,
												"id": 254,
												"nodeType": "Return",
												"src": "2175:603:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2082:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "marketPlace",
												"nameLocation": "2115:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2096:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketPlace_$209_memory_ptr",
													"typeString": "struct MarketTypes.MarketPlace"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "MarketPlace",
														"nameLocations": [
															"2096:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "2096:11:3"
													},
													"referencedDeclaration": 209,
													"src": "2096:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketPlace_$209_storage_ptr",
														"typeString": "struct MarketTypes.MarketPlace"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:46:3"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2156:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:9:3"
									},
									"scope": 257,
									"src": "2073:712:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 258,
							"src": "180:2607:3",
							"usedErrors": []
						}
					],
					"src": "57:2731:3"
				},
				"id": 3
			},
			"hardhat/contracts/protocols/ProtocolAndExecution.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/protocols/ProtocolAndExecution.sol",
					"exportedSymbols": {
						"IProtocolAndExecution": [
							174
						],
						"MarketTypes": [
							257
						],
						"Ownable": [
							112
						],
						"ProtocolAndExecution": [
							404
						]
					},
					"id": 405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "68:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 405,
							"sourceUnit": 113,
							"src": "93:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 260,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "101:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/libraries/MarketTypes.sol",
							"file": "../libraries/MarketTypes.sol",
							"id": 263,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 405,
							"sourceUnit": 258,
							"src": "162:57:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 262,
										"name": "MarketTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 257,
										"src": "170:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hardhat/contracts/interfaces/IProtocolAndExecution.sol",
							"file": "../interfaces/IProtocolAndExecution.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 405,
							"sourceUnit": 175,
							"src": "220:78:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IProtocolAndExecution",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 174,
										"src": "228:21:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 266,
										"name": "Ownable",
										"nameLocations": [
											"333:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "333:7:4"
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "333:7:4"
								},
								{
									"baseName": {
										"id": 268,
										"name": "IProtocolAndExecution",
										"nameLocations": [
											"342:21:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "342:21:4"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "342:21:4"
								}
							],
							"canonicalName": "ProtocolAndExecution",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								174,
								112,
								134
							],
							"name": "ProtocolAndExecution",
							"nameLocation": "309:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "3e1c6f794380f768303ee10adb978482d0ee037b0517bdabf3118141632078a6",
									"id": 273,
									"name": "NewProtocolFee",
									"nameLocation": "428:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "451:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "443:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:21:4"
									},
									"src": "422:42:4"
								},
								{
									"constant": false,
									"id": 276,
									"mutability": "mutable",
									"name": "_protocolFee",
									"nameLocation": "564:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "547:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "579:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										153
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "854:356:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 292,
																								"name": "marketProposer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 282,
																								"src": "887:14:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																									"typeString": "struct MarketTypes.MarketPlace calldata"
																								}
																							},
																							"id": 293,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "902:5:4",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 192,
																							"src": "887:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 294,
																								"name": "userSeller",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 279,
																								"src": "911:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
																									"typeString": "struct MarketTypes.User calldata"
																								}
																							},
																							"id": 295,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "922:5:4",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 215,
																							"src": "911:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "887:40:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 297,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "886:42:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 298,
																								"name": "marketProposer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 282,
																								"src": "949:14:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																									"typeString": "struct MarketTypes.MarketPlace calldata"
																								}
																							},
																							"id": 299,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "964:7:4",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 188,
																							"src": "949:22:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 300,
																								"name": "userSeller",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 279,
																								"src": "975:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
																									"typeString": "struct MarketTypes.User calldata"
																								}
																							},
																							"id": 301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "986:7:4",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 217,
																							"src": "975:18:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "949:44:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 303,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "948:46:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "886:108:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 305,
																							"name": "marketProposer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 282,
																							"src": "1015:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																								"typeString": "struct MarketTypes.MarketPlace calldata"
																							}
																						},
																						"id": 306,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1030:7:4",
																						"memberName": "endTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 202,
																						"src": "1015:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 307,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1041:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1047:9:4",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1041:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1015:41:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 310,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1014:43:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "886:171:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 312,
																						"name": "marketProposer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 282,
																						"src": "1078:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																							"typeString": "struct MarketTypes.MarketPlace calldata"
																						}
																					},
																					"id": 313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1093:9:4",
																					"memberName": "startTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 200,
																					"src": "1078:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 314,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "1106:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1112:9:4",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "1106:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1078:43:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 317,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1077:45:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "886:236:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 319,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "885:238:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "userSeller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "1137:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
																	"typeString": "struct MarketTypes.User calldata"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1148:7:4",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 217,
															"src": "1137:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 322,
																"name": "marketProposer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "1169:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																	"typeString": "struct MarketTypes.MarketPlace calldata"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1184:9:4",
															"memberName": "nftAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1169:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 324,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "871:332:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 291,
												"id": 325,
												"nodeType": "Return",
												"src": "864:339:4"
											}
										]
									},
									"functionSelector": "27891057",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "possibleAcceptSuggest",
									"nameLocation": "667:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 284,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "812:8:4"
									},
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "userSeller",
												"nameLocation": "724:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "698:36:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
													"typeString": "struct MarketTypes.User"
												},
												"typeName": {
													"id": 278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 277,
														"name": "MarketTypes.User",
														"nameLocations": [
															"698:11:4",
															"710:4:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "698:16:4"
													},
													"referencedDeclaration": 218,
													"src": "698:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$218_storage_ptr",
														"typeString": "struct MarketTypes.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "marketProposer",
												"nameLocation": "777:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "744:47:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
													"typeString": "struct MarketTypes.MarketPlace"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "MarketTypes.MarketPlace",
														"nameLocations": [
															"744:11:4",
															"756:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "744:23:4"
													},
													"referencedDeclaration": 209,
													"src": "744:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketPlace_$209_storage_ptr",
														"typeString": "struct MarketTypes.MarketPlace"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:109:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "830:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "830:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "845:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:24:4"
									},
									"scope": 404,
									"src": "658:552:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										168
									],
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1477:402:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 343,
																								"name": "marketSeller",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 333,
																								"src": "1527:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																									"typeString": "struct MarketTypes.MarketPlace calldata"
																								}
																							},
																							"id": 344,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1540:5:4",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 192,
																							"src": "1527:18:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 345,
																								"name": "userProposer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 330,
																								"src": "1549:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
																									"typeString": "struct MarketTypes.User calldata"
																								}
																							},
																							"id": 346,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1562:5:4",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 215,
																							"src": "1549:18:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1527:40:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 348,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1526:42:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 349,
																								"name": "marketSeller",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 333,
																								"src": "1593:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																									"typeString": "struct MarketTypes.MarketPlace calldata"
																								}
																							},
																							"id": 350,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1606:7:4",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 188,
																							"src": "1593:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 351,
																								"name": "marketSeller",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 333,
																								"src": "1617:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																									"typeString": "struct MarketTypes.MarketPlace calldata"
																								}
																							},
																							"id": 352,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1630:7:4",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 188,
																							"src": "1617:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1593:44:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 354,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1592:46:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1526:112:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 356,
																							"name": "marketSeller",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 333,
																							"src": "1663:12:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																								"typeString": "struct MarketTypes.MarketPlace calldata"
																							}
																						},
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1676:9:4",
																						"memberName": "startTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 200,
																						"src": "1663:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 358,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1689:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 359,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1695:9:4",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1689:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1663:41:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 361,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1662:43:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1526:179:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 363,
																						"name": "marketSeller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 333,
																						"src": "1730:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																							"typeString": "struct MarketTypes.MarketPlace calldata"
																						}
																					},
																					"id": 364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1743:7:4",
																					"memberName": "endTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 202,
																					"src": "1730:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"expression": {
																						"id": 365,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "1754:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1760:9:4",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "1754:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1730:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 368,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1729:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1526:244:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 370,
																		"name": "marketSeller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1788:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																			"typeString": "struct MarketTypes.MarketPlace calldata"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1801:7:4",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "1788:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 372,
																		"name": "marketSeller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1826:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
																			"typeString": "struct MarketTypes.MarketPlace calldata"
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1839:9:4",
																	"memberName": "nftAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "1826:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 374,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1508:354:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(bool,uint256,uint256)"
															}
														}
													],
													"id": 375,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1494:378:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 342,
												"id": 376,
												"nodeType": "Return",
												"src": "1487:385:4"
											}
										]
									},
									"functionSelector": "fceb5d6c",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "possiblePurchase",
									"nameLocation": "1295:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 335,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1435:8:4"
									},
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "userProposer",
												"nameLocation": "1347:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1321:38:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$218_calldata_ptr",
													"typeString": "struct MarketTypes.User"
												},
												"typeName": {
													"id": 329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 328,
														"name": "MarketTypes.User",
														"nameLocations": [
															"1321:11:4",
															"1333:4:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "1321:16:4"
													},
													"referencedDeclaration": 218,
													"src": "1321:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$218_storage_ptr",
														"typeString": "struct MarketTypes.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "marketSeller",
												"nameLocation": "1402:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1369:45:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketPlace_$209_calldata_ptr",
													"typeString": "struct MarketTypes.MarketPlace"
												},
												"typeName": {
													"id": 332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 331,
														"name": "MarketTypes.MarketPlace",
														"nameLocations": [
															"1369:11:4",
															"1381:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "1369:23:4"
													},
													"referencedDeclaration": 209,
													"src": "1369:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketPlace_$209_storage_ptr",
														"typeString": "struct MarketTypes.MarketPlace"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:109:4"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1453:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1453:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1459:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1468:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:24:4"
									},
									"scope": 404,
									"src": "1286:593:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1994:91:4",
										"statements": [
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "2004:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "newProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2019:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2004:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2004:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 390,
															"name": "newProtocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2063:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "NewProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2048:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "2043:35:4"
											}
										]
									},
									"functionSelector": "787dce3d",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "onlyOwner",
												"nameLocations": [
													"1984:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1984:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1984:9:4"
										}
									],
									"name": "setProtocolFee",
									"nameLocation": "1936:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "newProtocolFee",
												"nameLocation": "1959:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1951:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:24:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:4"
									},
									"scope": 404,
									"src": "1927:158:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2201:36:4",
										"statements": [
											{
												"expression": {
													"id": 400,
													"name": "_protocolFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "2218:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 401,
												"nodeType": "Return",
												"src": "2211:19:4"
											}
										]
									},
									"functionSelector": "9dd1cda6",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "2142:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2174:8:4"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:2:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2192:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:9:4"
									},
									"scope": 404,
									"src": "2133:104:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 405,
							"src": "300:1939:4",
							"usedErrors": []
						}
					],
					"src": "68:2172:4"
				},
				"id": 4
			}
		}
	}
}
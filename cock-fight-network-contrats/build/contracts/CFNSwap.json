{
  "contractName": "CFNSwap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cfnContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiveWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_gmmtAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cfnAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapExactGMMTForExactTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "UpdateAccessControl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "UpdateErc20TokenManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_rate",
          "type": "bool"
        }
      ],
      "name": "UpdateIsSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_maxCFNSwapAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxCFNSwapAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "UpdateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "UpdateReceiveWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawCoin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawToken",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessControl",
      "outputs": [
        {
          "internalType": "contract ICFNAccessControl",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TokenManager",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCFNSwapAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiveWallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSwapBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ca",
          "type": "address"
        }
      ],
      "name": "setErc20TokenManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ca",
          "type": "address"
        }
      ],
      "name": "setAccessControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiveWallet",
          "type": "address"
        }
      ],
      "name": "setReceiveWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxCFNSwapAmount",
          "type": "uint256"
        }
      ],
      "name": "setMaxCFNSwapAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isSale",
          "type": "bool"
        }
      ],
      "name": "setIsSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getSwapCFNAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getSwapCoinAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapExactGMMTForExactTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokenAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCoinAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessControl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cfnContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_gmmtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cfnAmount\",\"type\":\"uint256\"}],\"name\":\"SwapExactGMMTForExactTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"UpdateAccessControl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"UpdateErc20TokenManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_rate\",\"type\":\"bool\"}],\"name\":\"UpdateIsSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxCFNSwapAmount\",\"type\":\"uint256\"}],\"name\":\"UpdateMaxCFNSwapAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"UpdateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"UpdateReceiveWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accessControl\",\"outputs\":[{\"internalType\":\"contract ICFNAccessControl\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20TokenManager\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getSwapCFNAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getSwapCoinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCFNSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ca\",\"type\":\"address\"}],\"name\":\"setAccessControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ca\",\"type\":\"address\"}],\"name\":\"setErc20TokenManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isSale\",\"type\":\"bool\"}],\"name\":\"setIsSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxCFNSwapAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxCFNSwapAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiveWallet\",\"type\":\"address\"}],\"name\":\"setReceiveWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapExactGMMTForExactTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwapBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCoinAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokenAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/cock-fight/CFNSwap.sol\":\"CFNSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"project:/contracts/cock-fight/CFNSwap.sol\":{\"keccak256\":\"0xa031553447acb78cfff8d4e862404629858ae505d99cd3da51dcf48fa0e0eb44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850f8059a7b49e005b565528a14f0d4201ad717f30fac8eeb4fd22501f7c74fe\",\"dweb:/ipfs/QmdRw9HMtFWC9K6Pve4WJyzF3YTVu2MiU3KruvzfQMJ3v2\"]},\"project:/contracts/cock-fight/interfaces/ICFNAccessControl.sol\":{\"keccak256\":\"0x1603a5056cf9f1a255a9411280dc8a2b78567bdd4845a4277226fa4555c7584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed08d66f8d438ff8e99beedcae33df711a4bfb86bdda185369d9564f1f66a02\",\"dweb:/ipfs/QmeGRCS53e7YDVNAiuqbYiB8FFqapgKfTd75N6BzjpRRmb\"]}},\"version\":1}",
  "bytecode": "0x608060405269d3c21bcecceda1000000600455600060055560646006556007805460ff191660011790553480156200003657600080fd5b5060405162001af438038062001af4833981016040819052620000599162000170565b60016000556001600160a01b038216620000ba5760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642045524332302061646472657373000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038316620001125760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420616363657373436f6e74726f6c20616464726573730000006044820152606401620000b1565b600180546001600160a01b03199081166001600160a01b039485161790915560028054821694841694909417909355600380549093169116179055620001ba565b80516001600160a01b03811681146200016b57600080fd5b919050565b6000806000606084860312156200018657600080fd5b620001918462000153565b9250620001a16020850162000153565b9150620001b16040850162000153565b90509250925092565b61192a80620001ca6000396000f3fe60806040526004361061011f5760003560e01c8063688d679d116100a0578063d300bb7711610064578063d300bb77146102fd578063e051ed471461031d578063ec756d351461033d578063f3a0741e1461035d578063f8c1c1861461036557600080fd5b8063688d679d1461027d5780637fc0254d1461029d5780639127e8a6146102b2578063b9ec4d11146102d2578063cb1d9da9146102e857600080fd5b80632c4e722e116100e75780632c4e722e146101e757806334fcf437146101fd5780634eb264e81461021d57806350baa6221461023d5780635d3132951461025d57600080fd5b8063039b2ed7146101245780631267a6ab1461014657806313007d551461016657806319129e5a146101a35780631fe35658146101c3575b600080fd5b34801561013057600080fd5b5061014461013f366004611751565b61038f565b005b34801561015257600080fd5b50610144610161366004611728565b61047b565b34801561017257600080fd5b50600254610186906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101af57600080fd5b506101446101be366004611728565b61055e565b3480156101cf57600080fd5b506101d960055481565b60405190815260200161019a565b3480156101f357600080fd5b506101d960065481565b34801561020957600080fd5b5061014461021836600461178b565b610641565b34801561022957600080fd5b5061014461023836600461178b565b610710565b34801561024957600080fd5b5061014461025836600461178b565b61091a565b34801561026957600080fd5b50600354610186906001600160a01b031681565b34801561028957600080fd5b50600154610186906001600160a01b031681565b3480156102a957600080fd5b50610144610b95565b3480156102be57600080fd5b506101446102cd366004611728565b610e07565b3480156102de57600080fd5b506101d960045481565b3480156102f457600080fd5b50610144610eea565b34801561030957600080fd5b5061014461031836600461178b565b6110c8565b34801561032957600080fd5b506101d961033836600461178b565b611197565b34801561034957600080fd5b506101d961035836600461178b565b6111c1565b6101446111f8565b34801561037157600080fd5b5060075461037f9060ff1681565b604051901515815260200161019a565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b919061176e565b6104305760405162461bcd60e51b8152600401610427906117bd565b60405180910390fd5b6007805460ff191683151590811790915560405190815233907f1f6b7ce6ee33da6a8801b0f0c2c0000c0261db252b8efeb1a9cfa4259d7c12db906020015b60405180910390a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f7919061176e565b6105135760405162461bcd60e51b8152600401610427906117bd565b600380546001600160a01b0319166001600160a01b0384169081179091556040517f44d65df39a87857396ef8f466beb2bb4de84e2b6db31ea2b8ef6ada4fd91153590600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da919061176e565b6105f65760405162461bcd60e51b8152600401610427906117bd565b600280546001600160a01b0319166001600160a01b0384169081179091556040517f9c4ea81d40a55f07816a450060f1aeeb7157dedb6fe693bd68053b8ba84eab6090600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561068557600080fd5b505afa158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd919061176e565b6106d95760405162461bcd60e51b8152600401610427906117bd565b600682905560405182815233907fc4133ae49d31ac5e256c186f577fcddc312792062ad1215eb4fe35f1d74062549060200161046f565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c919061176e565b6107a85760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b03166107d05760405162461bcd60e51b81526004016104279061182b565b600082116107f05760405162461bcd60e51b8152600401610427906117f4565b478281101561083c5760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b41031b7b4b7103130b630b731b29760411b6044820152606401610427565b6003546040516000916001600160a01b03169085908381818185875af1925050503d8060008114610889576040519150601f19603f3d011682016040523d82523d6000602084013e61088e565b606091505b50509050806108d25760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610427565b6003546040518581526001600160a01b03909116907fe616ba007bccc294b9a44cd6823b1f1c3be4f5c6093b994d0070fc2a1b06ec419060200160405180910390a250505050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561095e57600080fd5b505afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610996919061176e565b6109b25760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b03166109da5760405162461bcd60e51b81526004016104279061182b565b600082116109fa5760405162461bcd60e51b8152600401610427906117f4565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610a3e57600080fd5b505afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906117a4565b905082811015610ac45760405162461bcd60e51b81526020600482015260196024820152782737ba1032b737bab3b4103a37b5b2b7103130b630b731b29760391b6044820152606401610427565b60015460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291169063a9059cbb90604401602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c919061176e565b506003546040518481526001600160a01b03909116907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a9906020015b60405180910390a2505050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c11919061176e565b610c2d5760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b0316610c555760405162461bcd60e51b81526004016104279061182b565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610c9957600080fd5b505afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd191906117a4565b905060008111610cf35760405162461bcd60e51b8152600401610427906117f4565b60008111610d3f5760405162461bcd60e51b81526020600482015260196024820152782737ba1032b737bab3b4103a37b5b2b7103130b630b731b29760391b6044820152606401610427565b60015460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb90604401602060405180830381600087803b158015610d8f57600080fd5b505af1158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc7919061176e565b506003546040518281526001600160a01b03909116907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200161046f565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610e4b57600080fd5b505afa158015610e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e83919061176e565b610e9f5760405162461bcd60e51b8152600401610427906117bd565b600180546001600160a01b0319166001600160a01b0384169081179091556040517f9c7f5a4ace9ece42d49d364c1df0edf2155838f639a6a60449b38c93e69dca0190600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f66919061176e565b610f825760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b0316610faa5760405162461bcd60e51b81526004016104279061182b565b4780610ff35760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b41031b7b4b7103130b630b731b29760411b6044820152606401610427565b6003546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611040576040519150601f19603f3d011682016040523d82523d6000602084013e611045565b606091505b50509050806110895760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610427565b6003546040518381526001600160a01b03909116907fe616ba007bccc294b9a44cd6823b1f1c3be4f5c6093b994d0070fc2a1b06ec4190602001610b88565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561110c57600080fd5b505afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611144919061176e565b6111605760405162461bcd60e51b8152600401610427906117bd565b600482905560405182815233907f0d06742f5134a69844d113935c01df644352d72653584be5087105eb163a40e89060200161046f565b600080600654670de0b6b3a76400006111b09190611887565b6111ba9084611887565b9392505050565b6000600654670de0b6b3a76400006111d99190611887565b8210156111e857506000919050565b6000600654836111ba9190611873565b600254604051636aacbfd760e11b81523360048201819052916001600160a01b03169063d5597fae9060240160206040518083038186803b15801561123c57600080fd5b505afa158015611250573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611274919061176e565b156112d45760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e2064656e6965643a206164647265737320697320626044820152691b1858dadb1a5cdd195960b21b6064820152608401610427565b6112dc6116b4565b60006112e7346111c1565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561133057600080fd5b505afa158015611344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136891906117a4565b905060006113758361170e565b60075490915060ff166113b95760405162461bcd60e51b815260206004820152600c60248201526b2237903737ba1039b2b6361760a11b6044820152606401610427565b6006546113ce90670de0b6b3a7640000611887565b3410156114275760405162461bcd60e51b815260206004820152602160248201527f4974206d7573742062652067726561746572207468616e2074686520726174656044820152601760f91b6064820152608401610427565b818311156114775760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682043464e2062616c616e63652e0000000000000000006044820152606401610427565b80156114cf5760405162461bcd60e51b815260206004820152602160248201527f546865206578697374656e6365206f66206120646563696d616c20706f696e746044820152601760f91b6064820152608401610427565b600454600554106115165760405162461bcd60e51b815260206004820152601160248201527022b7321037b3103a34329032bb32b73a1760791b6044820152606401610427565b60045483600554611527919061185b565b11156115815760405162461bcd60e51b8152602060048201526024808201527f546f74616c20616d6f756e74207061696420686173206265656e2065786365656044820152633232b21760e11b6064820152608401610427565b8260056000828254611593919061185b565b909155505060015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156115e457600080fd5b505af11580156115f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161c919061176e565b50604080513481526020810185905233917fa82f0f188b17dca2950b9beca130ebd50850596c0a96a81a3896e057860a1989910160405180910390a2600454600554106116a4576007805460ff191690556040516000815230907f1f6b7ce6ee33da6a8801b0f0c2c0000c0261db252b8efeb1a9cfa4259d7c12db9060200160405180910390a25b5050506116b16001600055565b50565b600260005414156117075760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610427565b6002600055565b6000611722670de0b6b3a7640000836118a6565b92915050565b60006020828403121561173a57600080fd5b81356001600160a01b03811681146111ba57600080fd5b60006020828403121561176357600080fd5b81356111ba816118e6565b60006020828403121561178057600080fd5b81516111ba816118e6565b60006020828403121561179d57600080fd5b5035919050565b6000602082840312156117b657600080fd5b5051919050565b60208082526018908201527f556e7665726966696564206f776e657220616464726573730000000000000000604082015260600190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b60208082526016908201527543616e6e6f74206265206e756c6c206164647265737360501b604082015260600190565b6000821982111561186e5761186e6118ba565b500190565b600082611882576118826118d0565b500490565b60008160001904831182151516156118a1576118a16118ba565b500290565b6000826118b5576118b56118d0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b80151581146116b157600080fdfea2646970667358221220fccc63cfd9c635a839ee431855c59a0786a673e3ab054e18ac54b96b203c33e764736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c8063688d679d116100a0578063d300bb7711610064578063d300bb77146102fd578063e051ed471461031d578063ec756d351461033d578063f3a0741e1461035d578063f8c1c1861461036557600080fd5b8063688d679d1461027d5780637fc0254d1461029d5780639127e8a6146102b2578063b9ec4d11146102d2578063cb1d9da9146102e857600080fd5b80632c4e722e116100e75780632c4e722e146101e757806334fcf437146101fd5780634eb264e81461021d57806350baa6221461023d5780635d3132951461025d57600080fd5b8063039b2ed7146101245780631267a6ab1461014657806313007d551461016657806319129e5a146101a35780631fe35658146101c3575b600080fd5b34801561013057600080fd5b5061014461013f366004611751565b61038f565b005b34801561015257600080fd5b50610144610161366004611728565b61047b565b34801561017257600080fd5b50600254610186906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101af57600080fd5b506101446101be366004611728565b61055e565b3480156101cf57600080fd5b506101d960055481565b60405190815260200161019a565b3480156101f357600080fd5b506101d960065481565b34801561020957600080fd5b5061014461021836600461178b565b610641565b34801561022957600080fd5b5061014461023836600461178b565b610710565b34801561024957600080fd5b5061014461025836600461178b565b61091a565b34801561026957600080fd5b50600354610186906001600160a01b031681565b34801561028957600080fd5b50600154610186906001600160a01b031681565b3480156102a957600080fd5b50610144610b95565b3480156102be57600080fd5b506101446102cd366004611728565b610e07565b3480156102de57600080fd5b506101d960045481565b3480156102f457600080fd5b50610144610eea565b34801561030957600080fd5b5061014461031836600461178b565b6110c8565b34801561032957600080fd5b506101d961033836600461178b565b611197565b34801561034957600080fd5b506101d961035836600461178b565b6111c1565b6101446111f8565b34801561037157600080fd5b5060075461037f9060ff1681565b604051901515815260200161019a565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b919061176e565b6104305760405162461bcd60e51b8152600401610427906117bd565b60405180910390fd5b6007805460ff191683151590811790915560405190815233907f1f6b7ce6ee33da6a8801b0f0c2c0000c0261db252b8efeb1a9cfa4259d7c12db906020015b60405180910390a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f7919061176e565b6105135760405162461bcd60e51b8152600401610427906117bd565b600380546001600160a01b0319166001600160a01b0384169081179091556040517f44d65df39a87857396ef8f466beb2bb4de84e2b6db31ea2b8ef6ada4fd91153590600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da919061176e565b6105f65760405162461bcd60e51b8152600401610427906117bd565b600280546001600160a01b0319166001600160a01b0384169081179091556040517f9c4ea81d40a55f07816a450060f1aeeb7157dedb6fe693bd68053b8ba84eab6090600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561068557600080fd5b505afa158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd919061176e565b6106d95760405162461bcd60e51b8152600401610427906117bd565b600682905560405182815233907fc4133ae49d31ac5e256c186f577fcddc312792062ad1215eb4fe35f1d74062549060200161046f565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c919061176e565b6107a85760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b03166107d05760405162461bcd60e51b81526004016104279061182b565b600082116107f05760405162461bcd60e51b8152600401610427906117f4565b478281101561083c5760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b41031b7b4b7103130b630b731b29760411b6044820152606401610427565b6003546040516000916001600160a01b03169085908381818185875af1925050503d8060008114610889576040519150601f19603f3d011682016040523d82523d6000602084013e61088e565b606091505b50509050806108d25760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610427565b6003546040518581526001600160a01b03909116907fe616ba007bccc294b9a44cd6823b1f1c3be4f5c6093b994d0070fc2a1b06ec419060200160405180910390a250505050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561095e57600080fd5b505afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610996919061176e565b6109b25760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b03166109da5760405162461bcd60e51b81526004016104279061182b565b600082116109fa5760405162461bcd60e51b8152600401610427906117f4565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610a3e57600080fd5b505afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906117a4565b905082811015610ac45760405162461bcd60e51b81526020600482015260196024820152782737ba1032b737bab3b4103a37b5b2b7103130b630b731b29760391b6044820152606401610427565b60015460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291169063a9059cbb90604401602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c919061176e565b506003546040518481526001600160a01b03909116907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a9906020015b60405180910390a2505050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c11919061176e565b610c2d5760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b0316610c555760405162461bcd60e51b81526004016104279061182b565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610c9957600080fd5b505afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd191906117a4565b905060008111610cf35760405162461bcd60e51b8152600401610427906117f4565b60008111610d3f5760405162461bcd60e51b81526020600482015260196024820152782737ba1032b737bab3b4103a37b5b2b7103130b630b731b29760391b6044820152606401610427565b60015460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb90604401602060405180830381600087803b158015610d8f57600080fd5b505af1158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc7919061176e565b506003546040518281526001600160a01b03909116907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200161046f565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610e4b57600080fd5b505afa158015610e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e83919061176e565b610e9f5760405162461bcd60e51b8152600401610427906117bd565b600180546001600160a01b0319166001600160a01b0384169081179091556040517f9c7f5a4ace9ece42d49d364c1df0edf2155838f639a6a60449b38c93e69dca0190600090a25050565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f66919061176e565b610f825760405162461bcd60e51b8152600401610427906117bd565b6003546001600160a01b0316610faa5760405162461bcd60e51b81526004016104279061182b565b4780610ff35760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b41031b7b4b7103130b630b731b29760411b6044820152606401610427565b6003546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611040576040519150601f19603f3d011682016040523d82523d6000602084013e611045565b606091505b50509050806110895760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610427565b6003546040518381526001600160a01b03909116907fe616ba007bccc294b9a44cd6823b1f1c3be4f5c6093b994d0070fc2a1b06ec4190602001610b88565b600254604051633f1e317960e11b81523360048201819052916001600160a01b031690637e3c62f29060240160206040518083038186803b15801561110c57600080fd5b505afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611144919061176e565b6111605760405162461bcd60e51b8152600401610427906117bd565b600482905560405182815233907f0d06742f5134a69844d113935c01df644352d72653584be5087105eb163a40e89060200161046f565b600080600654670de0b6b3a76400006111b09190611887565b6111ba9084611887565b9392505050565b6000600654670de0b6b3a76400006111d99190611887565b8210156111e857506000919050565b6000600654836111ba9190611873565b600254604051636aacbfd760e11b81523360048201819052916001600160a01b03169063d5597fae9060240160206040518083038186803b15801561123c57600080fd5b505afa158015611250573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611274919061176e565b156112d45760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e2064656e6965643a206164647265737320697320626044820152691b1858dadb1a5cdd195960b21b6064820152608401610427565b6112dc6116b4565b60006112e7346111c1565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561133057600080fd5b505afa158015611344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136891906117a4565b905060006113758361170e565b60075490915060ff166113b95760405162461bcd60e51b815260206004820152600c60248201526b2237903737ba1039b2b6361760a11b6044820152606401610427565b6006546113ce90670de0b6b3a7640000611887565b3410156114275760405162461bcd60e51b815260206004820152602160248201527f4974206d7573742062652067726561746572207468616e2074686520726174656044820152601760f91b6064820152608401610427565b818311156114775760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682043464e2062616c616e63652e0000000000000000006044820152606401610427565b80156114cf5760405162461bcd60e51b815260206004820152602160248201527f546865206578697374656e6365206f66206120646563696d616c20706f696e746044820152601760f91b6064820152608401610427565b600454600554106115165760405162461bcd60e51b815260206004820152601160248201527022b7321037b3103a34329032bb32b73a1760791b6044820152606401610427565b60045483600554611527919061185b565b11156115815760405162461bcd60e51b8152602060048201526024808201527f546f74616c20616d6f756e74207061696420686173206265656e2065786365656044820152633232b21760e11b6064820152608401610427565b8260056000828254611593919061185b565b909155505060015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156115e457600080fd5b505af11580156115f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161c919061176e565b50604080513481526020810185905233917fa82f0f188b17dca2950b9beca130ebd50850596c0a96a81a3896e057860a1989910160405180910390a2600454600554106116a4576007805460ff191690556040516000815230907f1f6b7ce6ee33da6a8801b0f0c2c0000c0261db252b8efeb1a9cfa4259d7c12db9060200160405180910390a25b5050506116b16001600055565b50565b600260005414156117075760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610427565b6002600055565b6000611722670de0b6b3a7640000836118a6565b92915050565b60006020828403121561173a57600080fd5b81356001600160a01b03811681146111ba57600080fd5b60006020828403121561176357600080fd5b81356111ba816118e6565b60006020828403121561178057600080fd5b81516111ba816118e6565b60006020828403121561179d57600080fd5b5035919050565b6000602082840312156117b657600080fd5b5051919050565b60208082526018908201527f556e7665726966696564206f776e657220616464726573730000000000000000604082015260600190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b60208082526016908201527543616e6e6f74206265206e756c6c206164647265737360501b604082015260600190565b6000821982111561186e5761186e6118ba565b500190565b600082611882576118826118d0565b500490565b60008160001904831182151516156118a1576118a16118ba565b500290565b6000826118b5576118b56118d0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b80151581146116b157600080fdfea2646970667358221220fccc63cfd9c635a839ee431855c59a0786a673e3ab054e18ac54b96b203c33e764736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1284:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:58"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:58"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:58"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:58",
                "type": ""
              }
            ],
            "src": "14:177:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:58"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:58",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:58",
                "type": ""
              }
            ],
            "src": "196:378:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:179:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:58",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:58"
                      },
                      {
                        "hexValue": "496e76616c696420616363657373436f6e74726f6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:31:58",
                        "type": "",
                        "value": "Invalid accessControl address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:59:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:59:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ddc1fe068fa42f51d4b8f6f29d96c8adb07858bc62c03605d5663ab1a45eb57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:58",
                "type": ""
              }
            ],
            "src": "579:353:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1111:171:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1128:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1139:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1162:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1173:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1158:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1158:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:58",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1151:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1151:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1201:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1212:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1197:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1197:18:58"
                      },
                      {
                        "hexValue": "496e76616c69642045524332302061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1217:23:58",
                        "type": "",
                        "value": "Invalid ERC20 address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1190:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1190:51:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1250:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1273:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1258:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1258:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1250:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_84bad1164a8d38f7d6b4093aef22fb38a3b7feb0edf0cf8819754404e6506e0e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1088:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1102:4:58",
                "type": ""
              }
            ],
            "src": "937:345:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_4ddc1fe068fa42f51d4b8f6f29d96c8adb07858bc62c03605d5663ab1a45eb57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid accessControl address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_84bad1164a8d38f7d6b4093aef22fb38a3b7feb0edf0cf8819754404e6506e0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid ERC20 address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9533:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:58",
                "type": ""
              }
            ],
            "src": "14:286:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:174:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "427:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "382:52:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "443:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "447:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "510:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "488:21:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:28:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "488:28:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "525:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "535:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "338:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "349:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "361:6:58",
                "type": ""
              }
            ],
            "src": "305:241:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "629:167:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "675:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "684:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "687:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "677:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "677:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "677:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "650:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "659:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "671:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "642:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "639:52:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "700:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "719:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "713:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:16:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "704:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "760:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "738:21:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:28:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "738:28:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "775:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "785:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "775:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "595:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "606:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "618:6:58",
                "type": ""
              }
            ],
            "src": "551:245:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "871:110:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "917:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "926:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "929:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "919:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "919:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "919:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "892:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "901:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "888:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "913:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "884:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "881:52:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "942:33:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "965:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "952:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:23:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "942:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "837:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "848:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "860:6:58",
                "type": ""
              }
            ],
            "src": "801:180:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:103:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1113:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1115:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1115:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1088:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1084:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1109:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1080:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1077:52:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1138:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1154:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1148:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:16:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1138:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1033:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1044:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1056:6:58",
                "type": ""
              }
            ],
            "src": "986:184:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1366:14:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1368:10:58",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1375:3:58"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1350:3:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1358:3:58",
                "type": ""
              }
            ],
            "src": "1175:205:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1486:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1496:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1508:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1504:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1496:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1538:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1553:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1569:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1574:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1565:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1565:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1578:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1561:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1561:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1549:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1549:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1531:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1531:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1455:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1466:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1477:4:58",
                "type": ""
              }
            ],
            "src": "1385:203:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1710:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1720:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1732:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1743:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1728:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1720:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1762:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1777:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1793:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1798:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1789:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1789:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1802:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1755:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1755:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1679:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1690:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1701:4:58",
                "type": ""
              }
            ],
            "src": "1593:219:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1954:145:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1964:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1976:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1987:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1972:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1964:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2006:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2021:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2037:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2042:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2033:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2033:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2046:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2029:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2029:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2017:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2017:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1999:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1999:51:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2070:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2081:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:18:58"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2086:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2059:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2059:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2059:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1915:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1926:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1934:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1945:4:58",
                "type": ""
              }
            ],
            "src": "1817:282:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2233:145:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2243:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2266:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2251:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2243:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2285:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2300:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2316:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2321:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2312:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2312:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2325:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2308:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2308:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2296:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2296:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2278:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:51:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2349:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2360:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2345:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2345:18:58"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2365:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2194:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2205:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2213:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2224:4:58",
                "type": ""
              }
            ],
            "src": "2104:274:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2478:92:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2488:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2500:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2511:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2496:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2488:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2530:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2555:6:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2548:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2548:14:58"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2541:6:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2541:22:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2523:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2523:41:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2523:41:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2447:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2458:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2469:4:58",
                "type": ""
              }
            ],
            "src": "2383:187:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2703:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2713:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2725:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2736:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2721:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2713:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2755:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2770:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2786:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2791:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2782:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2782:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2795:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2778:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2778:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2766:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2766:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2748:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ICFNAccessControl_$15612__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2672:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2683:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2694:4:58",
                "type": ""
              }
            ],
            "src": "2575:230:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2926:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2936:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2948:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2959:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2944:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2936:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2978:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2993:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3009:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3014:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3005:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3005:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3018:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3001:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3001:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2989:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2989:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2971:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2971:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1656__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2895:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2906:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2917:4:58",
                "type": ""
              }
            ],
            "src": "2810:218:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3207:167:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3224:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3235:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3217:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3217:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3217:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3258:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3269:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3254:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3254:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3274:2:58",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3247:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3247:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3297:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3308:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3293:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3293:18:58"
                      },
                      {
                        "hexValue": "456e64206f6620746865206576656e742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3313:19:58",
                        "type": "",
                        "value": "End of the event."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3286:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:47:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3286:47:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3342:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3354:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3350:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3342:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_01a749ec8717bf2008fb5876f09f8f2a8aa7677140f55f9a97854dce9ab6e0ac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3184:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3198:4:58",
                "type": ""
              }
            ],
            "src": "3033:341:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3553:223:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3570:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3581:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3563:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3563:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3563:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3604:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3615:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3600:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3600:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3620:2:58",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3593:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3593:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3643:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3654:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3639:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3639:18:58"
                      },
                      {
                        "hexValue": "4974206d7573742062652067726561746572207468616e207468652072617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3659:34:58",
                        "type": "",
                        "value": "It must be greater than the rate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3632:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3632:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3632:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3714:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3725:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3710:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3710:18:58"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3730:3:58",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3703:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3703:31:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3703:31:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3743:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3755:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3751:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3751:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3743:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e016efbaeb07f93e8b9d76d70c22464658e4bc2f7bca6a375f73ffbd038ea1c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3530:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3544:4:58",
                "type": ""
              }
            ],
            "src": "3379:397:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3955:174:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3972:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3983:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3965:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3965:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3965:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4006:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4017:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4002:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4002:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4022:2:58",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3995:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3995:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3995:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4045:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4056:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4041:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4041:18:58"
                      },
                      {
                        "hexValue": "556e7665726966696564206f776e65722061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4061:26:58",
                        "type": "",
                        "value": "Unverified owner address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4034:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:54:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:54:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4097:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4109:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4120:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4105:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4105:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4097:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ef06a6f16a63052cc6f8876d7c397c2187ff365ba8310c173ff223c4d78273b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3932:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3946:4:58",
                "type": ""
              }
            ],
            "src": "3781:348:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4308:179:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4325:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4336:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4318:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4318:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4359:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4370:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4355:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4355:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4375:2:58",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4348:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4348:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4398:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4409:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4394:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4394:18:58"
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4414:31:58",
                        "type": "",
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4387:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4387:59:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4387:59:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4455:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4467:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4478:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4463:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4455:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4285:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4299:4:58",
                "type": ""
              }
            ],
            "src": "4134:353:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4666:223:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4683:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4694:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4676:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4676:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4676:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4717:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4728:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4713:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4713:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4733:2:58",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4706:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4706:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4706:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4756:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4767:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4752:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4752:18:58"
                      },
                      {
                        "hexValue": "546865206578697374656e6365206f66206120646563696d616c20706f696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4772:34:58",
                        "type": "",
                        "value": "The existence of a decimal point"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4745:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4745:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4745:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4827:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4838:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4823:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4823:18:58"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4843:3:58",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4816:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4816:31:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4816:31:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4856:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4868:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4879:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4864:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4856:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_475a2aa4197ee11b6ce990ea01deacbb7213dc568ce551d3792d155b0936f2d5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4643:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4657:4:58",
                "type": ""
              }
            ],
            "src": "4492:397:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:162:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5085:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5096:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5078:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5078:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5078:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5119:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5130:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5115:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5115:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5135:2:58",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5108:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5108:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5108:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5158:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5169:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5154:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5154:18:58"
                      },
                      {
                        "hexValue": "446f206e6f742073656c6c2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5174:14:58",
                        "type": "",
                        "value": "Do not sell."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5147:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5147:42:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5147:42:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5198:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5210:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5221:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5206:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5206:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5198:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7eb71dfa953598fa4c2c6f71cc8af81d311ca33e1307e1cb595fed17238a8aea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5045:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5059:4:58",
                "type": ""
              }
            ],
            "src": "4894:336:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5409:232:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5426:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5419:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5419:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5419:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5460:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5471:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5456:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5456:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5476:2:58",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5449:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5449:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5499:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5510:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5495:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5495:18:58"
                      },
                      {
                        "hexValue": "5472616e73616374696f6e2064656e6965643a20616464726573732069732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5515:34:58",
                        "type": "",
                        "value": "Transaction denied: address is b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5488:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5488:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5488:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5570:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5581:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5566:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5566:18:58"
                      },
                      {
                        "hexValue": "6c61636b6c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5586:12:58",
                        "type": "",
                        "value": "lacklisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5559:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5559:40:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5559:40:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5608:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5620:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5631:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5616:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5608:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b94ab0de37864b3ffa49c61672a4f1bb44c1e173c1248148068b7e70de678a9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5386:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5400:4:58",
                "type": ""
              }
            ],
            "src": "5235:406:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5820:172:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5837:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5848:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5830:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5830:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5830:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5871:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5882:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5867:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5867:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:2:58",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5860:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5860:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5860:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5910:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:18:58"
                      },
                      {
                        "hexValue": "43616e6e6f74206265206e756c6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5926:24:58",
                        "type": "",
                        "value": "Cannot be null address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:52:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:52:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5960:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5972:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5983:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5968:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5968:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5960:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5797:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5811:4:58",
                "type": ""
              }
            ],
            "src": "5646:346:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6171:175:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6188:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6199:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6181:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6181:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6181:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6222:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6233:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6218:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6218:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6238:2:58",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6211:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6211:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6261:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6272:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6257:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6257:18:58"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e2062616c616e63652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6277:27:58",
                        "type": "",
                        "value": "Not enough token balance."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6250:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6250:55:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6250:55:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6314:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6326:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6322:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6314:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6148:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6162:4:58",
                "type": ""
              }
            ],
            "src": "5997:349:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6525:166:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6542:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6553:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6535:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6535:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6576:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6587:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6572:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6572:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6592:2:58",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6565:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6565:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6565:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6615:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6626:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6611:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6611:18:58"
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6631:18:58",
                        "type": "",
                        "value": "Transfer failed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6604:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:46:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6604:46:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6659:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6671:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6682:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6667:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6659:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6502:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6516:4:58",
                "type": ""
              }
            ],
            "src": "6351:340:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6870:226:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6887:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6898:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6880:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6880:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6921:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6917:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6917:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6937:2:58",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6960:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6971:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6956:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6956:18:58"
                      },
                      {
                        "hexValue": "546f74616c20616d6f756e74207061696420686173206265656e206578636565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6976:34:58",
                        "type": "",
                        "value": "Total amount paid has been excee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6949:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6949:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6949:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7031:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7042:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7027:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7027:18:58"
                      },
                      {
                        "hexValue": "6465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7047:6:58",
                        "type": "",
                        "value": "ded."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7020:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7020:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7020:34:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7063:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7075:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7086:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7071:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7063:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9cda22f231fc32de24af6ee076496883bf15cf7fc4b0055c6e336dcf6641d5e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6847:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6861:4:58",
                "type": ""
              }
            ],
            "src": "6696:400:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7275:181:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7292:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7303:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7285:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7285:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7285:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7326:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7337:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7322:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7322:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7342:2:58",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7315:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7315:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7315:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7365:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7376:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7361:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7361:18:58"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7381:33:58",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:61:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:61:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7424:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7436:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7447:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7432:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7432:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7424:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7252:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7266:4:58",
                "type": ""
              }
            ],
            "src": "7101:355:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7635:174:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7652:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7663:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7645:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7645:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7645:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7686:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7697:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7682:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7682:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7702:2:58",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7675:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7675:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7675:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7725:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7736:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7721:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7721:18:58"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f696e2062616c616e63652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7741:26:58",
                        "type": "",
                        "value": "Not enough coin balance."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7714:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7714:54:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7714:54:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7777:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7789:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7800:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7785:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7785:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7777:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7612:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7626:4:58",
                "type": ""
              }
            ],
            "src": "7461:348:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7988:173:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8005:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8016:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7998:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8039:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8050:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8035:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8035:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8055:2:58",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8028:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8028:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8028:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8078:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8089:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8074:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8074:18:58"
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682043464e2062616c616e63652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8094:25:58",
                        "type": "",
                        "value": "Not enough CFN balance."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8067:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8067:53:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8067:53:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8141:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8152:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8129:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fec225fc320724552920e58cce24d825194eb451d8cf073b30512b31eaf69600__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7965:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7979:4:58",
                "type": ""
              }
            ],
            "src": "7814:347:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8267:76:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8277:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8289:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8300:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8285:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8285:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8277:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8319:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8330:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8312:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8312:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8312:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8236:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8247:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8258:4:58",
                "type": ""
              }
            ],
            "src": "8166:177:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8477:119:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8487:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8499:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8510:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8495:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8487:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8529:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8540:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8522:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8522:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8522:25:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8567:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8578:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8563:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8563:18:58"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8583:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8556:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8438:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8449:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8457:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8468:4:58",
                "type": ""
              }
            ],
            "src": "8348:248:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8649:80:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8676:22:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8678:16:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8678:18:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8678:18:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8665:1:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8672:1:58"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8668:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8668:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8662:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8662:13:58"
                  },
                  "nodeType": "YulIf",
                  "src": "8659:39:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8707:16:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8718:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8721:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8714:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8714:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8707:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8632:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8635:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8641:3:58",
                "type": ""
              }
            ],
            "src": "8601:128:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8780:74:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8803:22:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8805:16:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8805:18:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8805:18:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8800:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8793:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8793:9:58"
                  },
                  "nodeType": "YulIf",
                  "src": "8790:35:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8834:14:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8843:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8846:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8839:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8839:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8834:1:58"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8765:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8768:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8774:1:58",
                "type": ""
              }
            ],
            "src": "8734:120:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8911:116:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8970:22:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8972:16:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8972:18:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8972:18:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8942:1:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8935:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8935:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8928:6:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8928:17:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8950:1:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8961:1:58",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8957:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8957:6:58"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8965:1:58"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8953:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8953:14:58"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8947:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8947:21:58"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8924:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:45:58"
                  },
                  "nodeType": "YulIf",
                  "src": "8921:71:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9001:20:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9016:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9019:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9012:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9001:7:58"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8890:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8893:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8899:7:58",
                "type": ""
              }
            ],
            "src": "8859:168:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9070:74:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9093:22:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "9095:16:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9095:18:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9095:18:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9090:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9083:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9083:9:58"
                  },
                  "nodeType": "YulIf",
                  "src": "9080:35:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9124:14:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9133:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9136:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "9129:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9129:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9124:1:58"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9055:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9058:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9064:1:58",
                "type": ""
              }
            ],
            "src": "9032:112:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9181:95:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9198:1:58",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9205:3:58",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9210:10:58",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9201:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9201:20:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9191:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9191:31:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9191:31:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9238:1:58",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9241:4:58",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9231:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9231:15:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9231:15:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9262:1:58",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9265:4:58",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9255:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:15:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9255:15:58"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9149:127:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9313:95:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9330:1:58",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9337:3:58",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9342:10:58",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9333:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9333:20:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9323:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9323:31:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9323:31:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9370:1:58",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9373:4:58",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9363:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9363:15:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9363:15:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9394:1:58",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9397:4:58",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9387:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9387:15:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9387:15:58"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "9281:127:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9455:76:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9509:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9518:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9521:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9511:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9511:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9511:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9478:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9499:5:58"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9492:6:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9492:13:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9485:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9485:21:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9475:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9475:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9468:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9468:40:58"
                  },
                  "nodeType": "YulIf",
                  "src": "9465:60:58"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9444:5:58",
                "type": ""
              }
            ],
            "src": "9413:118:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ICFNAccessControl_$15612__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1656__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_01a749ec8717bf2008fb5876f09f8f2a8aa7677140f55f9a97854dce9ab6e0ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"End of the event.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e016efbaeb07f93e8b9d76d70c22464658e4bc2f7bca6a375f73ffbd038ea1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"It must be greater than the rate\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2ef06a6f16a63052cc6f8876d7c397c2187ff365ba8310c173ff223c4d78273b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Unverified owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_475a2aa4197ee11b6ce990ea01deacbb7213dc568ce551d3792d155b0936f2d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"The existence of a decimal point\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7eb71dfa953598fa4c2c6f71cc8af81d311ca33e1307e1cb595fed17238a8aea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Do not sell.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b94ab0de37864b3ffa49c61672a4f1bb44c1e173c1248148068b7e70de678a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Transaction denied: address is b\")\n        mstore(add(headStart, 96), \"lacklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be null address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not enough token balance.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Transfer failed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e9cda22f231fc32de24af6ee076496883bf15cf7fc4b0055c6e336dcf6641d5e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Total amount paid has been excee\")\n        mstore(add(headStart, 96), \"ded.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Not enough coin balance.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fec225fc320724552920e58cce24d825194eb451d8cf073b30512b31eaf69600__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not enough CFN balance.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "284:6719:21:-:0;;;517:14;483:48;;571:1;537:35;;600:3;578:25;;609;;;-1:-1:-1;;609:25:21;630:4;609:25;;;1252:426;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;-1:-1:-1;;;;;1381:26:21;;1373:60;;;;-1:-1:-1;;;1373:60:21;;1139:2:58;1373:60:21;;;1121:21:58;1178:2;1158:18;;;1151:30;1217:23;1197:18;;;1190:51;1258:18;;1373:60:21;;;;;;;;;-1:-1:-1;;;;;1451:28:21;;1443:70;;;;-1:-1:-1;;;1443:70:21;;781:2:58;1443:70:21;;;763:21:58;820:2;800:18;;;793:30;859:31;839:18;;;832:59;908:18;;1443:70:21;579:353:58;1443:70:21;1523:17;:40;;-1:-1:-1;;;;;;1523:40:21;;;-1:-1:-1;;;;;1523:40:21;;;;;;;1573:13;:49;;;;;;;;;;;;;;1632:13;:39;;;;;;;;;;284:6719;;14:177:58;93:13;;-1:-1:-1;;;;;135:31:58;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;937:345::-;284:6719:21;;;;;;",
  "deployedSourceMap": "284:6719:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3147:175;;;;;;;;;;-1:-1:-1;3147:175:21;;;;;:::i;:::-;;:::i;:::-;;2481:209;;;;;;;;;;-1:-1:-1;2481:209:21;;;;;:::i;:::-;;:::i;396:38::-;;;;;;;;;;-1:-1:-1;396:38:21;;;;-1:-1:-1;;;;;396:38:21;;;;;;-1:-1:-1;;;;;1549:32:58;;;1531:51;;1519:2;1504:18;396:38:21;;;;;;;;2281:194;;;;;;;;;;-1:-1:-1;2281:194:21;;;;;:::i;:::-;;:::i;537:35::-;;;;;;;;;;;;;;;;;;;8312:25:58;;;8300:2;8285:18;537:35:21;8166:177:58;578:25:21;;;;;;;;;;;;;;;;2975:166;;;;;;;;;;-1:-1:-1;2975:166:21;;;;;:::i;:::-;;:::i;6486:514::-;;;;;;;;;;-1:-1:-1;6486:514:21;;;;;:::i;:::-;;:::i;5496:494::-;;;;;;;;;;-1:-1:-1;5496:494:21;;;;;:::i;:::-;;:::i;440:36::-;;;;;;;;;;-1:-1:-1;440:36:21;;;;-1:-1:-1;;;;;440:36:21;;;359:31;;;;;;;;;;-1:-1:-1;359:31:21;;;;-1:-1:-1;;;;;359:31:21;;;4980:472;;;;;;;;;;;;;:::i;2080:195::-;;;;;;;;;;-1:-1:-1;2080:195:21;;;;;:::i;:::-;;:::i;483:48::-;;;;;;;;;;;;;;;;6024:418;;;;;;;;;;;;;:::i;2696:238::-;;;;;;;;;;-1:-1:-1;2696:238:21;;;;;:::i;:::-;;:::i;3572:160::-;;;;;;;;;;-1:-1:-1;3572:160:21;;;;;:::i;:::-;;:::i;3328:238::-;;;;;;;;;;-1:-1:-1;3328:238:21;;;;;:::i;:::-;;:::i;3853:1094::-;;;:::i;609:25::-;;;;;;;;;;-1:-1:-1;609:25:21;;;;;;;;;;;2548:14:58;;2541:22;2523:41;;2511:2;2496:18;609:25:21;2383:187:58;3147:175:21;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;3220:10;1964:42;;;1531:51:58;;;3220:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;;;;;;;;;3242:6:::1;:16:::0;;-1:-1:-1;;3242:16:21::1;::::0;::::1;;::::0;;::::1;::::0;;;3282:33:::1;::::0;2523:41:58;;;3295:10:21::1;::::0;3282:33:::1;::::0;2511:2:58;2496:18;3282:33:21::1;;;;;;;;3147:175:::0;;:::o;2481:209::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;2571:10;1964:42;;;1531:51:58;;;2571:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;2593:13:::1;:39:::0;;-1:-1:-1;;;;;;2593:39:21::1;-1:-1:-1::0;;;;;2593:39:21;::::1;::::0;;::::1;::::0;;;2648:35:::1;::::0;::::1;::::0;-1:-1:-1;;2648:35:21::1;2481:209:::0;;:::o;2281:194::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;2360:10;1964:42;;;1531:51:58;;;2360:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;2382:13:::1;:38:::0;;-1:-1:-1;;;;;;2382:38:21::1;-1:-1:-1::0;;;;;2382:38:21;::::1;::::0;;::::1;::::0;;;2444:24:::1;::::0;::::1;::::0;-1:-1:-1;;2444:24:21::1;2281:194:::0;;:::o;2975:166::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;3047:10;1964:42;;;1531:51:58;;;3047:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;3069:4:::1;:12:::0;;;3105:29:::1;::::0;8312:25:58;;;3116:10:21::1;::::0;3105:29:::1;::::0;8300:2:58;8285:18;3105:29:21::1;8166:177:58::0;6486:514:21;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;6565:10;1964:42;;;1531:51:58;;;6565:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;6595:13:::1;::::0;-1:-1:-1;;;;;6595:13:21::1;6587:62;;;;-1:-1:-1::0;;;6587:62:21::1;;;;;;;:::i;:::-;6677:1;6667:7;:11;6659:53;;;;-1:-1:-1::0;;;6659:53:21::1;;;;;;;:::i;:::-;6741:21;6780:18:::0;;::::1;;6772:55;;;::::0;-1:-1:-1;;;6772:55:21;;7663:2:58;6772:55:21::1;::::0;::::1;7645:21:58::0;7702:2;7682:18;;;7675:30;-1:-1:-1;;;7721:18:58;;;7714:54;7785:18;;6772:55:21::1;7461:348:58::0;6772:55:21::1;6857:13;::::0;:38:::1;::::0;6839:12:::1;::::0;-1:-1:-1;;;;;6857:13:21::1;::::0;6883:7;;6839:12;6857:38;6839:12;6857:38;6883:7;6857:13;:38:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6838:57;;;6913:7;6905:36;;;::::0;-1:-1:-1;;;6905:36:21;;6553:2:58;6905:36:21::1;::::0;::::1;6535:21:58::0;6592:2;6572:18;;;6565:30;-1:-1:-1;;;6611:18:58;;;6604:46;6667:18;;6905:36:21::1;6351:340:58::0;6905:36:21::1;6970:13;::::0;6957:36:::1;::::0;8312:25:58;;;-1:-1:-1;;;;;6970:13:21;;::::1;::::0;6957:36:::1;::::0;8300:2:58;8285:18;6957:36:21::1;;;;;;;6577:423;;6486:514:::0;;:::o;5496:494::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;5576:10;1964:42;;;1531:51:58;;;5576:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;5606:13:::1;::::0;-1:-1:-1;;;;;5606:13:21::1;5598:62;;;;-1:-1:-1::0;;;5598:62:21::1;;;;;;;:::i;:::-;5688:1;5678:7;:11;5670:53;;;;-1:-1:-1::0;;;5670:53:21::1;;;;;;;:::i;:::-;5756:17;::::0;:42:::1;::::0;-1:-1:-1;;;5756:42:21;;5792:4:::1;5756:42;::::0;::::1;1531:51:58::0;5734:19:21::1;::::0;-1:-1:-1;;;;;5756:17:21::1;::::0;:27:::1;::::0;1504:18:58;;5756:42:21::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5734:64;;5832:7;5817:11;:22;;5809:60;;;::::0;-1:-1:-1;;;5809:60:21;;6199:2:58;5809:60:21::1;::::0;::::1;6181:21:58::0;6238:2;6218:18;;;6211:30;-1:-1:-1;;;6257:18:58;;;6250:55;6322:18;;5809:60:21::1;5997:349:58::0;5809:60:21::1;5880:17;::::0;5907:13:::1;::::0;5880:50:::1;::::0;-1:-1:-1;;;5880:50:21;;-1:-1:-1;;;;;5907:13:21;;::::1;5880:50;::::0;::::1;1999:51:58::0;2066:18;;;2059:34;;;5880:17:21;::::1;::::0;:26:::1;::::0;1972:18:58;;5880:50:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5960:13:21::1;::::0;5946:37:::1;::::0;8312:25:58;;;-1:-1:-1;;;;;5960:13:21;;::::1;::::0;5946:37:::1;::::0;8300:2:58;8285:18;5946:37:21::1;;;;;;;;5588:402;5496:494:::0;;:::o;4980:472::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;5034:10;1964:42;;;1531:51:58;;;5034:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;5064:13:::1;::::0;-1:-1:-1;;;;;5064:13:21::1;5056:62;;;;-1:-1:-1::0;;;5056:62:21::1;;;;;;;:::i;:::-;5151:17;::::0;:42:::1;::::0;-1:-1:-1;;;5151:42:21;;5187:4:::1;5151:42;::::0;::::1;1531:51:58::0;5129:19:21::1;::::0;-1:-1:-1;;;;;5151:17:21::1;::::0;:27:::1;::::0;1504:18:58;;5151:42:21::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5129:64;;5225:1;5211:11;:15;5203:57;;;;-1:-1:-1::0;;;5203:57:21::1;;;;;;;:::i;:::-;5292:1;5278:11;:15;5270:53;;;::::0;-1:-1:-1;;;5270:53:21;;6199:2:58;5270:53:21::1;::::0;::::1;6181:21:58::0;6238:2;6218:18;;;6211:30;-1:-1:-1;;;6257:18:58;;;6250:55;6322:18;;5270:53:21::1;5997:349:58::0;5270:53:21::1;5334:17;::::0;5361:13:::1;::::0;5334:54:::1;::::0;-1:-1:-1;;;5334:54:21;;-1:-1:-1;;;;;5361:13:21;;::::1;5334:54;::::0;::::1;1999:51:58::0;2066:18;;;2059:34;;;5334:17:21;::::1;::::0;:26:::1;::::0;1972:18:58;;5334:54:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5418:13:21::1;::::0;5404:41:::1;::::0;8312:25:58;;;-1:-1:-1;;;;;5418:13:21;;::::1;::::0;5404:41:::1;::::0;8300:2:58;8285:18;5404:41:21::1;8166:177:58::0;2080:195:21;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;2163:10;1964:42;;;1531:51:58;;;2163:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;2185:17:::1;:31:::0;;-1:-1:-1;;;;;;2185:31:21::1;-1:-1:-1::0;;;;;2185:31:21;::::1;::::0;;::::1;::::0;;;2240:28:::1;::::0;::::1;::::0;-1:-1:-1;;2240:28:21::1;2080:195:::0;;:::o;6024:418::-;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;6077:10;1964:42;;;1531:51:58;;;6077:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;6107:13:::1;::::0;-1:-1:-1;;;;;6107:13:21::1;6099:62;;;;-1:-1:-1::0;;;6099:62:21::1;;;;;;;:::i;:::-;6190:21;6229:11:::0;6221:48:::1;;;::::0;-1:-1:-1;;;6221:48:21;;7663:2:58;6221:48:21::1;::::0;::::1;7645:21:58::0;7702:2;7682:18;;;7675:30;-1:-1:-1;;;7721:18:58;;;7714:54;7785:18;;6221:48:21::1;7461:348:58::0;6221:48:21::1;6299:13;::::0;:38:::1;::::0;6281:12:::1;::::0;-1:-1:-1;;;;;6299:13:21::1;::::0;6325:7;;6281:12;6299:38;6281:12;6299:38;6325:7;6299:13;:38:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6280:57;;;6355:7;6347:36;;;::::0;-1:-1:-1;;;6347:36:21;;6553:2:58;6347:36:21::1;::::0;::::1;6535:21:58::0;6592:2;6572:18;;;6565:30;-1:-1:-1;;;6611:18:58;;;6604:46;6667:18;;6347:36:21::1;6351:340:58::0;6347:36:21::1;6412:13;::::0;6399:36:::1;::::0;8312:25:58;;;-1:-1:-1;;;;;6412:13:21;;::::1;::::0;6399:36:::1;::::0;8300:2:58;8285:18;6399:36:21::1;8166:177:58::0;2696:238:21;1964:13;;:42;;-1:-1:-1;;;1964:42:21;;2792:10;1964:42;;;1531:51:58;;;2792:10:21;-1:-1:-1;;;;;1964:13:21;;:37;;1504:18:58;;1964:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:113;;;;-1:-1:-1;;;1943:113:21;;;;;;;:::i;:::-;2814:16:::1;:36:::0;;;2874:53:::1;::::0;8312:25:58;;;2897:10:21::1;::::0;2874:53:::1;::::0;8300:2:58;8285:18;2874:53:21::1;8166:177:58::0;3572:160:21;3636:7;3654:18;3686:4;;3693;3686:11;;;;:::i;:::-;3675:23;;:7;:23;:::i;:::-;3654:44;3572:160;-1:-1:-1;;;3572:160:21:o;3328:238::-;3391:7;3422:4;;3429;3422:11;;;;:::i;:::-;3412:7;:21;3409:151;;;-1:-1:-1;3455:1:21;;3328:238;-1:-1:-1;3328:238:21:o;3409:151::-;3485:17;3515:4;;3505:7;:14;;;;:::i;3853:1094::-;1761:13;;:39;;-1:-1:-1;;;1761:39:21;;3910:10;1761:39;;;1531:51:58;;;3910:10:21;-1:-1:-1;;;;;1761:13:21;;:29;;1504:18:58;;1761:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1760:40;1739:129;;;;-1:-1:-1;;;1739:129:21;;5437:2:58;1739:129:21;;;5419:21:58;5476:2;5456:18;;;5449:30;5515:34;5495:18;;;5488:62;-1:-1:-1;;;5566:18:58;;;5559:40;5616:19;;1739:129:21;5235:406:58;1739:129:21;2261:21:1::1;:19;:21::i;:::-;3960::21::2;3984:27;4001:9;3984:16;:27::i;:::-;4048:17;::::0;:42:::2;::::0;-1:-1:-1;;;4048:42:21;;4084:4:::2;4048:42;::::0;::::2;1531:51:58::0;3960::21;;-1:-1:-1;4022:23:21::2;::::0;-1:-1:-1;;;;;4048:17:21;;::::2;::::0;:27:::2;::::0;1504:18:58;;4048:42:21::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4022:68;;4100:18;4121:27;4134:13;4121:12;:27::i;:::-;4167:6;::::0;4100:48;;-1:-1:-1;4167:6:21::2;;4159:32;;;::::0;-1:-1:-1;;;4159:32:21;;5096:2:58;4159:32:21::2;::::0;::::2;5078:21:58::0;5135:2;5115:18;;;5108:30;-1:-1:-1;;;5154:18:58;;;5147:42;5206:18;;4159:32:21::2;4894:336:58::0;4159:32:21::2;4222:4;::::0;:11:::2;::::0;4229:4:::2;4222:11;:::i;:::-;4209:9;:24;;4201:71;;;::::0;-1:-1:-1;;;4201:71:21;;3581:2:58;4201:71:21::2;::::0;::::2;3563:21:58::0;3620:2;3600:18;;;3593:30;3659:34;3639:18;;;3632:62;-1:-1:-1;;;3710:18:58;;;3703:31;3751:19;;4201:71:21::2;3379:397:58::0;4201:71:21::2;4307:15;4290:13;:32;;4282:69;;;::::0;-1:-1:-1;;;4282:69:21;;8016:2:58;4282:69:21::2;::::0;::::2;7998:21:58::0;8055:2;8035:18;;;8028:30;8094:25;8074:18;;;8067:53;8137:18;;4282:69:21::2;7814:347:58::0;4282:69:21::2;4369:15:::0;;4361:62:::2;;;::::0;-1:-1:-1;;;4361:62:21;;4694:2:58;4361:62:21::2;::::0;::::2;4676:21:58::0;4733:2;4713:18;;;4706:30;4772:34;4752:18;;;4745:62;-1:-1:-1;;;4823:18:58;;;4816:31;4864:19;;4361:62:21::2;4492:397:58::0;4361:62:21::2;4460:16;;4441;;:35;4433:66;;;::::0;-1:-1:-1;;;4433:66:21;;3235:2:58;4433:66:21::2;::::0;::::2;3217:21:58::0;3274:2;3254:18;;;3247:30;-1:-1:-1;;;3293:18:58;;;3286:47;3350:18;;4433:66:21::2;3033:341:58::0;4433:66:21::2;4553:16;;4536:13;4517:16;;:32;;;;:::i;:::-;:52;;4509:102;;;::::0;-1:-1:-1;;;4509:102:21;;6898:2:58;4509:102:21::2;::::0;::::2;6880:21:58::0;6937:2;6917:18;;;6910:30;6976:34;6956:18;;;6949:62;-1:-1:-1;;;7027:18:58;;;7020:34;7071:19;;4509:102:21::2;6696:400:58::0;4509:102:21::2;4642:13;4622:16;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4665:17:21::2;::::0;:53:::2;::::0;-1:-1:-1;;;4665:53:21;;4692:10:::2;4665:53;::::0;::::2;1999:51:58::0;2066:18;;;2059:34;;;-1:-1:-1;;;;;4665:17:21;;::::2;::::0;:26:::2;::::0;1972:18:58;;4665:53:21::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4733:65:21::2;::::0;;4773:9:::2;8522:25:58::0;;8578:2;8563:18;;8556:34;;;4761:10:21::2;::::0;4733:65:::2;::::0;8495:18:58;4733:65:21::2;;;;;;;4831:16;;4811;;:36;4808:133;;4863:6;:14:::0;;-1:-1:-1;;4863:14:21::2;::::0;;4896:34:::2;::::0;-1:-1:-1;2523:41:58;;4917:4:21::2;::::0;4896:34:::2;::::0;2511:2:58;2496:18;4896:34:21::2;;;;;;;4808:133;3950:997;;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3853:1094:21::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:1;;7303:2:58;2460:63:1;;;7285:21:58;7342:2;7322:18;;;7315:30;7381:33;7361:18;;;7354:61;7432:18;;2460:63:1;7101:355:58;2460:63:1;1759:1;2598:7;:18;2336:287::o;3738:109:21:-;3800:7;3826:14;3836:4;3826:7;:14;:::i;:::-;3819:21;3738:109;-1:-1:-1;;3738:109:21:o;14:286:58:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:58;;210:42;;200:70;;266:1;263;256:12;305:241;361:6;414:2;402:9;393:7;389:23;385:32;382:52;;;430:1;427;420:12;382:52;469:9;456:23;488:28;510:5;488:28;:::i;551:245::-;618:6;671:2;659:9;650:7;646:23;642:32;639:52;;;687:1;684;677:12;639:52;719:9;713:16;738:28;760:5;738:28;:::i;801:180::-;860:6;913:2;901:9;892:7;888:23;884:32;881:52;;;929:1;926;919:12;881:52;-1:-1:-1;952:23:58;;801:180;-1:-1:-1;801:180:58:o;986:184::-;1056:6;1109:2;1097:9;1088:7;1084:23;1080:32;1077:52;;;1125:1;1122;1115:12;1077:52;-1:-1:-1;1148:16:58;;986:184;-1:-1:-1;986:184:58:o;3781:348::-;3983:2;3965:21;;;4022:2;4002:18;;;3995:30;4061:26;4056:2;4041:18;;4034:54;4120:2;4105:18;;3781:348::o;4134:353::-;4336:2;4318:21;;;4375:2;4355:18;;;4348:30;4414:31;4409:2;4394:18;;4387:59;4478:2;4463:18;;4134:353::o;5646:346::-;5848:2;5830:21;;;5887:2;5867:18;;;5860:30;-1:-1:-1;;;5921:2:58;5906:18;;5899:52;5983:2;5968:18;;5646:346::o;8601:128::-;8641:3;8672:1;8668:6;8665:1;8662:13;8659:39;;;8678:18;;:::i;:::-;-1:-1:-1;8714:9:58;;8601:128::o;8734:120::-;8774:1;8800;8790:35;;8805:18;;:::i;:::-;-1:-1:-1;8839:9:58;;8734:120::o;8859:168::-;8899:7;8965:1;8961;8957:6;8953:14;8950:1;8947:21;8942:1;8935:9;8928:17;8924:45;8921:71;;;8972:18;;:::i;:::-;-1:-1:-1;9012:9:58;;8859:168::o;9032:112::-;9064:1;9090;9080:35;;9095:18;;:::i;:::-;-1:-1:-1;9129:9:58;;9032:112::o;9149:127::-;9210:10;9205:3;9201:20;9198:1;9191:31;9241:4;9238:1;9231:15;9265:4;9262:1;9255:15;9281:127;9342:10;9337:3;9333:20;9330:1;9323:31;9373:4;9370:1;9363:15;9397:4;9394:1;9387:15;9413:118;9499:5;9492:13;9485:21;9478:5;9475:32;9465:60;;9521:1;9518;9511:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport { IERC20, SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/ICFNAccessControl.sol\";\n\ncontract CFNSwap is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public erc20TokenManager;\n    ICFNAccessControl public accessControl;\n    address payable public receiveWallet;\n\n    uint256 public maxCFNSwapAmount = 1000000 * 1e18;\n    uint256 public totalSwapBalance = 0;\n    uint256 public rate = 100;\n    bool public isSale = true;\n\n    event UpdateReceiveWallet(address indexed wallet);\n    event UpdateAccessControl(address indexed wallet);\n    event UpdateErc20TokenManager(address indexed wallet);\n    event UpdateMaxCFNSwapAmount(address indexed wallet, uint256 _maxCFNSwapAmount);\n    event UpdateRate(address indexed wallet, uint256 _rate);\n    event UpdateIsSale(address indexed wallet, bool _rate);\n    event SwapExactGMMTForExactTokens(address indexed _account, uint256 _gmmtAmount, uint256 _cfnAmount);\n    event WithdrawCoin(address indexed wallet, uint256 amount);\n    event WithdrawToken(address indexed wallet, uint256 amount);\n\n    constructor(\n        address _accessControl,\n        address _cfnContract,\n        address _receiveWallet\n    ){\n        require(_cfnContract != address(0), \"Invalid ERC20 address\");\n        require(_accessControl != address(0), \"Invalid accessControl address\");\n        erc20TokenManager = IERC20(_cfnContract);\n        accessControl = ICFNAccessControl(_accessControl);\n        receiveWallet = payable(_receiveWallet);\n    }\n\n    modifier isBlackListWallet(address _address) {\n        require(\n            !accessControl.blackListWallet(_address),\n            \"Transaction denied: address is blacklisted\"\n        );\n        _;\n    }\n\n    modifier isWhiteListControl(address _ca) {\n        require(\n            accessControl.whiteListControlAddress(_ca),\n            \"Unverified owner address\"\n        );\n        _;\n    }\n\n    function setErc20TokenManager(\n        address _ca\n    ) public isWhiteListControl(msg.sender) {\n        erc20TokenManager = IERC20(_ca);\n        \n        emit UpdateErc20TokenManager(_ca);\n    }\n\n    function setAccessControl(\n        address _ca\n    ) public isWhiteListControl(msg.sender) {\n        accessControl = ICFNAccessControl(_ca);\n        \n        emit UpdateAccessControl(_ca);\n    }\n\n    function setReceiveWallet(\n        address _receiveWallet\n    ) public isWhiteListControl(msg.sender) {\n        receiveWallet = payable(_receiveWallet);\n\n        emit UpdateReceiveWallet(_receiveWallet);\n    }\n\n    function setMaxCFNSwapAmount(\n        uint256 _maxCFNSwapAmount\n    ) public isWhiteListControl(msg.sender) {\n        maxCFNSwapAmount = _maxCFNSwapAmount;\n        \n        emit UpdateMaxCFNSwapAmount(msg.sender, _maxCFNSwapAmount);\n    }\n\n    // decimal 생각안해도됨.\n    function setRate(\n        uint256 _rate\n    ) public isWhiteListControl(msg.sender) {\n        rate = _rate;\n        \n        emit UpdateRate(msg.sender, _rate);\n    }\n\n    function setIsSale(\n        bool _isSale\n    ) public isWhiteListControl(msg.sender) {\n        isSale = _isSale;\n        \n        emit UpdateIsSale(msg.sender, _isSale);\n    }\n\n    function getSwapCFNAmount(uint256 _amount) public view returns(uint256){\n        if(_amount < rate * 1e18){\n            return 0;\n        }else{\n            uint256 cfnAmount = _amount / rate;\n            return cfnAmount;\n        }\n    }\n\n    function getSwapCoinAmount(uint256 _amount) public view returns(uint256){\n        uint256 coinAmount = _amount * (rate * 1e18);\n        return coinAmount;\n    }\n\n    function checkDecimal(uint256 _amount) internal pure returns (uint256) {\n        return _amount % 1e18;\n    }\n\n    function swapExactGMMTForExactTokens() isBlackListWallet(msg.sender) public nonReentrant payable {\n        uint256 receiveAmount = getSwapCFNAmount(msg.value);\n\n        uint256 contractBalance = erc20TokenManager.balanceOf(address(this));\n        uint256 getDecimal = checkDecimal(receiveAmount);\n\n        require(isSale , \"Do not sell.\");\n        require(msg.value >= rate * 1e18 , \"It must be greater than the rate.\");\n        require(receiveAmount <= contractBalance , \"Not enough CFN balance.\");\n        require(getDecimal <= 0 , \"The existence of a decimal point.\");\n        require(totalSwapBalance < maxCFNSwapAmount , \"End of the event.\");\n        require(totalSwapBalance + receiveAmount <= maxCFNSwapAmount , \"Total amount paid has been exceeded.\");\n\n        totalSwapBalance += receiveAmount;\n        erc20TokenManager.transfer(msg.sender, receiveAmount);\n        emit SwapExactGMMTForExactTokens(msg.sender, msg.value, receiveAmount);\n        if(totalSwapBalance >= maxCFNSwapAmount ){\n            isSale = false;\n            emit UpdateIsSale(address(this), false);\n        }\n    }\n\n   // 토큰 전체 출금\n    function withdrawTokenAll() public isWhiteListControl(msg.sender) {\n        require(receiveWallet != address(0), \"Cannot be null address\");\n\n        uint256 tokenAmount = erc20TokenManager.balanceOf(address(this));\n        require(tokenAmount > 0, \"Amount must be greater than 0\");\n        require(tokenAmount > 0, \"Not enough token balance.\");\n\n        erc20TokenManager.transfer(receiveWallet, tokenAmount);\n\n        emit WithdrawToken(receiveWallet, tokenAmount);\n    }\n\n    // 토큰 원하는 수량 출금\n    function withdrawToken(\n        uint256 _amount\n    ) public isWhiteListControl(msg.sender) {\n        require(receiveWallet != address(0), \"Cannot be null address\");\n        require(_amount > 0, \"Amount must be greater than 0\");\n\n        uint256 tokenAmount = erc20TokenManager.balanceOf(address(this));\n\n        require(tokenAmount >= _amount, \"Not enough token balance.\");\n\n        erc20TokenManager.transfer(receiveWallet, _amount);\n\n        emit WithdrawToken(receiveWallet, _amount);\n    }\n\n    // 코인 전체 출금\n    function withdrawCoinAll() public isWhiteListControl(msg.sender) {\n        require(receiveWallet != address(0), \"Cannot be null address\");\n\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"Not enough coin balance.\");\n\n        (bool success, ) = receiveWallet.call{value: balance}(\"\");\n        require(success, \"Transfer failed.\");\n\n        emit WithdrawCoin(receiveWallet, balance);\n    }\n\n    // 코인 원하는 수량 출금\n    function withdrawCoin(\n        uint256 _amount\n    ) public isWhiteListControl(msg.sender) {\n        require(receiveWallet != address(0), \"Cannot be null address\");\n        require(_amount > 0, \"Amount must be greater than 0\");\n\n        uint256 balance = address(this).balance;\n        require(balance >= _amount, \"Not enough coin balance.\");\n\n        (bool success, ) = receiveWallet.call{value: _amount}(\"\");\n        require(success, \"Transfer failed.\");\n\n        emit WithdrawCoin(receiveWallet, _amount);\n    }\n\n}",
  "sourcePath": "/Users/minki/Desktop/Codberg/cock-fight-network-contrats/contracts/cock-fight/CFNSwap.sol",
  "ast": {
    "absolutePath": "project:/contracts/cock-fight/CFNSwap.sol",
    "exportedSymbols": {
      "CFNSwap": [
        5507
      ],
      "ICFNAccessControl": [
        15612
      ],
      "IERC20": [
        1656
      ],
      "ReentrancyGuard": [
        177
      ],
      "SafeERC20": [
        2068
      ]
    },
    "id": 5508,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4828,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4830,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5508,
        "sourceUnit": 178,
        "src": "57:87:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4829,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:15:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4833,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5508,
        "sourceUnit": 2069,
        "src": "145:92:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4831,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4832,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "162:9:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/cock-fight/interfaces/ICFNAccessControl.sol",
        "file": "./interfaces/ICFNAccessControl.sol",
        "id": 4834,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5508,
        "sourceUnit": 15613,
        "src": "238:44:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4835,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 177,
              "src": "304:15:21"
            },
            "id": 4836,
            "nodeType": "InheritanceSpecifier",
            "src": "304:15:21"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5507,
        "linearizedBaseContracts": [
          5507,
          177
        ],
        "name": "CFNSwap",
        "nameLocation": "293:7:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4840,
            "libraryName": {
              "id": 4837,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2068,
              "src": "332:9:21"
            },
            "nodeType": "UsingForDirective",
            "src": "326:27:21",
            "typeName": {
              "id": 4839,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4838,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1656,
                "src": "346:6:21"
              },
              "referencedDeclaration": 1656,
              "src": "346:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1656",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "688d679d",
            "id": 4843,
            "mutability": "mutable",
            "name": "erc20TokenManager",
            "nameLocation": "373:17:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "359:31:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1656",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 4842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4841,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1656,
                "src": "359:6:21"
              },
              "referencedDeclaration": 1656,
              "src": "359:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1656",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "13007d55",
            "id": 4846,
            "mutability": "mutable",
            "name": "accessControl",
            "nameLocation": "421:13:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "396:38:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
              "typeString": "contract ICFNAccessControl"
            },
            "typeName": {
              "id": 4845,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4844,
                "name": "ICFNAccessControl",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15612,
                "src": "396:17:21"
              },
              "referencedDeclaration": 15612,
              "src": "396:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                "typeString": "contract ICFNAccessControl"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d313295",
            "id": 4848,
            "mutability": "mutable",
            "name": "receiveWallet",
            "nameLocation": "463:13:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "440:36:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4847,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "440:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b9ec4d11",
            "id": 4853,
            "mutability": "mutable",
            "name": "maxCFNSwapAmount",
            "nameLocation": "498:16:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "483:48:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4849,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000"
              },
              "id": 4852,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030303030",
                "id": 4850,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "517:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "value": "1000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 4851,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "527:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "517:14:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fe35658",
            "id": 4856,
            "mutability": "mutable",
            "name": "totalSwapBalance",
            "nameLocation": "552:16:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "537:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4854,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4855,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "571:1:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c4e722e",
            "id": 4859,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "593:4:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "578:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4857,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 4858,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "600:3:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8c1c186",
            "id": 4862,
            "mutability": "mutable",
            "name": "isSale",
            "nameLocation": "621:6:21",
            "nodeType": "VariableDeclaration",
            "scope": 5507,
            "src": "609:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4860,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "609:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 4861,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "630:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4866,
            "name": "UpdateReceiveWallet",
            "nameLocation": "647:19:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4864,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "683:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4866,
                  "src": "667:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "666:24:21"
            },
            "src": "641:50:21"
          },
          {
            "anonymous": false,
            "id": 4870,
            "name": "UpdateAccessControl",
            "nameLocation": "702:19:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4868,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "738:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4870,
                  "src": "722:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:24:21"
            },
            "src": "696:50:21"
          },
          {
            "anonymous": false,
            "id": 4874,
            "name": "UpdateErc20TokenManager",
            "nameLocation": "757:23:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4872,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "797:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "781:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "780:24:21"
            },
            "src": "751:54:21"
          },
          {
            "anonymous": false,
            "id": 4880,
            "name": "UpdateMaxCFNSwapAmount",
            "nameLocation": "816:22:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4876,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "855:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "839:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_maxCFNSwapAmount",
                  "nameLocation": "871:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "863:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:51:21"
            },
            "src": "810:80:21"
          },
          {
            "anonymous": false,
            "id": 4886,
            "name": "UpdateRate",
            "nameLocation": "901:10:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4882,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "928:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4886,
                  "src": "912:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4884,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "944:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4886,
                  "src": "936:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "911:39:21"
            },
            "src": "895:56:21"
          },
          {
            "anonymous": false,
            "id": 4892,
            "name": "UpdateIsSale",
            "nameLocation": "962:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4888,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "991:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "975:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4890,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "1004:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "999:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:36:21"
            },
            "src": "956:55:21"
          },
          {
            "anonymous": false,
            "id": 4900,
            "name": "SwapExactGMMTForExactTokens",
            "nameLocation": "1022:27:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4894,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1066:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4900,
                  "src": "1050:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_gmmtAmount",
                  "nameLocation": "1084:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4900,
                  "src": "1076:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cfnAmount",
                  "nameLocation": "1105:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4900,
                  "src": "1097:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:67:21"
            },
            "src": "1016:101:21"
          },
          {
            "anonymous": false,
            "id": 4906,
            "name": "WithdrawCoin",
            "nameLocation": "1128:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4902,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "1157:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "1141:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4904,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1173:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "1165:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1140:40:21"
            },
            "src": "1122:59:21"
          },
          {
            "anonymous": false,
            "id": 4912,
            "name": "WithdrawToken",
            "nameLocation": "1192:13:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4908,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "1222:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4912,
                  "src": "1206:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4910,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1238:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4912,
                  "src": "1230:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:40:21"
            },
            "src": "1186:60:21"
          },
          {
            "body": {
              "id": 4960,
              "nodeType": "Block",
              "src": "1363:315:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4922,
                          "name": "_cfnContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4916,
                          "src": "1381:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1405:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1397:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1397:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1397:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1381:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642045524332302061646472657373",
                        "id": 4928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1409:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84bad1164a8d38f7d6b4093aef22fb38a3b7feb0edf0cf8819754404e6506e0e",
                          "typeString": "literal_string \"Invalid ERC20 address\""
                        },
                        "value": "Invalid ERC20 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84bad1164a8d38f7d6b4093aef22fb38a3b7feb0edf0cf8819754404e6506e0e",
                          "typeString": "literal_string \"Invalid ERC20 address\""
                        }
                      ],
                      "id": 4921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1373:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:60:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4930,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:60:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4932,
                          "name": "_accessControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4914,
                          "src": "1451:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1477:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1469:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4933,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1469:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1469:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1451:28:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616363657373436f6e74726f6c2061646472657373",
                        "id": 4938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1481:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ddc1fe068fa42f51d4b8f6f29d96c8adb07858bc62c03605d5663ab1a45eb57",
                          "typeString": "literal_string \"Invalid accessControl address\""
                        },
                        "value": "Invalid accessControl address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ddc1fe068fa42f51d4b8f6f29d96c8adb07858bc62c03605d5663ab1a45eb57",
                          "typeString": "literal_string \"Invalid accessControl address\""
                        }
                      ],
                      "id": 4931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1443:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:70:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4940,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:70:21"
                },
                {
                  "expression": {
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4941,
                      "name": "erc20TokenManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "1523:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1656",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4943,
                          "name": "_cfnContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4916,
                          "src": "1550:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4942,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "1543:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1656_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1543:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1656",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1523:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1656",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:40:21"
                },
                {
                  "expression": {
                    "id": 4951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4947,
                      "name": "accessControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "1573:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                        "typeString": "contract ICFNAccessControl"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4949,
                          "name": "_accessControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4914,
                          "src": "1607:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4948,
                        "name": "ICFNAccessControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15612,
                        "src": "1589:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICFNAccessControl_$15612_$",
                          "typeString": "type(contract ICFNAccessControl)"
                        }
                      },
                      "id": 4950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1589:33:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                        "typeString": "contract ICFNAccessControl"
                      }
                    },
                    "src": "1573:49:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                      "typeString": "contract ICFNAccessControl"
                    }
                  },
                  "id": 4952,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:49:21"
                },
                {
                  "expression": {
                    "id": 4958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4953,
                      "name": "receiveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4848,
                      "src": "1632:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4956,
                          "name": "_receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4918,
                          "src": "1656:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1648:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 4954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1648:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1648:23:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1632:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4959,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:39:21"
                }
              ]
            },
            "id": 4961,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4914,
                  "mutability": "mutable",
                  "name": "_accessControl",
                  "nameLocation": "1281:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "1273:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4916,
                  "mutability": "mutable",
                  "name": "_cfnContract",
                  "nameLocation": "1313:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "1305:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4918,
                  "mutability": "mutable",
                  "name": "_receiveWallet",
                  "nameLocation": "1343:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "1335:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1263:100:21"
            },
            "returnParameters": {
              "id": 4920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1363:0:21"
            },
            "scope": 5507,
            "src": "1252:426:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4975,
              "nodeType": "Block",
              "src": "1729:157:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1760:40:21",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4968,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4963,
                              "src": "1791:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4966,
                              "name": "accessControl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4846,
                              "src": "1761:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                                "typeString": "contract ICFNAccessControl"
                              }
                            },
                            "id": 4967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blackListWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15541,
                            "src": "1761:29:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 4969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:39:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e2064656e6965643a206164647265737320697320626c61636b6c6973746564",
                        "id": 4971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1814:44:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b94ab0de37864b3ffa49c61672a4f1bb44c1e173c1248148068b7e70de678a9",
                          "typeString": "literal_string \"Transaction denied: address is blacklisted\""
                        },
                        "value": "Transaction denied: address is blacklisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b94ab0de37864b3ffa49c61672a4f1bb44c1e173c1248148068b7e70de678a9",
                          "typeString": "literal_string \"Transaction denied: address is blacklisted\""
                        }
                      ],
                      "id": 4965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1739:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:129:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4973,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:129:21"
                },
                {
                  "id": 4974,
                  "nodeType": "PlaceholderStatement",
                  "src": "1878:1:21"
                }
              ]
            },
            "id": 4976,
            "name": "isBlackListWallet",
            "nameLocation": "1693:17:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4963,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1719:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4976,
                  "src": "1711:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1710:18:21"
            },
            "src": "1684:202:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4989,
              "nodeType": "Block",
              "src": "1933:141:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4983,
                            "name": "_ca",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4978,
                            "src": "2002:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4981,
                            "name": "accessControl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4846,
                            "src": "1964:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                              "typeString": "contract ICFNAccessControl"
                            }
                          },
                          "id": 4982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "whiteListControlAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15548,
                          "src": "1964:37:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1964:42:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e7665726966696564206f776e65722061646472657373",
                        "id": 4985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2020:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef06a6f16a63052cc6f8876d7c397c2187ff365ba8310c173ff223c4d78273b",
                          "typeString": "literal_string \"Unverified owner address\""
                        },
                        "value": "Unverified owner address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ef06a6f16a63052cc6f8876d7c397c2187ff365ba8310c173ff223c4d78273b",
                          "typeString": "literal_string \"Unverified owner address\""
                        }
                      ],
                      "id": 4980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1943:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:113:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4987,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:113:21"
                },
                {
                  "id": 4988,
                  "nodeType": "PlaceholderStatement",
                  "src": "2066:1:21"
                }
              ]
            },
            "id": 4990,
            "name": "isWhiteListControl",
            "nameLocation": "1901:18:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4978,
                  "mutability": "mutable",
                  "name": "_ca",
                  "nameLocation": "1928:3:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4990,
                  "src": "1920:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:13:21"
            },
            "src": "1892:182:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5009,
              "nodeType": "Block",
              "src": "2175:100:21",
              "statements": [
                {
                  "expression": {
                    "id": 5003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4999,
                      "name": "erc20TokenManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "2185:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1656",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5001,
                          "name": "_ca",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4992,
                          "src": "2212:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5000,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "2205:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1656_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 5002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2205:11:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1656",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2185:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1656",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5004,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:31:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5006,
                        "name": "_ca",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4992,
                        "src": "2264:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5005,
                      "name": "UpdateErc20TokenManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4874,
                      "src": "2240:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5008,
                  "nodeType": "EmitStatement",
                  "src": "2235:33:21"
                }
              ]
            },
            "functionSelector": "9127e8a6",
            "id": 5010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 4995,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2163:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 4996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2163:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4997,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4994,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "2144:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2144:30:21"
              }
            ],
            "name": "setErc20TokenManager",
            "nameLocation": "2089:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4992,
                  "mutability": "mutable",
                  "name": "_ca",
                  "nameLocation": "2127:3:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5010,
                  "src": "2119:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:27:21"
            },
            "returnParameters": {
              "id": 4998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:21"
            },
            "scope": 5507,
            "src": "2080:195:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5029,
              "nodeType": "Block",
              "src": "2372:103:21",
              "statements": [
                {
                  "expression": {
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5019,
                      "name": "accessControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "2382:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                        "typeString": "contract ICFNAccessControl"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5021,
                          "name": "_ca",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5012,
                          "src": "2416:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5020,
                        "name": "ICFNAccessControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15612,
                        "src": "2398:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICFNAccessControl_$15612_$",
                          "typeString": "type(contract ICFNAccessControl)"
                        }
                      },
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2398:22:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                        "typeString": "contract ICFNAccessControl"
                      }
                    },
                    "src": "2382:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICFNAccessControl_$15612",
                      "typeString": "contract ICFNAccessControl"
                    }
                  },
                  "id": 5024,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:38:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5026,
                        "name": "_ca",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5012,
                        "src": "2464:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5025,
                      "name": "UpdateAccessControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4870,
                      "src": "2444:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:24:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5028,
                  "nodeType": "EmitStatement",
                  "src": "2439:29:21"
                }
              ]
            },
            "functionSelector": "19129e5a",
            "id": 5030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5015,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2360:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2360:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5017,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5014,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "2341:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2341:30:21"
              }
            ],
            "name": "setAccessControl",
            "nameLocation": "2290:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5012,
                  "mutability": "mutable",
                  "name": "_ca",
                  "nameLocation": "2324:3:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5030,
                  "src": "2316:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:27:21"
            },
            "returnParameters": {
              "id": 5018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2372:0:21"
            },
            "scope": 5507,
            "src": "2281:194:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5050,
              "nodeType": "Block",
              "src": "2583:107:21",
              "statements": [
                {
                  "expression": {
                    "id": 5044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5039,
                      "name": "receiveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4848,
                      "src": "2593:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5042,
                          "name": "_receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5032,
                          "src": "2617:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2609:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 5040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2609:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2609:23:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2593:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 5045,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:39:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5047,
                        "name": "_receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5032,
                        "src": "2668:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5046,
                      "name": "UpdateReceiveWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4866,
                      "src": "2648:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5049,
                  "nodeType": "EmitStatement",
                  "src": "2643:40:21"
                }
              ]
            },
            "functionSelector": "1267a6ab",
            "id": 5051,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5035,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2571:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2571:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5037,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5034,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "2552:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2552:30:21"
              }
            ],
            "name": "setReceiveWallet",
            "nameLocation": "2490:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5032,
                  "mutability": "mutable",
                  "name": "_receiveWallet",
                  "nameLocation": "2524:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5051,
                  "src": "2516:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2506:38:21"
            },
            "returnParameters": {
              "id": 5038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2583:0:21"
            },
            "scope": 5507,
            "src": "2481:209:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5070,
              "nodeType": "Block",
              "src": "2804:130:21",
              "statements": [
                {
                  "expression": {
                    "id": 5062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5060,
                      "name": "maxCFNSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4853,
                      "src": "2814:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5061,
                      "name": "_maxCFNSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5053,
                      "src": "2833:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2814:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5063,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:36:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5065,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2897:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2897:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5067,
                        "name": "_maxCFNSwapAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5053,
                        "src": "2909:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5064,
                      "name": "UpdateMaxCFNSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2874:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:53:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5069,
                  "nodeType": "EmitStatement",
                  "src": "2869:58:21"
                }
              ]
            },
            "functionSelector": "d300bb77",
            "id": 5071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5056,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2792:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2792:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5058,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5055,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "2773:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2773:30:21"
              }
            ],
            "name": "setMaxCFNSwapAmount",
            "nameLocation": "2705:19:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5053,
                  "mutability": "mutable",
                  "name": "_maxCFNSwapAmount",
                  "nameLocation": "2742:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "2734:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2724:41:21"
            },
            "returnParameters": {
              "id": 5059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2804:0:21"
            },
            "scope": 5507,
            "src": "2696:238:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5090,
              "nodeType": "Block",
              "src": "3059:82:21",
              "statements": [
                {
                  "expression": {
                    "id": 5082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5080,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4859,
                      "src": "3069:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5081,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5073,
                      "src": "3076:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3069:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5083,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:12:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5085,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3116:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3116:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5087,
                        "name": "_rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "3128:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5084,
                      "name": "UpdateRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4886,
                      "src": "3105:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5089,
                  "nodeType": "EmitStatement",
                  "src": "3100:34:21"
                }
              ]
            },
            "functionSelector": "34fcf437",
            "id": 5091,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5076,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3047:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3047:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5075,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "3028:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "3028:30:21"
              }
            ],
            "name": "setRate",
            "nameLocation": "2984:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5073,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "3009:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5091,
                  "src": "3001:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:29:21"
            },
            "returnParameters": {
              "id": 5079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3059:0:21"
            },
            "scope": 5507,
            "src": "2975:166:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5110,
              "nodeType": "Block",
              "src": "3232:90:21",
              "statements": [
                {
                  "expression": {
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5100,
                      "name": "isSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4862,
                      "src": "3242:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5101,
                      "name": "_isSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5093,
                      "src": "3251:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3242:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:16:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3295:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3295:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5107,
                        "name": "_isSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5093,
                        "src": "3307:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5104,
                      "name": "UpdateIsSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4892,
                      "src": "3282:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 5108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5109,
                  "nodeType": "EmitStatement",
                  "src": "3277:38:21"
                }
              ]
            },
            "functionSelector": "039b2ed7",
            "id": 5111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5096,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3220:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3220:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5098,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5095,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "3201:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "3201:30:21"
              }
            ],
            "name": "setIsSale",
            "nameLocation": "3156:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5093,
                  "mutability": "mutable",
                  "name": "_isSale",
                  "nameLocation": "3180:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5111,
                  "src": "3175:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3165:28:21"
            },
            "returnParameters": {
              "id": 5099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:21"
            },
            "scope": 5507,
            "src": "3147:175:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5136,
              "nodeType": "Block",
              "src": "3399:167:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5118,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5113,
                      "src": "3412:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5119,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4859,
                        "src": "3422:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 5120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3429:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "3422:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3412:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5134,
                    "nodeType": "Block",
                    "src": "3471:89:21",
                    "statements": [
                      {
                        "assignments": [
                          5127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5127,
                            "mutability": "mutable",
                            "name": "cfnAmount",
                            "nameLocation": "3493:9:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 5134,
                            "src": "3485:17:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5126,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3485:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5131,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5128,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5113,
                            "src": "3505:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 5129,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4859,
                            "src": "3515:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3505:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3485:34:21"
                      },
                      {
                        "expression": {
                          "id": 5132,
                          "name": "cfnAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5127,
                          "src": "3540:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5117,
                        "id": 5133,
                        "nodeType": "Return",
                        "src": "3533:16:21"
                      }
                    ]
                  },
                  "id": 5135,
                  "nodeType": "IfStatement",
                  "src": "3409:151:21",
                  "trueBody": {
                    "id": 5125,
                    "nodeType": "Block",
                    "src": "3434:33:21",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 5123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3455:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 5117,
                        "id": 5124,
                        "nodeType": "Return",
                        "src": "3448:8:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ec756d35",
            "id": 5137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapCFNAmount",
            "nameLocation": "3337:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5113,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3362:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5137,
                  "src": "3354:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3353:17:21"
            },
            "returnParameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5137,
                  "src": "3391:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3391:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3390:9:21"
            },
            "scope": 5507,
            "src": "3328:238:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5155,
              "nodeType": "Block",
              "src": "3644:88:21",
              "statements": [
                {
                  "assignments": [
                    5145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5145,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "3662:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5155,
                      "src": "3654:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3654:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5152,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5146,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5139,
                      "src": "3675:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5147,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4859,
                            "src": "3686:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 5148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3693:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "3686:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5150,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3685:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3675:23:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3654:44:21"
                },
                {
                  "expression": {
                    "id": 5153,
                    "name": "coinAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5145,
                    "src": "3715:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5143,
                  "id": 5154,
                  "nodeType": "Return",
                  "src": "3708:17:21"
                }
              ]
            },
            "functionSelector": "e051ed47",
            "id": 5156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapCoinAmount",
            "nameLocation": "3581:17:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5139,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3607:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5156,
                  "src": "3599:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3598:17:21"
            },
            "returnParameters": {
              "id": 5143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5156,
                  "src": "3636:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3635:9:21"
            },
            "scope": 5507,
            "src": "3572:160:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5167,
              "nodeType": "Block",
              "src": "3809:38:21",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5163,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5158,
                      "src": "3826:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 5164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3836:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "3826:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5162,
                  "id": 5166,
                  "nodeType": "Return",
                  "src": "3819:21:21"
                }
              ]
            },
            "id": 5168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkDecimal",
            "nameLocation": "3747:12:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5158,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3768:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5168,
                  "src": "3760:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:17:21"
            },
            "returnParameters": {
              "id": 5162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5168,
                  "src": "3800:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3800:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3799:9:21"
            },
            "scope": 5507,
            "src": "3738:109:21",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5282,
              "nodeType": "Block",
              "src": "3950:997:21",
              "statements": [
                {
                  "assignments": [
                    5178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5178,
                      "mutability": "mutable",
                      "name": "receiveAmount",
                      "nameLocation": "3968:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5282,
                      "src": "3960:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3960:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5183,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4001:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4001:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5179,
                      "name": "getSwapCFNAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5137,
                      "src": "3984:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 5182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3984:27:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3960:51:21"
                },
                {
                  "assignments": [
                    5185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5185,
                      "mutability": "mutable",
                      "name": "contractBalance",
                      "nameLocation": "4030:15:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5282,
                      "src": "4022:23:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4022:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5193,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4084:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          ],
                          "id": 5189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4076:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4076:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4076:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5186,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "4048:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "4048:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4022:68:21"
                },
                {
                  "assignments": [
                    5195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5195,
                      "mutability": "mutable",
                      "name": "getDecimal",
                      "nameLocation": "4108:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5282,
                      "src": "4100:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4100:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5199,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5197,
                        "name": "receiveAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5178,
                        "src": "4134:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5196,
                      "name": "checkDecimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5168,
                      "src": "4121:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:27:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4100:48:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5201,
                        "name": "isSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4862,
                        "src": "4167:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f206e6f742073656c6c2e",
                        "id": 5202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4176:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb71dfa953598fa4c2c6f71cc8af81d311ca33e1307e1cb595fed17238a8aea",
                          "typeString": "literal_string \"Do not sell.\""
                        },
                        "value": "Do not sell."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb71dfa953598fa4c2c6f71cc8af81d311ca33e1307e1cb595fed17238a8aea",
                          "typeString": "literal_string \"Do not sell.\""
                        }
                      ],
                      "id": 5200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4159:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:32:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5204,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5206,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4209:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4209:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5208,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4859,
                            "src": "4222:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 5209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4229:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4222:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4209:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4974206d7573742062652067726561746572207468616e2074686520726174652e",
                        "id": 5212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4236:35:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e016efbaeb07f93e8b9d76d70c22464658e4bc2f7bca6a375f73ffbd038ea1c",
                          "typeString": "literal_string \"It must be greater than the rate.\""
                        },
                        "value": "It must be greater than the rate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e016efbaeb07f93e8b9d76d70c22464658e4bc2f7bca6a375f73ffbd038ea1c",
                          "typeString": "literal_string \"It must be greater than the rate.\""
                        }
                      ],
                      "id": 5205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4201:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5214,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:71:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5216,
                          "name": "receiveAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5178,
                          "src": "4290:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5217,
                          "name": "contractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5185,
                          "src": "4307:15:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4290:32:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682043464e2062616c616e63652e",
                        "id": 5219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fec225fc320724552920e58cce24d825194eb451d8cf073b30512b31eaf69600",
                          "typeString": "literal_string \"Not enough CFN balance.\""
                        },
                        "value": "Not enough CFN balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fec225fc320724552920e58cce24d825194eb451d8cf073b30512b31eaf69600",
                          "typeString": "literal_string \"Not enough CFN balance.\""
                        }
                      ],
                      "id": 5215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4282:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4282:69:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5221,
                  "nodeType": "ExpressionStatement",
                  "src": "4282:69:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5223,
                          "name": "getDecimal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5195,
                          "src": "4369:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4383:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4369:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206578697374656e6365206f66206120646563696d616c20706f696e742e",
                        "id": 5226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4387:35:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_475a2aa4197ee11b6ce990ea01deacbb7213dc568ce551d3792d155b0936f2d5",
                          "typeString": "literal_string \"The existence of a decimal point.\""
                        },
                        "value": "The existence of a decimal point."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_475a2aa4197ee11b6ce990ea01deacbb7213dc568ce551d3792d155b0936f2d5",
                          "typeString": "literal_string \"The existence of a decimal point.\""
                        }
                      ],
                      "id": 5222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4361:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4361:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5228,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5230,
                          "name": "totalSwapBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4856,
                          "src": "4441:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 5231,
                          "name": "maxCFNSwapAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4853,
                          "src": "4460:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4441:35:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456e64206f6620746865206576656e742e",
                        "id": 5233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4479:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01a749ec8717bf2008fb5876f09f8f2a8aa7677140f55f9a97854dce9ab6e0ac",
                          "typeString": "literal_string \"End of the event.\""
                        },
                        "value": "End of the event."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01a749ec8717bf2008fb5876f09f8f2a8aa7677140f55f9a97854dce9ab6e0ac",
                          "typeString": "literal_string \"End of the event.\""
                        }
                      ],
                      "id": 5229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4433:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:66:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5235,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:66:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5237,
                            "name": "totalSwapBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4856,
                            "src": "4517:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5238,
                            "name": "receiveAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5178,
                            "src": "4536:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4517:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5240,
                          "name": "maxCFNSwapAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4853,
                          "src": "4553:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4517:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f74616c20616d6f756e74207061696420686173206265656e2065786365656465642e",
                        "id": 5242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4572:38:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9cda22f231fc32de24af6ee076496883bf15cf7fc4b0055c6e336dcf6641d5e",
                          "typeString": "literal_string \"Total amount paid has been exceeded.\""
                        },
                        "value": "Total amount paid has been exceeded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9cda22f231fc32de24af6ee076496883bf15cf7fc4b0055c6e336dcf6641d5e",
                          "typeString": "literal_string \"Total amount paid has been exceeded.\""
                        }
                      ],
                      "id": 5236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4509:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4509:102:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5244,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:102:21"
                },
                {
                  "expression": {
                    "id": 5247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5245,
                      "name": "totalSwapBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4856,
                      "src": "4622:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5246,
                      "name": "receiveAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5178,
                      "src": "4642:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4622:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5248,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4692:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4692:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5254,
                        "name": "receiveAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5178,
                        "src": "4704:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5249,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "4665:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "4665:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4665:53:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "4665:53:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4761:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4761:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4773:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4773:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5262,
                        "name": "receiveAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5178,
                        "src": "4784:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5257,
                      "name": "SwapExactGMMTForExactTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4900,
                      "src": "4733:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4733:65:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5264,
                  "nodeType": "EmitStatement",
                  "src": "4728:70:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5265,
                      "name": "totalSwapBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4856,
                      "src": "4811:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 5266,
                      "name": "maxCFNSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4853,
                      "src": "4831:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4811:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5281,
                  "nodeType": "IfStatement",
                  "src": "4808:133:21",
                  "trueBody": {
                    "id": 5280,
                    "nodeType": "Block",
                    "src": "4849:92:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 5270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5268,
                            "name": "isSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4862,
                            "src": "4863:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 5269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4872:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4863:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5271,
                        "nodeType": "ExpressionStatement",
                        "src": "4863:14:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5275,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4917:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CFNSwap_$5507",
                                    "typeString": "contract CFNSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CFNSwap_$5507",
                                    "typeString": "contract CFNSwap"
                                  }
                                ],
                                "id": 5274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4909:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5273,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4909:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4909:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 5277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4924:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 5272,
                            "name": "UpdateIsSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4892,
                            "src": "4896:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 5278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4896:34:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5279,
                        "nodeType": "EmitStatement",
                        "src": "4891:39:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f3a0741e",
            "id": 5283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5171,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3910:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3910:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5170,
                  "name": "isBlackListWallet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4976,
                  "src": "3892:17:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "3892:29:21"
              },
              {
                "id": 5175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5174,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "3929:12:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "3929:12:21"
              }
            ],
            "name": "swapExactGMMTForExactTokens",
            "nameLocation": "3862:27:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3889:2:21"
            },
            "returnParameters": {
              "id": 5176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:0:21"
            },
            "scope": 5507,
            "src": "3853:1094:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5336,
              "nodeType": "Block",
              "src": "5046:406:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5291,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "5064:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5089:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5081:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5081:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5064:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265206e756c6c2061646472657373",
                        "id": 5297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5093:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        },
                        "value": "Cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        }
                      ],
                      "id": 5290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5056:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5056:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5299,
                  "nodeType": "ExpressionStatement",
                  "src": "5056:62:21"
                },
                {
                  "assignments": [
                    5301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5301,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "5137:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5336,
                      "src": "5129:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5129:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5309,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5306,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5187:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          ],
                          "id": 5305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5179:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5179:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5179:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5302,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "5151:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "5151:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5129:64:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5311,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5301,
                          "src": "5211:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5225:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5211:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 5314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5228:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 5310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5203:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5203:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5316,
                  "nodeType": "ExpressionStatement",
                  "src": "5203:57:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5318,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5301,
                          "src": "5278:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5292:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5278:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e2062616c616e63652e",
                        "id": 5321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5295:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730",
                          "typeString": "literal_string \"Not enough token balance.\""
                        },
                        "value": "Not enough token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730",
                          "typeString": "literal_string \"Not enough token balance.\""
                        }
                      ],
                      "id": 5317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5270:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:53:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5323,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:53:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5327,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "5361:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5328,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5301,
                        "src": "5376:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5324,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "5334:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "5334:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:54:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5330,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:54:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5332,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "5418:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5333,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5301,
                        "src": "5433:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5331,
                      "name": "WithdrawToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "5404:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5335,
                  "nodeType": "EmitStatement",
                  "src": "5399:46:21"
                }
              ]
            },
            "functionSelector": "7fc0254d",
            "id": 5337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5286,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5034:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5034:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5285,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "5015:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "5015:30:21"
              }
            ],
            "name": "withdrawTokenAll",
            "nameLocation": "4989:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5005:2:21"
            },
            "returnParameters": {
              "id": 5289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5046:0:21"
            },
            "scope": 5507,
            "src": "4980:472:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5392,
              "nodeType": "Block",
              "src": "5588:402:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5347,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "5606:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5631:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5623:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5348,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5623:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5606:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265206e756c6c2061646472657373",
                        "id": 5353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5635:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        },
                        "value": "Cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        }
                      ],
                      "id": 5346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5598:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5598:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5355,
                  "nodeType": "ExpressionStatement",
                  "src": "5598:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5357,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5339,
                          "src": "5678:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5688:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5678:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 5360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5691:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 5356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5670:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:53:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5362,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:53:21"
                },
                {
                  "assignments": [
                    5364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5364,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "5742:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5392,
                      "src": "5734:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5734:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5372,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5792:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CFNSwap_$5507",
                              "typeString": "contract CFNSwap"
                            }
                          ],
                          "id": 5368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5784:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5784:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5784:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5365,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "5756:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "5756:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5756:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5734:64:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5374,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5364,
                          "src": "5817:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5375,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5339,
                          "src": "5832:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5817:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e2062616c616e63652e",
                        "id": 5377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5841:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730",
                          "typeString": "literal_string \"Not enough token balance.\""
                        },
                        "value": "Not enough token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd1bf5f639528a9c0af85de27db343c1284df690ffa6bdf4e3d6c5090d68730",
                          "typeString": "literal_string \"Not enough token balance.\""
                        }
                      ],
                      "id": 5373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5809:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5809:60:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5379,
                  "nodeType": "ExpressionStatement",
                  "src": "5809:60:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5383,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "5907:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5384,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "5922:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5380,
                        "name": "erc20TokenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "5880:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1656",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "5880:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5880:50:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5386,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:50:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5388,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "5960:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5389,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "5975:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5387,
                      "name": "WithdrawToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "5946:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:37:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5391,
                  "nodeType": "EmitStatement",
                  "src": "5941:42:21"
                }
              ]
            },
            "functionSelector": "50baa622",
            "id": 5393,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5342,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5576:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5576:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5341,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "5557:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "5557:30:21"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "5505:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5536:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5393,
                  "src": "5528:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5528:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5518:31:21"
            },
            "returnParameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5588:0:21"
            },
            "scope": 5507,
            "src": "5496:494:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5444,
              "nodeType": "Block",
              "src": "6089:353:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5401,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "6107:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6132:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6124:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5402,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6124:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6124:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6107:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265206e756c6c2061646472657373",
                        "id": 5407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6136:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        },
                        "value": "Cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        }
                      ],
                      "id": 5400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6099:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6099:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5409,
                  "nodeType": "ExpressionStatement",
                  "src": "6099:62:21"
                },
                {
                  "assignments": [
                    5411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5411,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6180:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5444,
                      "src": "6172:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5410,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6172:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5417,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 5414,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "6198:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CFNSwap_$5507",
                            "typeString": "contract CFNSwap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CFNSwap_$5507",
                            "typeString": "contract CFNSwap"
                          }
                        ],
                        "id": 5413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6190:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6190:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6190:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6190:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6172:39:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5419,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "6229:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6239:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6229:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f696e2062616c616e63652e",
                        "id": 5422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6242:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8",
                          "typeString": "literal_string \"Not enough coin balance.\""
                        },
                        "value": "Not enough coin balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8",
                          "typeString": "literal_string \"Not enough coin balance.\""
                        }
                      ],
                      "id": 5418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6221:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6221:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5424,
                  "nodeType": "ExpressionStatement",
                  "src": "6221:48:21"
                },
                {
                  "assignments": [
                    5426,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5426,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6286:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5444,
                      "src": "6281:12:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5425,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6281:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 5433,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 5431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6334:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 5427,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "6299:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 5428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6299:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 5430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 5429,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "6325:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6299:34:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 5432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6299:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6280:57:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5435,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "6355:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 5436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6364:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 5434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6347:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6347:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5438,
                  "nodeType": "ExpressionStatement",
                  "src": "6347:36:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5440,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "6412:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5441,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5411,
                        "src": "6427:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5439,
                      "name": "WithdrawCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "6399:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6399:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5443,
                  "nodeType": "EmitStatement",
                  "src": "6394:41:21"
                }
              ]
            },
            "functionSelector": "cb1d9da9",
            "id": 5445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5396,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6077:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6077:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5395,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "6058:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6058:30:21"
              }
            ],
            "name": "withdrawCoinAll",
            "nameLocation": "6033:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6048:2:21"
            },
            "returnParameters": {
              "id": 5399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6089:0:21"
            },
            "scope": 5507,
            "src": "6024:418:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5505,
              "nodeType": "Block",
              "src": "6577:423:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5455,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "6595:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6620:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6612:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5456,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6612:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6612:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6595:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265206e756c6c2061646472657373",
                        "id": 5461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6624:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        },
                        "value": "Cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6873ee6d1304c61daaeb79e6b86ecf61d3aa7983d56dd96e868a369dd80d607",
                          "typeString": "literal_string \"Cannot be null address\""
                        }
                      ],
                      "id": 5454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6587:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6587:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5463,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5465,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5447,
                          "src": "6667:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6677:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6667:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 5468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6680:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 5464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6659:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6659:53:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5470,
                  "nodeType": "ExpressionStatement",
                  "src": "6659:53:21"
                },
                {
                  "assignments": [
                    5472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5472,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6731:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5505,
                      "src": "6723:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6723:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5478,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 5475,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "6749:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CFNSwap_$5507",
                            "typeString": "contract CFNSwap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CFNSwap_$5507",
                            "typeString": "contract CFNSwap"
                          }
                        ],
                        "id": 5474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6741:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6741:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6741:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6741:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6723:39:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5480,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5472,
                          "src": "6780:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5481,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5447,
                          "src": "6791:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6780:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f696e2062616c616e63652e",
                        "id": 5483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6800:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8",
                          "typeString": "literal_string \"Not enough coin balance.\""
                        },
                        "value": "Not enough coin balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f792b8169571f257f13901d5e0426eda9a5e93a3724c3122da9a07d2049c2ba8",
                          "typeString": "literal_string \"Not enough coin balance.\""
                        }
                      ],
                      "id": 5479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6772:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6772:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5485,
                  "nodeType": "ExpressionStatement",
                  "src": "6772:55:21"
                },
                {
                  "assignments": [
                    5487,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5487,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6844:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 5505,
                      "src": "6839:12:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5486,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6839:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 5494,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 5492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6892:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 5488,
                          "name": "receiveWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4848,
                          "src": "6857:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 5489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6857:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 5491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 5490,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5447,
                          "src": "6883:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6857:34:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 5493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6857:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6838:57:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5496,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5487,
                        "src": "6913:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 5497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6922:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 5495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6905:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6905:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5499,
                  "nodeType": "ExpressionStatement",
                  "src": "6905:36:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5501,
                        "name": "receiveWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4848,
                        "src": "6970:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 5502,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5447,
                        "src": "6985:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5500,
                      "name": "WithdrawCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "6957:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6957:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5504,
                  "nodeType": "EmitStatement",
                  "src": "6952:41:21"
                }
              ]
            },
            "functionSelector": "4eb264e8",
            "id": 5506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 5450,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6565:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6565:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5449,
                  "name": "isWhiteListControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4990,
                  "src": "6546:18:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6546:30:21"
              }
            ],
            "name": "withdrawCoin",
            "nameLocation": "6495:12:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5447,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6525:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5506,
                  "src": "6517:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6517:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6507:31:21"
            },
            "returnParameters": {
              "id": 5453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:0:21"
            },
            "scope": 5507,
            "src": "6486:514:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5508,
        "src": "284:6719:21",
        "usedErrors": []
      }
    ],
    "src": "32:6971:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-15T23:46:43.626Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}